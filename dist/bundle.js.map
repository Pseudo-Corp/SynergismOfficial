{"version":3,"sources":["webpack://synergismofficial/webpack/runtime/load script","webpack://synergismofficial/./node_modules/break_infinity.js/dist/break_infinity.esm.js","webpack://synergismofficial/./node_modules/eventemitter3/index.js","webpack://synergismofficial/./node_modules/lz-string/libs/lz-string.js","webpack://synergismofficial/./node_modules/pad-end/index.js","webpack://synergismofficial/./src/Achievements.ts","webpack://synergismofficial/./src/Ants.ts","webpack://synergismofficial/./src/Automation.ts","webpack://synergismofficial/./src/Buy.ts","webpack://synergismofficial/./src/Calculate.ts","webpack://synergismofficial/./src/Challenges.ts","webpack://synergismofficial/./src/Corruptions.ts","webpack://synergismofficial/./src/Cubes.ts","webpack://synergismofficial/./src/Events.ts","webpack://synergismofficial/./src/Generators.ts","webpack://synergismofficial/./src/Hypercubes.ts","webpack://synergismofficial/./src/ImportExport.ts","webpack://synergismofficial/./src/Platonic.ts","webpack://synergismofficial/./src/Plugins/Plugins.ts","webpack://synergismofficial/./src/Research.ts","webpack://synergismofficial/./src/Reset.ts","webpack://synergismofficial/./src/Runes.ts","webpack://synergismofficial/./src/Statistics.ts","webpack://synergismofficial/./src/History.ts","webpack://synergismofficial/./src/PlatonicCubes.ts","webpack://synergismofficial/./src/Shop.ts","webpack://synergismofficial/./src/EventListeners.ts","webpack://synergismofficial/./src/Helper.ts","webpack://synergismofficial/./src/Synergism.ts","webpack://synergismofficial/./src/CheckVariables.ts","webpack://synergismofficial/./src/Tax.ts","webpack://synergismofficial/./src/Talismans.ts","webpack://synergismofficial/./src/Tesseracts.ts","webpack://synergismofficial/./src/Toggles.ts","webpack://synergismofficial/./src/UpdateHTML.ts","webpack://synergismofficial/./src/UpdateVisuals.ts","webpack://synergismofficial/./src/Upgrades.ts","webpack://synergismofficial/./src/Utility.ts","webpack://synergismofficial/./src/Variables.ts","webpack://synergismofficial/./src/Plugins|lazy|/^/.*$/|groupOptions: {}|namespace object","webpack://synergismofficial/webpack/bootstrap","webpack://synergismofficial/webpack/runtime/compat get default export","webpack://synergismofficial/webpack/runtime/define property getters","webpack://synergismofficial/webpack/runtime/ensure chunk","webpack://synergismofficial/webpack/runtime/get javascript chunk filename","webpack://synergismofficial/webpack/runtime/hasOwnProperty shorthand","webpack://synergismofficial/webpack/runtime/make namespace object","webpack://synergismofficial/webpack/runtime/publicPath","webpack://synergismofficial/webpack/runtime/jsonp chunk loading","webpack://synergismofficial/webpack/startup"],"names":["inProgress","dataWebpackPrefix","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","NUMBER_EXP_MIN","powerOf10","powersOf10","i","push","Number","power","D","value","Decimal","ME","mantissa","exponent","fromMantissaExponent","ME_NN","fromMantissaExponent_noNormalize","affordGeometricSeries","resourcesAvailable","priceStart","priceRatio","currentOwned","actualStart","mul","pow","floor","div","sub","add","log10","sumGeometricSeries","numItems","this","NaN","undefined","m","e","fromDecimal","fromNumber","fromString","Object","defineProperty","prototype","get","set","enumerable","configurable","sign","sgn","fromValue","fromValue_noAlloc","abs","neg","negate","negated","round","ceil","trunc","other","plus","subtract","minus","multiply","times","divide","recip","reciprocal","reciprocate","cmp","compare","eq","equals","neq","notEquals","lt","lte","gt","gte","max","min","clamp","clampMin","clampMax","cmp_tolerance","tolerance","compare_tolerance","eq_tolerance","equals_tolerance","neq_tolerance","notEquals_tolerance","lt_tolerance","lte_tolerance","gt_tolerance","gte_tolerance","absLog10","pLog10","log","base","log2","ln","logarithm","pow10","isInteger","Math","exp","sqr","sqrt","cube","cbrt","dp","decimalPlaces","affordArithmeticSeries","priceAdd","b","b2","sumArithmeticSeries","efficiencyOfPurchase","cost","currentRpS","deltaRpS","randomDecimalForTesting","absMaxExponent","random","normalize","tempExponent","isFinite","isNaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","indexOf","parts","split","parseFloat","Error","toNumber","result","resultRounded","mantissaWithDecimalPlaces","places","len","numDigits","rounded","toFixed","toString","toExponential","replace","padEnd","toPrecision","valueOf","toJSON","toStringWithDecimalPlaces","biggerDecimal","smallerDecimal","decimal","divideBy","dividedBy","LN10","newMantissa","numberValue","temp","isSafeInteger","newExponent","residue","pow_base","factorial","n","E","sinh","PI","x","mod","cosh","tanh","asinh","acosh","atanh","ascensionPenalty","ascensions","egg","lessThanOrEqualTo","lessThan","greaterThanOrEqualTo","greaterThan","MAX_VALUE","MIN_VALUE","NUMBER_MAX_VALUE","NUMBER_MIN_VALUE","has","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","event","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","module","exports","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","charAt","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","forEach","c","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","resetValue","getNextValue","w","bits","resb","maxpower","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","string","maxLength","fillString","targetLen","parseInt","filled","fillLen","substr","achievementpointvalues","totalachievementpoints","reduce","adesc","adesc1","adesc2","adesc3","adesc4","adesc5","adesc6","adesc7","adesc8","adesc9","adesc10","adesc11","adesc12","adesc13","adesc14","adesc15","adesc16","adesc17","adesc18","adesc19","adesc20","adesc21","adesc22","adesc23","adesc24","adesc25","adesc26","adesc27","adesc28","adesc29","adesc30","adesc31","adesc32","adesc33","adesc34","adesc35","adesc36","adesc37","adesc38","adesc39","adesc40","adesc41","adesc42","adesc43","adesc44","adesc45","adesc46","adesc47","adesc48","adesc49","adesc50","adesc51","adesc52","adesc53","adesc54","adesc55","adesc56","adesc57","adesc58","adesc59","adesc60","adesc61","adesc62","adesc63","adesc64","adesc65","adesc66","adesc67","adesc68","adesc69","adesc70","adesc71","adesc72","adesc73","adesc74","adesc75","adesc76","adesc77","adesc78","adesc79","adesc80","adesc81","adesc82","adesc83","adesc84","adesc85","adesc86","adesc87","adesc88","adesc89","adesc90","adesc91","adesc92","adesc93","adesc94","adesc95","adesc96","adesc97","adesc98","adesc99","adesc100","adesc101","adesc102","adesc103","adesc104","adesc105","adesc106","adesc107","adesc108","adesc109","adesc110","adesc111","adesc112","adesc113","adesc114","adesc115","adesc116","adesc117","adesc118","adesc119","adesc120","adesc121","adesc122","adesc123","adesc124","adesc125","adesc126","adesc127","adesc128","adesc129","adesc130","adesc131","adesc132","adesc133","adesc134","adesc135","adesc136","adesc137","adesc138","adesc139","adesc140","adesc141","adesc142","adesc143","adesc144","adesc145","adesc146","adesc147","adesc148","adesc149","adesc150","adesc151","adesc152","adesc153","adesc154","adesc155","adesc156","adesc157","adesc158","adesc159","adesc160","adesc161","adesc162","adesc163","adesc164","adesc165","adesc166","adesc167","adesc168","adesc169","adesc170","adesc171","adesc172","adesc173","adesc174","adesc175","adesc176","adesc177","adesc178","adesc179","adesc180","adesc181","adesc182","adesc183","adesc184","adesc185","adesc186","adesc187","adesc188","adesc189","adesc190","adesc191","adesc192","adesc193","adesc194","adesc195","adesc196","adesc197","adesc198","adesc199","adesc200","adesc201","adesc202","adesc203","adesc204","adesc205","adesc206","adesc207","adesc208","adesc209","adesc210","adesc211","adesc212","adesc213","adesc214","adesc215","adesc216","adesc217","adesc218","adesc219","adesc220","adesc221","adesc222","adesc223","adesc224","adesc225","adesc226","adesc227","adesc228","adesc229","adesc230","adesc231","adesc232","adesc233","adesc234","adesc235","adesc236","adesc237","adesc238","adesc239","adesc240","adesc241","adesc242","adesc243","adesc244","adesc245","adesc246","adesc247","adesc248","adesc249","adesc250","adesc251","adesc252","areward","areward3","areward4","areward5","areward6","areward7","areward10","areward11","areward12","areward13","areward14","areward17","areward18","areward19","areward20","areward21","areward24","areward25","areward26","areward27","areward28","areward31","areward32","areward33","areward34","areward35","areward36","areward37","areward38","areward43","areward44","areward45","areward46","areward47","areward50","areward51","areward52","areward53","areward57","areward58","areward59","areward60","areward61","areward62","areward71","areward72","areward73","areward74","areward75","areward76","areward77","areward78","areward79","areward80","areward82","areward84","areward85","areward86","areward87","areward89","areward91","areward92","areward93","areward94","areward96","areward98","areward99","areward100","areward101","areward102","areward103","areward105","areward106","areward107","areward108","areward110","areward112","areward115","areward117","areward118","areward119","areward122","areward124","areward126","areward127","areward128","areward129","areward131","areward132","areward133","areward134","areward135","areward136","areward137","areward140","areward141","areward147","areward169","areward171","areward172","areward173","areward174","areward176","areward177","areward178","areward179","areward180","areward181","areward182","areward187","areward188","areward189","areward193","areward195","areward196","areward197","areward198","areward199","areward200","areward201","areward202","areward204","areward205","areward206","areward207","areward208","areward209","areward211","areward212","areward213","areward214","areward215","areward216","areward218","areward219","areward220","areward221","areward222","areward223","areward240","areward250","areward251","resetachievementcheck","achievementaward","challengeCompletionsBar","challengeCompletionsNotAuto","1","2","3","5","challengeachievementcheck","auto","generatorcheck","bar","ach","filter","o","includes","challengeArray","buildAchievementReq","buildingAchievementCheck","req","idx","ascensionAchievementCheck","score","ascendCountArray","constantArray","scoreArray","achievementdescriptions","y","z","k","document","getElementById","textContent","style","color","num","backgroundColor","antdesc","antdesc1","antdesc2","antdesc3","antdesc4","antdesc5","antdesc6","antdesc7","antdesc8","antspecies","antspecies1","antspecies2","antspecies3","antspecies4","antspecies5","antspecies6","antspecies7","antspecies8","antspecies9","antspecies10","antspecies11","antspecies12","antupgdesc","antupgdesc1","antupgdesc2","antupgdesc3","antupgdesc4","antupgdesc5","antupgdesc6","antupgdesc7","antupgdesc8","antupgdesc9","antupgdesc10","antupgdesc11","antupgdesc12","calculateCrumbToCoinExp","antUpgradeTexts","repeatAnt","antRepeat","updateAntDescription","el","la","ti","me","priceType","tier","getAntCost","originalCost","buyTo","getAntUpgradeCost","buyAntProducers","pos","type","sacrificeMult","antSacrificePointsToMultiplier","tag","cashToBuy","stepdown","buyFrom","thisCost","achRequirements","buyAntUpgrade","antUpgradeDescription","al","content1","content2","bonuslevel","c11","childNodes","points","multiplier","showSacrifice","sacRewards","display","antSacrificePoints","offerings","obtainium","talismanShards","commonFragments","uncommonFragments","rareFragments","epicFragments","legendaryFragments","mythicalFragments","sacrificeAnts","historyEntry","p","confirm","antSacrificePointsBefore","seconds","antSacrificePointsAfter","baseELO","effectiveELO","crumbs","crumbsPerSecond","unmaxed","baseAmount","linGrowth","autoBuyAnts","_ach","_cost","buyGenerator","state","q","achievementCheck","buyAutobuyers","autoUpgrades","getReductionValue","reduction","getCostAccelerator","buyingTo","factorialBit","multBit","sumNum","sumBit","buyAccelerator","autobuyer","getCostMultiplier","powBit","buyMultiplier","mantissaFactorialPartExtra","exponentFactorialPartExtra","factorialByExponent","fact","fact100exponent","known_log10s","needed","nums","obj","need","getCost","r","mlog10125","fastFactMultBuyTo","fr","fastFactMultBuyTo100","extra","buyMax","buyStart","buyInc","buyProducerTypes","Diamonds","Mythos","Particles","Coin","buyProducer","amounttype","buythisamount","buyUpgrades","addendum","buyCrystalUpgrades","u","toBuy","calculateCrystalBuy","boostAccelerator","automated","buyamount","getAcceleratorBoostCost","level","eff","linSum","getParticleCost","DR","buyParticleBuilding","getTesseractCost","intCost","subCost","buyTesseractBuilding","actualCost","buyRuneBonusLevels","baseCost","baseLevels","levelCap","requirementArray","blessingMultiplierArray","t","spiritMultiplierArray","calculateTotalCoinOwned","calculateTotalAcceleratorBoost","calculateSigmoidExponential","calculateAcceleratorMultiplier","calculateRecycleMultiplier","calculateRuneExpGiven","runeIndex","all","runeLevel","returnFactors","recycleMultiplier","allRuneExpAdditiveMultiplier","lookupTableRuneExp","assign","from","_","calculateRuneExpToLevel","calculateMaxRunes","increaseAll","calculateOfferings","calcMult","statistic","arr","persecond","calculateObtainium","calculateCorruptionPoints","calculateAutomaticObtainium","calculateTalismanEffects","positiveBonus","negativeBonus","talismansEffects","runesTalisman","talismanEffect","levels","runeNumber","calculateRuneLevels","calculateRuneBonuses","calculateAnts","bonusLevels","c11bonus","calculateAntSacrificeELO","antUpgradeSum","calculateAntSacrificeRewards","rewardsMult","calculateOffline","forceTime","maximumTimer","updatedTime","Date","now","timeAdd","simulatedTicks","tickValue","timeMultiplier","maxSimulatedTicks","progressBarWidth","automaticObtainium","runOffline","calculateTimeAcceleration","rune","width","ascCount","calculateSigmoid","constant","factor","divisor","coefficient","calculateCubeBlessings","cubeArray","powerBonus","mult","calculateCubeMultiplier","timeMult","basePoints","calculateSummationLinear","baseLevel","resourceAvailable","differenceCap","subtractCost","buyToLevel","calculateSummationNonLinear","diffPerLevel","buyAmount","alreadySpent","v","totalCost","CalcCorruptionStuff","corruptionArrayMultiplier","corruptionLevelSum","cubeBank","challengeModifier","corruptionMultiplier","bankMultiplier","effectiveScore","speed","baseScore","challengeScoreArrays1","challengeScoreArrays2","challengeScoreArrays3","cubeGain","tesseractGain","hypercubeGain","platonicGain","dailyResetCheck","console","d","h","getHours","getMinutes","s","getSeconds","getDate","getMonth","getFullYear","challengeDisplay","changefocus","quarksMultiplier","maxChallenges","CalcECC","descriptor","g","challengeRequirement","scoreArray1","scoreArray2","scoreArray3","scoreDisplay","border","constructor","ella","getChallengeConditions","toggleRetryChallenges","highestChallengeRewards","chalNum","highestValue","calculateChallengeRequirementMultiplier","completions","special","requirementMultiplier","effective","challenge","completion","c10Reduction","runChallengeSweep","dt","corruptionDisplay","visibility","corruptionTexts","description","current","planned","spiritContribution","image","4","6","7","8","9","10","setAttribute","corruptionButtonsAdd","rows","getElementsByClassName","row","createElement","className","text","createTextNode","appendChild","btn","span","id","onclick","addEventListener","corruptionLoadoutTableCreate","table","keys","insertRow","cell","insertCell","textAlign","corruptionLoadoutSaveLoad","corruptionLoadoutTableUpdate","updateRow","cells","save","loadout","corruptionCleanseConfirm","corrupt","setTimeout","openCube","toSpend","toSpendModulo","toSpendDiv20","blessings","accelerator","weight","pdf","offering","runeExp","antSpeed","antSacrifice","antELO","talismanBonus","globalSpeed","key","cubeUpgradeName","cubeBaseCost","cubeMaxLevel","cubeUpgradeDescriptions","getCubeCost","amountToBuy","metaData","cubeUpgradeDesc","updateCubeUpgradeBG","buyCubeUpgrades","Synergism","openHypercube","calculateHypercubeBlessings","extraTesseractBlessings","format24","Intl","DateTimeFormat","year","month","day","hour","hour12","minute","second","format12","getRealTime","use12","format","dateParts","formatToParts","map","period","dayPeriod","toUpperCase","updateSaveString","exportSynergism","__awaiter","thisArg","_arguments","generator","toClipboard","checked","localStorage","getItem","navigator","clipboard","writeText","catch","error","textArea","body","focus","select","execCommand","removeChild","click","P","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","resetGame","window","crypto","getRandomValues","Uint16Array","prompt","hold","codes","importSynergism","btoa","JSON","stringify","parse","atob","exporttest","setItem","promocodes","amount","first","addPrompt","quarkCounter","quarks","platonicUpgradeDesc","11","12","13","14","15","platUpgradeBaseCosts","cubes","tesseracts","hypercubes","platonics","abyssals","maxLevel","checkPlatonicUpgrade","checksum","resources","resourceNames","checks","canBuy","createPlatonicDescription","maxLevelAppend","resourceCheck","buyPlatonicUpgrades","RegisteredPlugins","loadPlugins","fileName","file","main","getResearchCost","buyResearch","isResearchUnlocked","isResearchMaxed","researchDescriptions","doc","maxRoombaResearchIndex","ascensionCount","challengecompletions","cumuSum","sum","indices","chievos","resdesc","updateResearchBG","repeatreset","resetrepeat","resetdetails","src","transcensionChallenge","reincarnationChallenge","offeringImage","offeringText","currencyImage1","resetObtainiumImage","resetobtainiumText","resetInfo","resetCurrencyGain","goal","goaldesc","updateAutoReset","updateTesseractAutoBuyAmount","reset","fast","historyKind","historyCategory","historyUse","diamonds","resetUpgrades","mythos","particles","opscheck","c10Completions","usedCorruptions","corruptionScore","wowCubes","wowTesseracts","wowHypercubes","wowPlatonicCubes","currentChallenge","resetResearches","resetAnts","resetTalismans","ant12","destroy","item","displayRuneInformation","updatelevelup","SILevelMult","amountPerOffering","calculateOfferingsToLevelXTimes","check","resetofferings","redeemShards","runeIndexPlusOne","cubeUpgraded","unlockedRune","levelsToAdd","levelsAdded","amountArr","toSpendTotal","expPerOff","runeToUpdate","loadStatisticsAccelerator","loadStatisticsMultiplier","loadStatisticsCubeMultipliers","acc","desc","16","17","18","19","20","21","22","23","24","25","26","27","loadStatisticsOfferingMultipliers","c15RewardUpdate","exponentRequirements","updateDisplayC15Rewards","values","keepExponent","formatPlain","str","formatDecimalString","conditionalFormatPerSecond","numOrStr","historyGains","img","formatter","imgTitle","antMulti","extractStringExponent","onlyif","historyGainsOrder","historyKinds","resetHistoryTableMapping","resetHistoryCorruptionImages","resetHistoryCorruptionTitles","match","category","kind","date","shift","resetHistoryPushNewRow","resetHistoryRenderRow","tbody","querySelector","insertBefore","lastChild","_category","colsUsed","rowContentHtml","kindMeta","toLocaleString","formatTimeShort","gains","gainIdx","showing","gainInfo","oldMulti","newMulti","diff","corruptions","resetHistoryFormatCorruptions","innerHTML","resetHistoryRenderAllTables","categoryToRender","targetTable","resetHistoryRenderFullTable","corruptionIdx","openPlatonic","toSpendDiv40000","hypercubeBonus","taxes","scoreBonus","RNGesus","gainValues","commonDrops","calculatePlatonicBlessings","platonicArray","DRThreshold","shopDescriptions","rofl","lmao","lol","buyShopUpgrades","useConsumable","generateEventHandlers","ordinals","resetCheck","buildingTypes","buildingTypesAlternate","buildingOrds","buildingOrdsToNum","index2","buildingTypesAlternate2","buildingTypesAlternate3","particleBuildingCosts","tesseractBuildingCosts","resourceTypes","resourceType","talismanBuyPercents","talismanBuyPercentsOrd","talismanItemNames","antProducerCostVals","antUpgradeCostVals","platonicUpgrades","saveSynergy","button","borderColor","resetHistoryTogglePerSecond","resetShopUpgrades","files","target","saveItem","addTimers","time","maxQuarkTimer","getMaxQuarkTime","automaticTools","obtainiumGain","notMaxed","maxxed","checkMaxRunes","isTesting","intervalHold","interval","Proxy","setInterval","clearInt","clearInterval","splice","worlds","coins","coinsThisPrestige","coinsThisTranscension","coinsThisReincarnation","coinsTotal","firstOwnedCoin","firstGeneratedCoin","firstCostCoin","firstProduceCoin","secondOwnedCoin","secondGeneratedCoin","secondCostCoin","secondProduceCoin","thirdOwnedCoin","thirdGeneratedCoin","thirdCostCoin","thirdProduceCoin","fourthOwnedCoin","fourthGeneratedCoin","fourthCostCoin","fourthProduceCoin","fifthOwnedCoin","fifthGeneratedCoin","fifthCostCoin","fifthProduceCoin","firstOwnedDiamonds","firstGeneratedDiamonds","firstCostDiamonds","firstProduceDiamonds","secondOwnedDiamonds","secondGeneratedDiamonds","secondCostDiamonds","secondProduceDiamonds","thirdOwnedDiamonds","thirdGeneratedDiamonds","thirdCostDiamonds","thirdProduceDiamonds","fourthOwnedDiamonds","fourthGeneratedDiamonds","fourthCostDiamonds","fourthProduceDiamonds","fifthOwnedDiamonds","fifthGeneratedDiamonds","fifthCostDiamonds","fifthProduceDiamonds","firstOwnedMythos","firstGeneratedMythos","firstCostMythos","firstProduceMythos","secondOwnedMythos","secondGeneratedMythos","secondCostMythos","secondProduceMythos","thirdOwnedMythos","thirdGeneratedMythos","thirdCostMythos","thirdProduceMythos","fourthOwnedMythos","fourthGeneratedMythos","fourthCostMythos","fourthProduceMythos","fifthOwnedMythos","fifthGeneratedMythos","fifthCostMythos","fifthProduceMythos","firstOwnedParticles","firstGeneratedParticles","firstCostParticles","firstProduceParticles","secondOwnedParticles","secondGeneratedParticles","secondCostParticles","secondProduceParticles","thirdOwnedParticles","thirdGeneratedParticles","thirdCostParticles","thirdProduceParticles","fourthOwnedParticles","fourthGeneratedParticles","fourthCostParticles","fourthProduceParticles","fifthOwnedParticles","fifthGeneratedParticles","fifthCostParticles","fifthProduceParticles","firstOwnedAnts","firstGeneratedAnts","firstCostAnts","firstProduceAnts","secondOwnedAnts","secondGeneratedAnts","secondCostAnts","secondProduceAnts","thirdOwnedAnts","thirdGeneratedAnts","thirdCostAnts","thirdProduceAnts","fourthOwnedAnts","fourthGeneratedAnts","fourthCostAnts","fourthProduceAnts","fifthOwnedAnts","fifthGeneratedAnts","fifthCostAnts","fifthProduceAnts","sixthOwnedAnts","sixthGeneratedAnts","sixthCostAnts","sixthProduceAnts","seventhOwnedAnts","seventhGeneratedAnts","seventhCostAnts","seventhProduceAnts","eighthOwnedAnts","eighthGeneratedAnts","eighthCostAnts","eighthProduceAnts","ascendBuilding1","owned","generated","ascendBuilding2","ascendBuilding3","ascendBuilding4","ascendBuilding5","multiplierCost","multiplierBought","acceleratorCost","acceleratorBought","acceleratorBoostBought","acceleratorBoostCost","upgrades","fill","prestigeCount","transcendCount","reincarnationCount","prestigePoints","transcendPoints","reincarnationPoints","prestigeShards","transcendShards","reincarnationShards","toggles","28","29","30","31","32","33","resourceGenerators","keepUpgrades","coinUpgrades","prestigeUpgrades","crystalUpgrades","transcendUpgrades","autobuyers","generators","highestchallengecompletions","challenge15Exponent","highestChallenge15Exponent","retrychallenges","transcension","reincarnation","ascension","researchPoints","obtainiumtimer","obtainiumlocktoggle","obtainiumpersecond","maxobtainiumpersecond","maxobtainium","researches","unlocks","coinone","cointwo","cointhree","coinfour","prestige","generation","transcend","reincarnate","rrow1","rrow2","rrow3","rrow4","achievements","achievementPoints","prestigenomultiplier","prestigenoaccelerator","transcendnomultiplier","transcendnoaccelerator","reincarnatenomultiplier","reincarnatenoaccelerator","prestigenocoinupgrades","transcendnocoinupgrades","transcendnocoinorprestigeupgrades","reincarnatenocoinupgrades","reincarnatenocoinorprestigeupgrades","reincarnatenocoinprestigeortranscendupgrades","reincarnatenocoinprestigetranscendorgeneratorupgrades","crystalUpgradesCost","runelevels","runeexp","runeshards","offeringlocktoggle","maxofferings","offeringpersecond","prestigecounter","transcendcounter","reincarnationcounter","offlinetick","prestigeamount","transcendamount","reincarnationamount","fastestprestige","fastesttranscend","fastestreincarnate","fastestAscend","resettoggle1","resettoggle2","resettoggle3","tesseractAutoBuyerToggle","tesseractAutoBuyerAmount","coinbuyamount","crystalbuyamount","mythosbuyamount","particlebuyamount","offeringbuyamount","tesseractbuyamount","shoptoggles","coin","tabnumber","subtabNumber","Map","loaded1009","loaded1009hotfix1","loaded10091","loaded1010","loaded10101","shopUpgrades","offeringPotion","obtainiumPotion","offeringTimerLevel","obtainiumTimerLevel","offeringAutoLevel","obtainiumAutoLevel","instantChallengeBought","cashGrabLevel","antSpeedLevel","talismanBought","challengeExtension","challenge10Tomes","seasonPassLevel","cubeToQuarkBought","tesseractToQuarkBought","hypercubeToQuarkBought","autoSacrificeToggle","autoFortifyToggle","autoEnhanceToggle","autoResearchToggle","autoResearch","autoSacrifice","sacrificeTimer","quarkstimer","antPoints","antUpgrades","antSacrificeTimer","antSacrificeTimerReal","talismanLevels","talismanRarity","talismanOne","talismanTwo","talismanThree","talismanFour","talismanFive","talismanSix","talismanSeven","buyTalismanShardPercent","autoAntSacrifice","autoAntSacTimer","autoAntSacrificeMode","antMax","ascensionCounter","cubeUpgrades","wowAbyssals","cubeBlessings","tesseractBlessings","hypercubeBlessings","platonicBlessings","ascendShards","autoAscend","autoAscendMode","autoAscendThreshold","roombaResearchIndex","cubesThisAscension","ascStatToggles","prototypeCorruptions","corruptionLoadouts","corruptionShowStats","constantUpgrades","history","historyCountMax","historyShowPerSecond","autoChallengeRunning","autoChallengeIndex","autoChallengeToggles","autoChallengeStartExponent","autoChallengeTimer","start","exit","enter","runeBlessingLevels","runeSpiritLevels","runeBlessingBuyAmount","runeSpiritBuyAmount","autoTesseracts","saveString","brokenfile1","kongregatetest","dayCheck","dayTimer","cubeOpenedDaily","cubeQuarkDaily","tesseractOpenedDaily","tesseractQuarkDaily","hypercubeOpenedDaily","hypercubeQuarkDaily","loadedOct4Hotfix","loadedNov13Vers","loadedDec16Vers","version","rngCode","blankSave","loadSynergy","oldCodesUsed","size","oldPromoKeys","Boolean","prop","isArray","offerpromo24used","refundThese","refundReward","checkVariablesOnLoad","challenges","maxCubesPerSec","maxAllTime","cpsOnC10Comp","testArray","ouch","accuracy","long","standard","standardString","front","back","frontFormatted","BigInt","mantissaLook","powerDigits","powerFront","powerLook","powerLookF","msMaxSeconds","padStart","updateCubesPerSec","updateAllTick","updateAllMultiplier","c7","resourceGain","crystalExponent","first6CoinUp","multipliers","compareC","calculatetax","addcoin","resetCurrency","pm","chal","reinchal","ascendchal","prestigePow","transcendPow","manual","leaving","resetConfirmation","reqCheck","comp","maxCompletions","maxInc","counter","conf","updateAll","pop","cheapestTesseractBuilding","intCostArray","reductionValue","scalings","originalCosts","resource","ord","particleOriginalCost","array","constantIntervals","lastUpdate","createTimer","performance","tick","deltaMean","dtEffective","delta","tack","maxCount","activeElement","localName","stopPropagation","preventDefault","location","href","script","head","ver","title","dec","clear","alert","talismanResourceCosts","shard","commonFragment","uncommonFragment","rareFragment","epicFragment","legendaryFragment","mythicalFragment","getTalismanResourceInfo","percentage","obtainiumCost","offeringCost","maxBuyObtainium","maxBuyOffering","updateTalismanCostDisplay","talismanCostInfo","TalismanName","toggleTalismanBuy","updateTalismanInventory","buyTalismanResources","talismanResourcesData","showTalismanEffect","showTalismanPrices","showEnhanceTalismanPrices","costArray","showRespecInformation","runeName","runeModifier","changeTalismanModifier","checkSum","respecTalismanConfirm","respecTalismanCancel","updateTalismanAppearance","rarity","buyTalismanLevels","priceMult","buyTalismanEnhance","openTesseract","calculateTesseractBlessings","extraCubeBlessings","tesseractArray","tabNumberConst","toggleTabs","subTabList","subTabsInMainTab","buttonID","btns","children","classList","contains","toggleSettings","toggleauto","toggleChallenges","toggleAutoChallengeRun","toggleBuyAmount","quantity","toggleShops","tabs","mainTab","tabName","unlocked","0","tabSwitcher","setActiveSettingScreen","subTabID","toggleBuildingScreen","toggleRuneScreen","toggleCubeSubTab","toggleCorruptionLoadoutsStats","keyboardTabChange","dir","maxTab","minTab","Infinity","handleLoopBack","numSubTabs","toggleSubTab","subTab","toggleautoreset","toggleautobuytesseract","autos","getAttribute","toggleId","finishedString","toggleResearchBuy","toggleAutoResearch","toggleAutoSacrifice","screen","toggleautofortify","toggleautoenhance","subtab","clickedButton","subtabEl","parentNode","querySelectorAll","remove","refreshStats","toggleShopConfirmation","toggleAntMaxBuy","toggleAntAutoSacrifice","mode","toggleMaxBuyCube","cubeTab","updateAutoChallenge","toggleAutoChallengesIgnore","toggleAutoChallengeTextColors","toggleAutoAscend","updateRuneBlessingBuyAmount","toggleAutoTesseracts","toggleCorruptionLevel","stats","toggleAscStatPerSecond","revealStuff","example","example2","example3","example4","example5","example6","example7","example8","example9","example10","example11","example12","example13","example14","example15","example16","example17","example18","example19","example20","example21","example22","example23","example24","example25","example26","example27","example28","example29","example30","example31","ex","automationUnlocks","34","35","hideStuff","settingsTab","visualTab","buildings","runes","research","settings","shop","ants","traits","htmlInserts","_a","updateAscensionStats","buttoncolorchange","toggle","costParticles","ascendBuilding","costAnts","updateChallengeDisplay","updateChallengeLevel","updateAchievementBG","fixDisplay1","fixDisplay2","CSSAscend","top","left","CSSRuneBlessings","showCorruptionStatsLoadouts","tess","hyper","platonic","fillers","visualUpdateBuildings","upper","totalProductionDivisor","place","warning","perSecNames","visualUpdateUpgrades","visualUpdateAchievements","visualUpdateRunes","talismans","visualUpdateChallenges","visualUpdateResearch","visualUpdateAnts","timer","visualUpdateCubes","prefixes","augmentAccuracy","hypercubeArray","visualUpdateCorruptions","visualUpdateSettings","onExportQuarks","maxExportQuarks","visualUpdateShop","upgdesc","upgdesc1","upgdesc2","upgdesc3","upgdesc4","upgdesc5","upgdesc6","upgdesc7","upgdesc8","upgdesc9","upgdesc10","upgdesc11","upgdesc12","upgdesc13","upgdesc14","upgdesc15","upgdesc16","upgdesc17","upgdesc18","upgdesc19","upgdesc20","upgdesc21","upgdesc22","upgdesc23","upgdesc24","upgdesc25","upgdesc26","upgdesc27","upgdesc28","upgdesc29","upgdesc30","upgdesc31","upgdesc32","upgdesc33","upgdesc34","upgdesc35","upgdesc36","upgdesc37","upgdesc38","upgdesc39","upgdesc40","upgdesc41","upgdesc42","upgdesc43","upgdesc44","upgdesc45","upgdesc46","upgdesc47","upgdesc48","upgdesc49","upgdesc50","upgdesc51","upgdesc52","upgdesc53","upgdesc54","upgdesc55","upgdesc56","upgdesc57","upgdesc58","upgdesc59","upgdesc60","upgdesc61","upgdesc62","upgdesc63","upgdesc64","upgdesc65","upgdesc66","upgdesc67","upgdesc68","upgdesc69","upgdesc70","upgdesc71","upgdesc72","upgdesc73","upgdesc74","upgdesc75","upgdesc76","upgdesc77","upgdesc78","upgdesc79","upgdesc80","upgdesc81","upgdesc82","upgdesc83","upgdesc84","upgdesc85","upgdesc86","upgdesc87","upgdesc88","upgdesc89","upgdesc90","upgdesc91","upgdesc92","upgdesc93","upgdesc94","upgdesc95","upgdesc96","upgdesc97","upgdesc98","upgdesc99","upgdesc100","upgdesc101","upgdesc102","upgdesc103","upgdesc104","upgdesc105","upgdesc106","upgdesc107","upgdesc108","upgdesc109","upgdesc110","upgdesc111","upgdesc112","upgdesc113","upgdesc114","upgdesc115","upgdesc116","upgdesc117","upgdesc118","upgdesc119","upgdesc120","upgdesc121","upgdesc122","upgdesc123","upgdesc124","upgdesc125","crystalupgdesc","crystalupgdesc1","crystalupgdesc2","crystalupgdesc3","crystalupgdesc4","crystalupgdesc5","crystalupgdesc6","crystalupgdesc7","crystalupgdesc8","constantUpgDesc","constantUpgDesc1","constantUpgDesc2","constantUpgDesc3","constantUpgDesc4","constantUpgDesc5","constantUpgDesc6","constantUpgDesc7","constantUpgDesc8","constantUpgDesc9","constantUpgDesc10","upgradetexts","upgradedescriptions","currency","upgradeeffects","crystalupgradedescriptions","upgradeupdate","constUpgEffect","getConstUpgradeMetadata","constantUpgradeDescriptions","returnConstUpgEffect","buyConstantUpgrades","isDecimal","smallestInc","MAX_SAFE_INTEGER","sumContents","productContents","sortWithIndeces","toSort","sort","stripIndents","trim","Globals","runediv","runeexpbase","upgradeCosts","crystalUpgradeCostIncrement","researchBaseCosts","researchMaxLevels","ticker","costDivisor","freeAccelerator","totalAccelerator","freeAcceleratorBoost","totalAcceleratorBoost","acceleratorPower","acceleratorEffect","acceleratorEffectDisplay","generatorPower","freeMultiplier","totalMultiplier","multiplierPower","multiplierEffect","challengeOneLog","freeMultiplierBoost","totalMultiplierBoost","globalCoinMultiplier","totalCoinOwned","prestigeMultiplier","buildingPower","reincarnationMultiplier","coinOneMulti","coinTwoMulti","coinThreeMulti","coinFourMulti","coinFiveMulti","globalCrystalMultiplier","globalMythosMultiplier","grandmasterMultiplier","atomsMultiplier","mythosBuildingPower","challengeThreeMultiplier","totalMythosOwned","prestigePointGain","challengeFivePower","transcendPointGain","reincarnationPointGain","produceFirst","produceSecond","produceThird","produceFourth","produceFifth","produceTotal","produceFirstDiamonds","produceSecondDiamonds","produceThirdDiamonds","produceFourthDiamonds","produceFifthDiamonds","produceDiamonds","produceFirstMythos","produceSecondMythos","produceThirdMythos","produceFourthMythos","produceFifthMythos","produceMythos","produceFirstParticles","produceSecondParticles","produceThirdParticles","produceFourthParticles","produceFifthParticles","produceParticles","producePerSecond","producePerSecondDiamonds","producePerSecondMythos","producePerSecondParticles","uFourteenMulti","uFifteenMulti","tuSevenMulti","currentTab","researchfiller1","researchfiller2","cardinals","challengeBaseRequirements","taxdivisor","taxdivisorcheck","runemultiplierincrease","one","two","three","four","five","mythosupgrade13","mythosupgrade14","mythosupgrade15","challengefocus","maxexponent","maxbuyresearch","effectiveLevelMult","optimalOfferingTimer","optimalObtainiumTimer","runeSum","shopBaseCosts","offerPotion","offerTimer","obtainiumTimer","offerAuto","obtainiumAuto","instantChallenge","cashGrab","seasonPass","challenge10Upgrade","cubeToQuark","tesseractToQuark","hypercubeToQuark","shopConfirmation","globalAntMult","antMultiplier","antOneProduce","antTwoProduce","antThreeProduce","antFourProduce","antFiveProduce","antSixProduce","antSevenProduce","antEightProduce","antCostGrowth","antUpgradeBaseCost","antUpgradeCostIncreases","bonusant1","bonusant2","bonusant3","bonusant4","bonusant5","bonusant6","bonusant7","bonusant8","bonusant9","bonusant10","bonusant11","bonusant12","rune1level","rune2level","rune3level","rune4level","rune5level","rune1Talisman","rune2Talisman","rune3Talisman","rune4Talisman","rune5Talisman","talisman1Effect","talisman2Effect","talisman3Effect","talisman4Effect","talisman5Effect","talisman6Effect","talisman7Effect","talisman6Power","talisman7Quarks","runescreen","settingscreen","talismanResourceObtainiumCosts","talismanResourceOfferingCosts","talismanLevelCostMultiplier","talismanPositiveModifier","talismanNegativeModifier","commonTalismanEnhanceCost","uncommonTalismanEnchanceCost","rareTalismanEnchanceCost","epicTalismanEnhanceCost","legendaryTalismanEnchanceCost","mythicalTalismanEnchanceCost","talismanRespec","mirrorTalismanStats","timeWarp","blessingMultiplier","spiritMultiplier","runeBlessings","runeSpirits","effectiveRuneBlessingPower","effectiveRuneSpiritPower","blessingBaseCost","spiritBaseCost","triggerChallenge","prevReductionValue","buildingSubTab","blessingbase","blessingDRPower","giftbase","giftDRPower","benedictionbase","benedictionDRPower","platonicCubeBase","platonicDRPower","cubeBonusMultiplier","tesseractBonusMultiplier","hypercubeBonusMultiplier","platonicBonusMultiplier","buyMaxCubeUpgrades","autoOfferingCounter","researchOrderByCost","divisivenessPower","maladaptivePower","lazinessMultiplier","hyperchallengedMultiplier","illiteracyPower","deflationMultiplier","extinctionMultiplier","droughtMultiplier","financialcollapsePower","corruptionPointMultipliers","ascendBuildingProduction","third","fourth","fifth","freeUpgradeAccelerator","freeUpgradeMultiplier","acceleratorMultiplier","multiplierMultiplier","constUpgradeCosts","globalConstantMult","autoTalismanTimer","autoChallengeTimerIncrement","corruptionTrigger","challenge15Rewards","cube1","coinExponent","runeBonus","cube2","transcendChallengeReduction","reincarnationChallengeReduction","bonusAntLevel","cube3","blessingBonus","constantBonus","cube4","spiritBonus","autoResetTimers","upgradeMultiplier","webpackAsyncContext","__webpack_require__","code","ids","__webpack_module_cache__","moduleId","__webpack_modules__","getter","__esModule","definition","chunkId","promises","url","needAttach","scripts","getElementsByTagName","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","bind","Symbol","toStringTag","installedChunks","179","installedChunkData","promise","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","resolves","chunkLoadingGlobal","self"],"mappings":"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GAAK,IACtCpa,EAAEoa,qBAAqB,IAAM,EAAI,GAAK,IACtCpa,EAAEoa,qBAAqB,IAAM,EAAI,GAAK,GAGzCN,EAAsB99B,IAC/B,MAAMq+B,GAAWC,EAAgC,EAAxB9tC,GAAU8tC,GAAO9tC,GAA1B,IAAC8tC,EACjB,MAAMC,EAAU,CAAC,GAAQ,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIjG,IAAI+F,GAC1DG,EAAU,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7D,IAAK,IAAIruC,EAAI,EAAGA,EAAIouC,EAAQ9gC,OAAQtN,IAAK,CACrC,GAAU,IAANA,IAAsB,MAAV6P,GAA2B,MAAVA,GAA2B,MAAVA,GAC9C,OAAO,kBAAoBw+B,EAAQruC,IAAM,EAE7C,GAAI6P,GAASu+B,EAAQpuC,GACjB,OAAO,kBAAoBquC,EAAQruC,IAAM,EAGjD,OAAO,GAEL4tC,EAAmB/9B,GAAU,sBAAuBA,IAAU,gBAAkBA,GAChFy+B,EAAU,CACZ,iFACA,gFACA,uFACA,+EACA,iEACA,8CACA,8CACA,8CACA,8CACA,+CACA,8CACA,8CACA,gDACA,gDACA,gDACA,qDACA,qDACA,yDACA,yDACA,yDACA,8FACA,iEACA,yEACA,iFACA,qEACA,qFACA,qFACA,sDACA,8DACA,8DACA,uGACA,8GACA,uEACA,+EACA,gFACA,oDACA,sDACA,sDACA,sEACA,2EACA,yHACA,kEACA,kEACA,kEACA,0EACA,0DACA,0FACA,gGACA,8FACA,oGACA,4DACA,4DACA,+DACA,iEACA,mEACA,0DACA,0DACA,0DACA,0DACA,2DACA,oEACA,kFACA,yFACA,yFACA,yFACA,qFACA,sFACA,gFACA,4EACA,uFACA,kFACA,kFACA,kFACA,kFACA,kFACA,sGACA,wGACA,uGACA,uGACA,6GACA,6GACA,kGACA,mFACA,oGACA,wEACA,6DACA,sDACA,2DACA,mEACA,4FACA,8CACA,oDACA,uEACA,gEACA,mGACA,wFACA,kEACA,kEACA,+GACA,oJACA,wGACA,qEACA,6DA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","file":"bundle.js","sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"synergismofficial:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => fn(event));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import padEnd from 'pad-end';\n\n// consider adding them together pointless, just return the larger one\n\nvar MAX_SIGNIFICANT_DIGITS = 17; // Highest value you can safely put here is Number.MAX_SAFE_INTEGER-MAX_SIGNIFICANT_DIGITS\n\nvar EXP_LIMIT = 9e15; // The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MAX = 308; // The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; // Tolerance which is used for Number conversion to compensate floating-point error.\n\nvar ROUND_TOLERANCE = 1e-10;\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}();\n\nvar D = function D(value) {\n  return value instanceof Decimal ? value : new Decimal(value);\n};\n\nvar ME = function ME(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent(mantissa, exponent);\n};\n\nvar ME_NN = function ME_NN(mantissa, exponent) {\n  return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n};\n\nfunction affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n  var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n  return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10() / priceRatio.log10());\n}\n\nfunction sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n  return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n}\n\nfunction affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n  // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n  // where a is actualStart, d is priceAdd and S is resourcesAvailable\n  // then floor it and you're done!\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n  var b = actualStart.sub(priceAdd.div(2));\n  var b2 = b.pow(2);\n  return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n}\n\nfunction sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n  var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n  return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n}\n\nfunction efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n  return cost.div(currentRpS).add(cost.div(deltaRpS));\n}\n/**\n * The Decimal's value is simply mantissa * 10^exponent.\n */\n\n\nvar Decimal =\n/** @class */\nfunction () {\n  function Decimal(value) {\n    /**\n     * A number (double) with absolute value between [1, 10) OR exactly 0.\n     * If mantissa is ever 10 or greater, it should be normalized\n     * (divide by 10 and add 1 to exponent until it is less than 10,\n     * or multiply by 10 and subtract 1 from exponent until it is 1 or greater).\n     * Infinity/-Infinity/NaN will cause bad things to happen.\n     */\n    this.mantissa = NaN;\n    /**\n     * A number (integer) between -EXP_LIMIT and EXP_LIMIT.\n     * Non-integral/out of bounds will cause bad things to happen.\n     */\n\n    this.exponent = NaN;\n\n    if (value === undefined) {\n      this.m = 0;\n      this.e = 0;\n    } else if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else {\n      this.fromString(value);\n    }\n  }\n\n  Object.defineProperty(Decimal.prototype, \"m\", {\n    get: function get() {\n      return this.mantissa;\n    },\n    set: function set(value) {\n      this.mantissa = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"e\", {\n    get: function get() {\n      return this.exponent;\n    },\n    set: function set(value) {\n      this.exponent = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal.prototype, \"s\", {\n    get: function get() {\n      return this.sign();\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.e = 0;\n        this.m = 0;\n        return;\n      }\n\n      if (this.sgn() !== value) {\n        this.m = -this.m;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Decimal.fromMantissaExponent = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent(mantissa, exponent);\n  };\n\n  Decimal.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n  };\n\n  Decimal.fromDecimal = function (value) {\n    return new Decimal().fromDecimal(value);\n  };\n\n  Decimal.fromNumber = function (value) {\n    return new Decimal().fromNumber(value);\n  };\n\n  Decimal.fromString = function (value) {\n    return new Decimal().fromString(value);\n  };\n\n  Decimal.fromValue = function (value) {\n    return new Decimal().fromValue(value);\n  };\n\n  Decimal.fromValue_noAlloc = function (value) {\n    return value instanceof Decimal ? value : new Decimal(value);\n  };\n\n  Decimal.abs = function (value) {\n    return D(value).abs();\n  };\n\n  Decimal.neg = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negate = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.negated = function (value) {\n    return D(value).neg();\n  };\n\n  Decimal.sign = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.sgn = function (value) {\n    return D(value).sign();\n  };\n\n  Decimal.round = function (value) {\n    return D(value).round();\n  };\n\n  Decimal.floor = function (value) {\n    return D(value).floor();\n  };\n\n  Decimal.ceil = function (value) {\n    return D(value).ceil();\n  };\n\n  Decimal.trunc = function (value) {\n    return D(value).trunc();\n  };\n\n  Decimal.add = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.plus = function (value, other) {\n    return D(value).add(other);\n  };\n\n  Decimal.sub = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.subtract = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.minus = function (value, other) {\n    return D(value).sub(other);\n  };\n\n  Decimal.mul = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.multiply = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.times = function (value, other) {\n    return D(value).mul(other);\n  };\n\n  Decimal.div = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.divide = function (value, other) {\n    return D(value).div(other);\n  };\n\n  Decimal.recip = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocal = function (value) {\n    return D(value).recip();\n  };\n\n  Decimal.reciprocate = function (value) {\n    return D(value).reciprocate();\n  };\n\n  Decimal.cmp = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.compare = function (value, other) {\n    return D(value).cmp(other);\n  };\n\n  Decimal.eq = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.equals = function (value, other) {\n    return D(value).eq(other);\n  };\n\n  Decimal.neq = function (value, other) {\n    return D(value).neq(other);\n  };\n\n  Decimal.notEquals = function (value, other) {\n    return D(value).notEquals(other);\n  };\n\n  Decimal.lt = function (value, other) {\n    return D(value).lt(other);\n  };\n\n  Decimal.lte = function (value, other) {\n    return D(value).lte(other);\n  };\n\n  Decimal.gt = function (value, other) {\n    return D(value).gt(other);\n  };\n\n  Decimal.gte = function (value, other) {\n    return D(value).gte(other);\n  };\n\n  Decimal.max = function (value, other) {\n    return D(value).max(other);\n  };\n\n  Decimal.min = function (value, other) {\n    return D(value).min(other);\n  };\n\n  Decimal.clamp = function (value, min, max) {\n    return D(value).clamp(min, max);\n  };\n\n  Decimal.clampMin = function (value, min) {\n    return D(value).clampMin(min);\n  };\n\n  Decimal.clampMax = function (value, max) {\n    return D(value).clampMax(max);\n  };\n\n  Decimal.cmp_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.compare_tolerance = function (value, other, tolerance) {\n    return D(value).cmp_tolerance(other, tolerance);\n  };\n\n  Decimal.eq_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.equals_tolerance = function (value, other, tolerance) {\n    return D(value).eq_tolerance(other, tolerance);\n  };\n\n  Decimal.neq_tolerance = function (value, other, tolerance) {\n    return D(value).neq_tolerance(other, tolerance);\n  };\n\n  Decimal.notEquals_tolerance = function (value, other, tolerance) {\n    return D(value).notEquals_tolerance(other, tolerance);\n  };\n\n  Decimal.lt_tolerance = function (value, other, tolerance) {\n    return D(value).lt_tolerance(other, tolerance);\n  };\n\n  Decimal.lte_tolerance = function (value, other, tolerance) {\n    return D(value).lte_tolerance(other, tolerance);\n  };\n\n  Decimal.gt_tolerance = function (value, other, tolerance) {\n    return D(value).gt_tolerance(other, tolerance);\n  };\n\n  Decimal.gte_tolerance = function (value, other, tolerance) {\n    return D(value).gte_tolerance(other, tolerance);\n  };\n\n  Decimal.log10 = function (value) {\n    return D(value).log10();\n  };\n\n  Decimal.absLog10 = function (value) {\n    return D(value).absLog10();\n  };\n\n  Decimal.pLog10 = function (value) {\n    return D(value).pLog10();\n  };\n\n  Decimal.log = function (value, base) {\n    return D(value).log(base);\n  };\n\n  Decimal.log2 = function (value) {\n    return D(value).log2();\n  };\n\n  Decimal.ln = function (value) {\n    return D(value).ln();\n  };\n\n  Decimal.logarithm = function (value, base) {\n    return D(value).logarithm(base);\n  };\n\n  Decimal.pow10 = function (value) {\n    if (Number.isInteger(value)) {\n      return ME_NN(1, value);\n    }\n\n    return ME(Math.pow(10, value % 1), Math.trunc(value));\n  };\n\n  Decimal.pow = function (value, other) {\n    // Fast track: 10^integer\n    if (typeof value === \"number\" && value === 10 && typeof other === \"number\" && Number.isInteger(other)) {\n      return ME_NN(1, other);\n    }\n\n    return D(value).pow(other);\n  };\n\n  Decimal.exp = function (value) {\n    return D(value).exp();\n  };\n\n  Decimal.sqr = function (value) {\n    return D(value).sqr();\n  };\n\n  Decimal.sqrt = function (value) {\n    return D(value).sqrt();\n  };\n\n  Decimal.cube = function (value) {\n    return D(value).cube();\n  };\n\n  Decimal.cbrt = function (value) {\n    return D(value).cbrt();\n  };\n\n  Decimal.dp = function (value) {\n    return D(value).dp();\n  };\n\n  Decimal.decimalPlaces = function (value) {\n    return D(value).dp();\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something\n   * with exponentially increasing cost each purchase (start at priceStart,\n   * multiply by priceRatio, already own currentOwned), how much of it can you buy?\n   * Adapted from Trimps source code.\n   */\n\n\n  Decimal.affordGeometricSeries = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {\n    return affordGeometricSeries(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it multiplies by priceRatio each purchase?\n   */\n\n\n  Decimal.sumGeometricSeries = function (numItems, priceStart, priceRatio, currentOwned) {\n    return sumGeometricSeries(numItems, D(priceStart), D(priceRatio), currentOwned);\n  };\n  /**\n   * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\n   * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\n   * how much of it can you buy?\n   */\n\n\n  Decimal.affordArithmeticSeries = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {\n    return affordArithmeticSeries(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * How much resource would it cost to buy (numItems) items if you already have currentOwned,\n   * the initial price is priceStart and it adds priceAdd each purchase?\n   * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\n   */\n\n\n  Decimal.sumArithmeticSeries = function (numItems, priceStart, priceAdd, currentOwned) {\n    return sumArithmeticSeries(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n  };\n  /**\n   * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\n   * the lowest efficiency score is the better one to purchase.\n   * From Frozen Cookies:\n   * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\n   */\n\n\n  Decimal.efficiencyOfPurchase = function (cost, currentRpS, deltaRpS) {\n    return efficiencyOfPurchase(D(cost), D(currentRpS), D(deltaRpS));\n  };\n\n  Decimal.randomDecimalForTesting = function (absMaxExponent) {\n    // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n    // 5% of the time, have a mantissa of 0\n    if (Math.random() * 20 < 1) {\n      return ME_NN(0, 0);\n    }\n\n    var mantissa = Math.random() * 10; // 10% of the time, have a simple mantissa\n\n    if (Math.random() * 10 < 1) {\n      mantissa = Math.round(mantissa);\n    }\n\n    mantissa *= Math.sign(Math.random() * 2 - 1);\n    var exponent = Math.floor(Math.random() * absMaxExponent * 2) - absMaxExponent;\n    return ME(mantissa, exponent);\n    /*\n      Examples:\n            randomly test pow:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var pow = Math.random()*20-10;\n      if (Math.random()*2 < 1) { pow = Math.round(pow); }\n      var result = Decimal.pow(a, pow);\n      [\"(\" + a.toString() + \")^\" + pow.toString(), result.toString()]\n            randomly test add:\n            var a = Decimal.randomDecimalForTesting(1000);\n      var b = Decimal.randomDecimalForTesting(17);\n      var c = a.mul(b);\n      var result = a.add(c);\n      [a.toString() + \"+\" + c.toString(), result.toString()]\n    */\n  };\n  /**\n   * When mantissa is very denormalized, use this to normalize much faster.\n   */\n\n\n  Decimal.prototype.normalize = function () {\n    if (this.m >= 1 && this.m < 10) {\n      return this;\n    } // TODO: I'm worried about mantissa being negative 0 here which is why I set it again, but it may never matter\n\n\n    if (this.m === 0) {\n      this.m = 0;\n      this.e = 0;\n      return this;\n    }\n\n    var tempExponent = Math.floor(Math.log10(Math.abs(this.m)));\n    this.m = tempExponent === NUMBER_EXP_MIN ? this.m * 10 / 1e-323 : this.m / powerOf10(tempExponent);\n    this.e += tempExponent;\n    return this;\n  };\n\n  Decimal.prototype.fromMantissaExponent = function (mantissa, exponent) {\n    // SAFETY: don't let in non-numbers\n    if (!isFinite(mantissa) || !isFinite(exponent)) {\n      mantissa = Number.NaN;\n      exponent = Number.NaN;\n      return this;\n    }\n\n    this.m = mantissa;\n    this.e = exponent; // Non-normalized mantissas can easily get here, so this is mandatory.\n\n    this.normalize();\n    return this;\n  };\n  /**\n   * Well, you know what you're doing!\n   */\n\n\n  Decimal.prototype.fromMantissaExponent_noNormalize = function (mantissa, exponent) {\n    this.m = mantissa;\n    this.e = exponent;\n    return this;\n  };\n\n  Decimal.prototype.fromDecimal = function (value) {\n    this.m = value.m;\n    this.e = value.e;\n    return this;\n  };\n\n  Decimal.prototype.fromNumber = function (value) {\n    // SAFETY: Handle Infinity and NaN in a somewhat meaningful way.\n    if (isNaN(value)) {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else if (value === Number.POSITIVE_INFINITY) {\n      this.m = 1;\n      this.e = EXP_LIMIT;\n    } else if (value === Number.NEGATIVE_INFINITY) {\n      this.m = -1;\n      this.e = EXP_LIMIT;\n    } else if (value === 0) {\n      this.m = 0;\n      this.e = 0;\n    } else {\n      this.e = Math.floor(Math.log10(Math.abs(value))); // SAFETY: handle 5e-324, -5e-324 separately\n\n      this.m = this.e === NUMBER_EXP_MIN ? value * 10 / 1e-323 : value / powerOf10(this.e); // SAFETY: Prevent weirdness.\n\n      this.normalize();\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromString = function (value) {\n    if (value.indexOf(\"e\") !== -1) {\n      var parts = value.split(\"e\");\n      this.m = parseFloat(parts[0]);\n      this.e = parseFloat(parts[1]); // Non-normalized mantissas can easily get here, so this is mandatory.\n\n      this.normalize();\n    } else if (value === \"NaN\") {\n      this.m = Number.NaN;\n      this.e = Number.NaN;\n    } else {\n      this.fromNumber(parseFloat(value));\n\n      if (isNaN(this.m)) {\n        throw Error(\"[DecimalError] Invalid argument: \" + value);\n      }\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.fromValue = function (value) {\n    if (value instanceof Decimal) {\n      return this.fromDecimal(value);\n    }\n\n    if (typeof value === \"number\") {\n      return this.fromNumber(value);\n    }\n\n    if (typeof value === \"string\") {\n      return this.fromString(value);\n    }\n\n    this.m = 0;\n    this.e = 0;\n    return this;\n  };\n\n  Decimal.prototype.toNumber = function () {\n    // Problem: new Decimal(116).toNumber() returns 115.99999999999999.\n    // TODO: How to fix in general case? It's clear that if toNumber() is\n    //  VERY close to an integer, we want exactly the integer.\n    //  But it's not clear how to specifically write that.\n    //  So I'll just settle with 'exponent >= 0 and difference between rounded\n    //  and not rounded < 1e-9' as a quick fix.\n    // var result = this.m*Math.pow(10, this.e);\n    if (!isFinite(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.e > NUMBER_EXP_MAX) {\n      return this.m > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    }\n\n    if (this.e < NUMBER_EXP_MIN) {\n      return 0;\n    } // SAFETY: again, handle 5e-324, -5e-324 separately\n\n\n    if (this.e === NUMBER_EXP_MIN) {\n      return this.m > 0 ? 5e-324 : -5e-324;\n    }\n\n    var result = this.m * powerOf10(this.e);\n\n    if (!isFinite(result) || this.e < 0) {\n      return result;\n    }\n\n    var resultRounded = Math.round(result);\n\n    if (Math.abs(resultRounded - result) < ROUND_TOLERANCE) {\n      return resultRounded;\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.mantissaWithDecimalPlaces = function (places) {\n    // https://stackoverflow.com/a/37425022\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return Number.NaN;\n    }\n\n    if (this.m === 0) {\n      return 0;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.ceil(Math.log10(Math.abs(this.m)));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n  };\n\n  Decimal.prototype.toString = function () {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\";\n    }\n\n    if (this.e < 21 && this.e > -7) {\n      return this.toNumber().toString();\n    }\n\n    return this.m + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toExponential = function (places) {\n    // https://stackoverflow.com/a/37425022\n    // TODO: Some unfixed cases:\n    //  new Decimal(\"1.2345e-999\").toExponential()\n    //  \"1.23450000000000015e-999\"\n    //  new Decimal(\"1e-999\").toExponential()\n    //  \"1.000000000000000000e-999\"\n    // TBH I'm tempted to just say it's a feature.\n    // If you're doing pretty formatting then why don't you know how many decimal places you want...?\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\") + \"e+0\";\n    } // two cases:\n    // 1) exponent is < 308 and > -324: use basic toFixed\n    // 2) everything else: we have to do it ourselves!\n\n\n    if (this.e > NUMBER_EXP_MIN && this.e < NUMBER_EXP_MAX) {\n      return this.toNumber().toExponential(places);\n    }\n\n    if (!isFinite(places)) {\n      places = MAX_SIGNIFICANT_DIGITS;\n    }\n\n    var len = places + 1;\n    var numDigits = Math.max(1, Math.ceil(Math.log10(Math.abs(this.m))));\n    var rounded = Math.round(this.m * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n    return rounded.toFixed(Math.max(len - numDigits, 0)) + \"e\" + (this.e >= 0 ? \"+\" : \"\") + this.e;\n  };\n\n  Decimal.prototype.toFixed = function (places) {\n    if (isNaN(this.m) || isNaN(this.e)) {\n      return \"NaN\";\n    }\n\n    if (this.e >= EXP_LIMIT) {\n      return this.m > 0 ? \"Infinity\" : \"-Infinity\";\n    }\n\n    if (this.e <= -EXP_LIMIT || this.m === 0) {\n      return \"0\" + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    } // two cases:\n    // 1) exponent is 17 or greater: just print out mantissa with the appropriate number of zeroes after it\n    // 2) exponent is 16 or less: use basic toFixed\n\n\n    if (this.e >= MAX_SIGNIFICANT_DIGITS) {\n      return this.m.toString().replace(\".\", \"\").padEnd(this.e + 1, \"0\") + (places > 0 ? padEnd(\".\", places + 1, \"0\") : \"\");\n    }\n\n    return this.toNumber().toFixed(places);\n  };\n\n  Decimal.prototype.toPrecision = function (places) {\n    if (this.e <= -7) {\n      return this.toExponential(places - 1);\n    }\n\n    if (places > this.e) {\n      return this.toFixed(places - this.e - 1);\n    }\n\n    return this.toExponential(places - 1);\n  };\n\n  Decimal.prototype.valueOf = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  Decimal.prototype.toStringWithDecimalPlaces = function (places) {\n    return this.toExponential(places);\n  };\n\n  Decimal.prototype.abs = function () {\n    return ME_NN(Math.abs(this.m), this.e);\n  };\n\n  Decimal.prototype.neg = function () {\n    return ME_NN(-this.m, this.e);\n  };\n\n  Decimal.prototype.negate = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.negated = function () {\n    return this.neg();\n  };\n\n  Decimal.prototype.sign = function () {\n    return Math.sign(this.m);\n  };\n\n  Decimal.prototype.sgn = function () {\n    return this.sign();\n  };\n\n  Decimal.prototype.round = function () {\n    if (this.e < -1) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.round(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.floor = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) >= 0 ? new Decimal(0) : new Decimal(-1);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.floor(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.ceil = function () {\n    if (this.e < -1) {\n      return Math.sign(this.m) > 0 ? new Decimal(1) : new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.ceil(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.trunc = function () {\n    if (this.e < 0) {\n      return new Decimal(0);\n    }\n\n    if (this.e < MAX_SIGNIFICANT_DIGITS) {\n      return new Decimal(Math.trunc(this.toNumber()));\n    }\n\n    return this;\n  };\n\n  Decimal.prototype.add = function (value) {\n    // figure out which is bigger, shrink the mantissa of the smaller\n    // by the difference in exponents, add mantissas, normalize and return\n    // TODO: Optimizations and simplification may be possible, see https://github.com/Patashu/break_infinity.js/issues/8\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal;\n    }\n\n    if (decimal.m === 0) {\n      return this;\n    }\n\n    var biggerDecimal;\n    var smallerDecimal;\n\n    if (this.e >= decimal.e) {\n      biggerDecimal = this;\n      smallerDecimal = decimal;\n    } else {\n      biggerDecimal = decimal;\n      smallerDecimal = this;\n    }\n\n    if (biggerDecimal.e - smallerDecimal.e > MAX_SIGNIFICANT_DIGITS) {\n      return biggerDecimal;\n    } // Have to do this because adding numbers that were once integers but scaled down is imprecise.\n    // Example: 299 + 18\n\n\n    return ME(Math.round(1e14 * biggerDecimal.m + 1e14 * smallerDecimal.m * powerOf10(smallerDecimal.e - biggerDecimal.e)), biggerDecimal.e - 14);\n  };\n\n  Decimal.prototype.plus = function (value) {\n    return this.add(value);\n  };\n\n  Decimal.prototype.sub = function (value) {\n    return this.add(D(value).neg());\n  };\n\n  Decimal.prototype.subtract = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.minus = function (value) {\n    return this.sub(value);\n  };\n\n  Decimal.prototype.mul = function (value) {\n    // This version avoids an extra conversion to Decimal, if possible. Since the\n    // mantissa is -10...10, any number short of MAX/10 can be safely multiplied in\n    if (typeof value === \"number\") {\n      if (value < 1e307 && value > -1e307) {\n        return ME(this.m * value, this.e);\n      } // If the value is larger than 1e307, we can divide that out of mantissa (since it's\n      // greater than 1, it won't underflow)\n\n\n      return ME(this.m * 1e-307 * value, this.e + 307);\n    }\n\n    var decimal = typeof value === \"string\" ? new Decimal(value) : value;\n    return ME(this.m * decimal.m, this.e + decimal.e);\n  };\n\n  Decimal.prototype.multiply = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.times = function (value) {\n    return this.mul(value);\n  };\n\n  Decimal.prototype.div = function (value) {\n    return this.mul(D(value).recip());\n  };\n\n  Decimal.prototype.divide = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.divideBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.dividedBy = function (value) {\n    return this.div(value);\n  };\n\n  Decimal.prototype.recip = function () {\n    return ME(1 / this.m, -this.e);\n  };\n\n  Decimal.prototype.reciprocal = function () {\n    return this.recip();\n  };\n\n  Decimal.prototype.reciprocate = function () {\n    return this.recip();\n  };\n  /**\n   * -1 for less than value, 0 for equals value, 1 for greater than value\n   */\n\n\n  Decimal.prototype.cmp = function (value) {\n    var decimal = D(value); // TODO: sign(a-b) might be better? https://github.com/Patashu/break_infinity.js/issues/12\n\n    /*\n    from smallest to largest:\n          -3e100\n    -1e100\n    -3e99\n    -1e99\n    -3e0\n    -1e0\n    -3e-99\n    -1e-99\n    -3e-100\n    -1e-100\n    0\n    1e-100\n    3e-100\n    1e-99\n    3e-99\n    1e0\n    3e0\n    1e99\n    3e99\n    1e100\n    3e100\n          */\n\n    if (this.m === 0) {\n      if (decimal.m === 0) {\n        return 0;\n      }\n\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (decimal.m > 0) {\n        return -1;\n      }\n    }\n\n    if (decimal.m === 0) {\n      if (this.m < 0) {\n        return -1;\n      }\n\n      if (this.m > 0) {\n        return 1;\n      }\n    }\n\n    if (this.m > 0) {\n      if (decimal.m < 0) {\n        return 1;\n      }\n\n      if (this.e > decimal.e) {\n        return 1;\n      }\n\n      if (this.e < decimal.e) {\n        return -1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    if (this.m < 0) {\n      if (decimal.m > 0) {\n        return -1;\n      }\n\n      if (this.e > decimal.e) {\n        return -1;\n      }\n\n      if (this.e < decimal.e) {\n        return 1;\n      }\n\n      if (this.m > decimal.m) {\n        return 1;\n      }\n\n      if (this.m < decimal.m) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    throw Error(\"Unreachable code\");\n  };\n\n  Decimal.prototype.compare = function (value) {\n    return this.cmp(value);\n  };\n\n  Decimal.prototype.eq = function (value) {\n    var decimal = D(value);\n    return this.e === decimal.e && this.m === decimal.m;\n  };\n\n  Decimal.prototype.equals = function (value) {\n    return this.eq(value);\n  };\n\n  Decimal.prototype.neq = function (value) {\n    return !this.eq(value);\n  };\n\n  Decimal.prototype.notEquals = function (value) {\n    return this.neq(value);\n  };\n\n  Decimal.prototype.lt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m > 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m <= 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m < decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m > 0 && this.e < decimal.e;\n    }\n\n    return decimal.m > 0 || this.e > decimal.e;\n  };\n\n  Decimal.prototype.lte = function (value) {\n    return !this.gt(value);\n  };\n\n  Decimal.prototype.gt = function (value) {\n    var decimal = D(value);\n\n    if (this.m === 0) {\n      return decimal.m < 0;\n    }\n\n    if (decimal.m === 0) {\n      return this.m > 0;\n    }\n\n    if (this.e === decimal.e) {\n      return this.m > decimal.m;\n    }\n\n    if (this.m > 0) {\n      return decimal.m < 0 || this.e > decimal.e;\n    }\n\n    return decimal.m < 0 && this.e < decimal.e;\n  };\n\n  Decimal.prototype.gte = function (value) {\n    return !this.lt(value);\n  };\n\n  Decimal.prototype.max = function (value) {\n    var decimal = D(value);\n    return this.lt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.min = function (value) {\n    var decimal = D(value);\n    return this.gt(decimal) ? decimal : this;\n  };\n\n  Decimal.prototype.clamp = function (min, max) {\n    return this.max(min).min(max);\n  };\n\n  Decimal.prototype.clampMin = function (min) {\n    return this.max(min);\n  };\n\n  Decimal.prototype.clampMax = function (max) {\n    return this.min(max);\n  };\n\n  Decimal.prototype.cmp_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n  };\n\n  Decimal.prototype.compare_tolerance = function (value, tolerance) {\n    return this.cmp_tolerance(value, tolerance);\n  };\n  /**\n   * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\n   * For example, if you put in 1e-9, then any number closer to the\n   * larger number than (larger number)*1e-9 will be considered equal.\n   */\n\n\n  Decimal.prototype.eq_tolerance = function (value, tolerance) {\n    var decimal = D(value); // https://stackoverflow.com/a/33024979\n    // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n    return Decimal.lte(this.sub(decimal).abs(), Decimal.max(this.abs(), decimal.abs()).mul(tolerance));\n  };\n\n  Decimal.prototype.equals_tolerance = function (value, tolerance) {\n    return this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.neq_tolerance = function (value, tolerance) {\n    return !this.eq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.notEquals_tolerance = function (value, tolerance) {\n    return this.neq_tolerance(value, tolerance);\n  };\n\n  Decimal.prototype.lt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n  };\n\n  Decimal.prototype.lte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n  };\n\n  Decimal.prototype.gt_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n  };\n\n  Decimal.prototype.gte_tolerance = function (value, tolerance) {\n    var decimal = D(value);\n    return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n  };\n\n  Decimal.prototype.log10 = function () {\n    return this.e + Math.log10(this.m);\n  };\n\n  Decimal.prototype.absLog10 = function () {\n    return this.e + Math.log10(Math.abs(this.m));\n  };\n\n  Decimal.prototype.pLog10 = function () {\n    return this.m <= 0 || this.e < 0 ? 0 : this.log10();\n  };\n\n  Decimal.prototype.log = function (base) {\n    // UN-SAFETY: Most incremental game cases are log(number := 1 or greater, base := 2 or greater).\n    // We assume this to be true and thus only need to return a number, not a Decimal,\n    return Math.LN10 / Math.log(base) * this.log10();\n  };\n\n  Decimal.prototype.log2 = function () {\n    return 3.32192809488736234787 * this.log10();\n  };\n\n  Decimal.prototype.ln = function () {\n    return 2.30258509299404568402 * this.log10();\n  };\n\n  Decimal.prototype.logarithm = function (base) {\n    return this.log(base);\n  };\n\n  Decimal.prototype.pow = function (value) {\n    // UN-SAFETY: Accuracy not guaranteed beyond ~9~11 decimal places.\n    // TODO: Decimal.pow(new Decimal(0.5), 0); or Decimal.pow(new Decimal(1), -1);\n    //  makes an exponent of -0! Is a negative zero ever a problem?\n    var numberValue = value instanceof Decimal ? value.toNumber() : value; // TODO: Fast track seems about neutral for performance.\n    //  It might become faster if an integer pow is implemented,\n    //  or it might not be worth doing (see https://github.com/Patashu/break_infinity.js/issues/4 )\n    // Fast track: If (this.e*value) is an integer and mantissa^value\n    // fits in a Number, we can do a very fast method.\n\n    var temp = this.e * numberValue;\n    var newMantissa;\n\n    if (Number.isSafeInteger(temp)) {\n      newMantissa = Math.pow(this.m, numberValue);\n\n      if (isFinite(newMantissa) && newMantissa !== 0) {\n        return ME(newMantissa, temp);\n      }\n    } // Same speed and usually more accurate.\n\n\n    var newExponent = Math.trunc(temp);\n    var residue = temp - newExponent;\n    newMantissa = Math.pow(10, numberValue * Math.log10(this.m) + residue);\n\n    if (isFinite(newMantissa) && newMantissa !== 0) {\n      return ME(newMantissa, newExponent);\n    } // return Decimal.exp(value*this.ln());\n    // UN-SAFETY: This should return NaN when mantissa is negative and value is non-integer.\n\n\n    var result = Decimal.pow10(numberValue * this.absLog10()); // this is 2x faster and gives same values AFAIK\n\n    if (this.sign() === -1 && numberValue % 2 === 1) {\n      return result.neg();\n    }\n\n    return result;\n  };\n\n  Decimal.prototype.pow_base = function (value) {\n    return D(value).pow(this);\n  };\n\n  Decimal.prototype.factorial = function () {\n    // Using Stirling's Approximation.\n    // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n    var n = this.toNumber() + 1;\n    return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n  };\n\n  Decimal.prototype.exp = function () {\n    var x = this.toNumber(); // Fast track: if -706 < this < 709, we can use regular exp.\n\n    if (-706 < x && x < 709) {\n      return Decimal.fromNumber(Math.exp(x));\n    }\n\n    return Decimal.pow(Math.E, x);\n  };\n\n  Decimal.prototype.sqr = function () {\n    return ME(Math.pow(this.m, 2), this.e * 2);\n  };\n\n  Decimal.prototype.sqrt = function () {\n    if (this.m < 0) {\n      return new Decimal(Number.NaN);\n    }\n\n    if (this.e % 2 !== 0) {\n      return ME(Math.sqrt(this.m) * 3.16227766016838, Math.floor(this.e / 2));\n    } // Mod of a negative number is negative, so != means '1 or -1'\n\n\n    return ME(Math.sqrt(this.m), Math.floor(this.e / 2));\n  };\n\n  Decimal.prototype.cube = function () {\n    return ME(Math.pow(this.m, 3), this.e * 3);\n  };\n\n  Decimal.prototype.cbrt = function () {\n    var sign = 1;\n    var mantissa = this.m;\n\n    if (mantissa < 0) {\n      sign = -1;\n      mantissa = -mantissa;\n    }\n\n    var newMantissa = sign * Math.pow(mantissa, 1 / 3);\n    var mod = this.e % 3;\n\n    if (mod === 1 || mod === -1) {\n      return ME(newMantissa * 2.1544346900318837, Math.floor(this.e / 3));\n    }\n\n    if (mod !== 0) {\n      return ME(newMantissa * 4.6415888336127789, Math.floor(this.e / 3));\n    } // mod != 0 at this point means 'mod == 2 || mod == -2'\n\n\n    return ME(newMantissa, Math.floor(this.e / 3));\n  }; // Some hyperbolic trig functions that happen to be easy\n\n\n  Decimal.prototype.sinh = function () {\n    return this.exp().sub(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.cosh = function () {\n    return this.exp().add(this.negate().exp()).div(2);\n  };\n\n  Decimal.prototype.tanh = function () {\n    return this.sinh().div(this.cosh());\n  };\n\n  Decimal.prototype.asinh = function () {\n    return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n  };\n\n  Decimal.prototype.acosh = function () {\n    return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n  };\n\n  Decimal.prototype.atanh = function () {\n    if (this.abs().gte(1)) {\n      return Number.NaN;\n    }\n\n    return Decimal.ln(this.add(1).div(new Decimal(1).sub(this))) / 2;\n  };\n  /**\n   * Joke function from Realm Grinder\n   */\n\n\n  Decimal.prototype.ascensionPenalty = function (ascensions) {\n    if (ascensions === 0) {\n      return this;\n    }\n\n    return this.pow(Math.pow(10, -ascensions));\n  };\n  /**\n   * Joke function from Cookie Clicker. It's 'egg'\n   */\n\n\n  Decimal.prototype.egg = function () {\n    return this.add(9);\n  };\n\n  Decimal.prototype.lessThanOrEqualTo = function (other) {\n    return this.cmp(other) < 1;\n  };\n\n  Decimal.prototype.lessThan = function (other) {\n    return this.cmp(other) < 0;\n  };\n\n  Decimal.prototype.greaterThanOrEqualTo = function (other) {\n    return this.cmp(other) > -1;\n  };\n\n  Decimal.prototype.greaterThan = function (other) {\n    return this.cmp(other) > 0;\n  };\n\n  Decimal.prototype.decimalPlaces = function () {\n    return this.dp();\n  };\n\n  Decimal.prototype.dp = function () {\n    if (!isFinite(this.mantissa)) {\n      return NaN;\n    }\n\n    if (this.exponent >= MAX_SIGNIFICANT_DIGITS) {\n      return 0;\n    }\n\n    var mantissa = this.mantissa;\n    var places = -this.exponent;\n    var e = 1;\n\n    while (Math.abs(Math.round(mantissa * e) / e - mantissa) > ROUND_TOLERANCE) {\n      e *= 10;\n      places++;\n    }\n\n    return places > 0 ? places : 0;\n  };\n\n  Object.defineProperty(Decimal, \"MAX_VALUE\", {\n    get: function get() {\n      return MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"MIN_VALUE\", {\n    get: function get() {\n      return MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MAX_VALUE\", {\n    get: function get() {\n      return NUMBER_MAX_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Decimal, \"NUMBER_MIN_VALUE\", {\n    get: function get() {\n      return NUMBER_MIN_VALUE;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Decimal;\n}();\nvar MAX_VALUE = ME_NN(1, EXP_LIMIT);\nvar MIN_VALUE = ME_NN(1, -EXP_LIMIT);\nvar NUMBER_MAX_VALUE = D(Number.MAX_VALUE);\nvar NUMBER_MIN_VALUE = D(Number.MIN_VALUE);\n\nexport default Decimal;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n","import { player } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { Synergism } from './Events';\r\nimport { sumContents } from './Utility';\r\nconst achievementpointvalues = [0,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    2, 8, 10, 2, 8, 10, 10,\r\n    2, 8, 10, 10, 10, 10, 10,\r\n    2, 4, 6, 8, 10, 10, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    1, 2, 4, 6, 8, 9, 10,\r\n    10, 10, 10, 10, 10, 10, 10,\r\n    10, 10, 10, 10, 10, 10, 10,\r\n    20, 20, 20, 40, 60, 60, 100,\r\n    20, 20, 40, 40, 60, 60, 100,\r\n    20, 20, 40, 40, 60, 60, 100,\r\n    20, 40, 40, 40, 60, 60, 100,\r\n    40, 40, 40, 60, 60, 100, 100,\r\n    40, 40, 60, 60, 100, 100, 100,\r\n    20, 40, 40, 60, 60, 100, 100,\r\n    40, 60, 100, 60, 100, 100, 40,\r\n    40, 40, 40, 40, 40, 40, 40,\r\n    40, 40, 40, 40, 100, 100, 0\r\n];\r\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0);\r\nconst adesc = {\r\n    adesc1: \"A Loyal Employee: Hire your first worker.\",\r\n    adesc2: \"Small Business: Hire 10 workers.\",\r\n    adesc3: \"Now we're synergizing!: Hire 100 workers.\",\r\n    adesc4: \"Gaining Redundancies: Hire 1,000 workers.\",\r\n    adesc5: \"A cog in the machine: Hire 5,000 workers.\",\r\n    adesc6: \"A nail in the machine: Hire 10,000 workers.\",\r\n    adesc7: \"Are we even in the machine anymore?: Hire 20,000 workers.\",\r\n    adesc8: \"STONKS!!!: Purchase 1 Investment.\",\r\n    adesc9: \"Planning ahead: Purchase 10 Investments.\",\r\n    adesc10: \"Inside Trading: Purchase 100 Investments.\",\r\n    adesc11: \"Outside Trading?: Purchase 1,000 Investments.\",\r\n    adesc12: \"Market Takeover: Purchase 5,000 Investments.\",\r\n    adesc13: \"Trickle-Down Economics: Purchase 10,000 Investments.\",\r\n    adesc14: \"Eliminated Regulation: Purchase 20,000 Investments.\",\r\n    adesc15: \"Stationery!: Build 1 Printer.\",\r\n    adesc16: \"Printing Press: Build 10 Printers.\",\r\n    adesc17: \"It prints free money!: Build 100 Printers.\",\r\n    adesc18: \"Solving Our Debts: Build 1,000 Printers.\",\r\n    adesc19: \"Monopolizing the market: Build 5,000 Printers.\",\r\n    adesc20: \"We're running out of Ink!: Build 10,000 Printers.\",\r\n    adesc21: \"3D-printing the universe: Build 20,000 Printers.\",\r\n    adesc22: \"A national treasure: Establish 1 Coin Mint.\",\r\n    adesc23: \"Now with competition!: Establish 10 Coin Mints.\",\r\n    adesc24: \"Counterfeiting with Style!: Establish 100 Coin Mints.\",\r\n    adesc25: \"Why do we need all these?: Establish 1000 Coin Mints.\",\r\n    adesc26: \"No really, why??: Establish 5,000 Coin Mints.\",\r\n    adesc27: \"Is no one to stop us???: Establish 10,000 Coin Mints.\",\r\n    adesc28: \"Oh well, time to mint: Establish 20,000 Coin Mints.\",\r\n    adesc29: \"Newton's Apprentice: Create 1 Alchemy.\",\r\n    adesc30: \"Lab Work: Create 10 Alchemies.\",\r\n    adesc31: \"Satanic Becomings: Create 66 Alchemies.\",\r\n    adesc32: \"Satan Incarnate: Create 666 Alchemies.\",\r\n    adesc33: \"Is this more demonic?: Create 6,666 Alchemies.\",\r\n    adesc34: \"Golden Paradise: Create 17,777 Alchemies.\",\r\n    adesc35: \"Unlocking secrets to the world: Create 42,777 Alchemies.\",\r\n    adesc36: \"Leveling up: Prestige for at least 1 Diamond.\",\r\n    adesc37: \"High-Tiered: Prestige for at least 1e+6 Diamonds.\",\r\n    adesc38: \"Highly Regarded: Prestige for at least 1e+100 Diamonds.\",\r\n    adesc39: \"Prestigious: Prestige for at least 1e+1000 Diamonds.\",\r\n    adesc40: \"Legendary: Prestige for at least 1e+10000 Diamonds.\",\r\n    adesc41: \"Divine: Prestige for at least 1e+77777 Diamonds.\",\r\n    adesc42: \"Perfectly Respected: Prestige for at least 1e+250000 Diamonds.\",\r\n    adesc43: \"A Simple Detour: Transcend for at least 1 Mythos.\",\r\n    adesc44: \"Tunnel Vision: Transcend for at least 1e+6 Mythos.\",\r\n    adesc45: \"Risen from the Ashes: Transcend for at least 1e+50 Mythos.\",\r\n    adesc46: \"Paradigm Shift: Transcend for at least 1e+308 Mythos.\",\r\n    adesc47: \"Preparation: Transcend for at least 1e+2000 Mythos.\",\r\n    adesc48: \"Revising the Plan: Transcend for at least 1e+25000 Mythos.\",\r\n    adesc49: \"Leaving the Universe: Transcend for at least 1e+100000 Mythos.\",\r\n    adesc50: \"Going Quantum: Reincarnate for at least 1 Particle.\",\r\n    adesc51: \"Tunneling Vision: Reincarnate for at least 100,000 Particles.\",\r\n    adesc52: \"Simulating the World: Reincarnate for at least 1e+30 Particles.\",\r\n    adesc53: \"Multidimensional Creation: Reincarnate for at least 1e+200 Particles.\",\r\n    adesc54: \"Lepton Dance: Reincarnate for at least 1e+1500 Particles.\",\r\n    adesc55: \"Do we have enough yet?: Reincarnate for at least 1e+5000 Particles.\",\r\n    adesc56: \"I Feel Luck in My Cells: Reincarnate for at least 1e+7777 Particles.\",\r\n    adesc57: \"One Way Only: Prestige without buying multipliers.\",\r\n    adesc58: \"Authentic Shifting: Transcend without having bought a multiplier.\",\r\n    adesc59: \"The Singularity: Reincarnate without having bought a multiplier.\",\r\n    adesc60: \"Gotta go SLOW!: Prestige without buying Accelerators or Accelerator Boosts.\",\r\n    adesc61: \"I'm really going slow: Transcend without having bought Accelerators or Boosts.\",\r\n    adesc62: \"Are we there yet?: Reincarnate without having bought Accelerators or Boosts.\",\r\n    adesc63: \"A careful search for Diamonds: Get 1e120,000 Coins in [Reduced Diamonds] without buying Accelerators or Boosts.\",\r\n    adesc64: \"Very Based: Prestige without purchasing Coin Upgrades.\",\r\n    adesc65: \"Miser: Transcend without purchasing Coin Upgrades.\",\r\n    adesc66: \"True Miser: Transcend without purchasing Coin or Diamond Upgrades.\",\r\n    adesc67: \"Coinless Pursuit: Reincarnate without purchasing Coin Upgrades.\",\r\n    adesc68: \"Diamonds don't matter to me!: Reincarnate without purchasing Coin or Diamond Upgrades.\",\r\n    adesc69: \"Leave nothing behind: Reincarnate without purchasing Coin, Diamond or Mythos Upgrades.\",\r\n    adesc70: \"Leave NOTHING behind.: Reincarnate without purchasing Coin, Diamond, Mythos, or Generator Upgrades.\",\r\n    adesc71: \"Out of Order: Buy Generator Upgrade Row 1, #2 first in a transcension (IV -> III)\",\r\n    adesc72: \"More Out of Order: Buy Generator Upgrade Row 1, #3 first in a transcension (III -> II)\",\r\n    adesc73: \"Four's a Company: Buy Generator Upgrade Row 1, #4 first in a transcension (II -> I)\",\r\n    adesc74: \"Five's a Croud: Buy Generator Upgrade Row 1, #5 first in a transcension (I -> V)\",\r\n    adesc75: \"Vaseline without the Machine: Exit [No Multiplier] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\r\n    adesc76: \"Rage against the Machine: Exit [No Accelerator] with at least 1e1000 coins and without any of the row 1 generator upgrades.\",\r\n    adesc77: \"Amish Paradise: Exit [No Shards] with at least 1e99,999 coins and without any of the row 1 generator upgrades.\",\r\n    adesc78: \"Single-Cell: Complete [No Multiplier] once.\",\r\n    adesc79: \"Solidarity: Complete [No Multiplier] three times.\",\r\n    adesc80: \"Duplication-Free!: Complete [No Multiplier] five times.\",\r\n    adesc81: \"Multitasking Challenged: Complete [No Multiplier] ten times.\",\r\n    adesc82: \"No Deaths: Complete [No Multiplier] twenty times.\",\r\n    adesc83: \"Population One: Complete [No Multiplier] fifty times.\",\r\n    adesc84: \"Insert Another Token: Complete [No Multiplier] seventy-five times.\",\r\n    adesc85: \"Slow Start: Complete [No Accelerator] once\",\r\n    adesc86: \"Respawn Rate -12%: Complete [No Accelerator] three times.\",\r\n    adesc87: \"Putting the Breaks On: Complete [No Accelerator] five times.\",\r\n    adesc88: \"Racing a Sloth...: Complete [No Accelerator] ten times.\",\r\n    adesc89: \"... and Losing.: Complete [No Accelerator] twenty times.\",\r\n    adesc90: \"Planck Distance Traveled: Complete [No Accelerator] fifty times.\",\r\n    adesc91: \"Inverse-Ackermann Growth: Complete [No Accelerator] seventy-five times.\",\r\n    adesc92: \"Intact: Complete [No Shards] once.\",\r\n    adesc93: \"Augments are Stupid!: Complete [No Shards] three times.\",\r\n    adesc94: \"Grandmasters are Brilliant!: Complete [No Shards] five times.\",\r\n    adesc95: \"Gotta get those Grandmasters Stronger: Complete [No Shards] ten times.\",\r\n    adesc96: \"Summoning Enhancements: Complete [No Shards] twenty times.\",\r\n    adesc97: \"Magic 99/99: Complete [No Shards] fifty times.\",\r\n    adesc98: \"Perfect Foresight: Complete [No Shards] seventy-five times.\",\r\n    adesc99: \"Inflation: Complete [Cost+] once.\",\r\n    adesc100: \"Hyperinflation: Complete [Cost+] three times.\",\r\n    adesc101: \"Market Bubble: Complete [Cost+] five times.\",\r\n    adesc102: \"Bull Market: Complete [Cost+] ten times.\",\r\n    adesc103: \"Wealth Inequality: Complete [Cost+] twenty times.\",\r\n    adesc104: \"Severe Overpay: Complete [Cost+] fifty times.\",\r\n    adesc105: \"Societal Collapse: Complete [Cost+] seventy-five times.\",\r\n    adesc106: \"Excavation: Complete [Reduced Diamonds] once.\",\r\n    adesc107: \"Digging Deep: Complete [Reduced Diamonds] three times.\",\r\n    adesc108: \"Frack As Needed: Complete [Reduced Diamonds] five times.\",\r\n    adesc109: \"Unobtainium Pickaxe: Complete [Reduced Diamonds] ten times.\",\r\n    adesc110: \"Fortune III: Complete [Reduced Diamonds] twenty times.\",\r\n    adesc111: \"Every kiss...: Complete [Reduced Diamonds] fifty times.\",\r\n    adesc112: \"...begins with K.: Complete [Reduced Diamonds] seventy-five times.\",\r\n    adesc113: \"Tax evasion!: Complete {[Tax+]} once.\",\r\n    adesc114: \"Keeping up with the Joneses: Complete {[Tax+]} twice.\",\r\n    adesc115: \"Offshore deposits: Complete {[Tax+]} three times.\",\r\n    adesc116: \"Bribing officials: Complete {[Tax+]} five times.\",\r\n    adesc117: \"Becoming President: Complete {[Tax+]} ten times.\",\r\n    adesc118: \"Charitable Donation: Complete {[Tax+]} fifteen times.\",\r\n    adesc119: \"IRS Audit: Complete {[Tax+]} twenty-five times.\",\r\n    adesc120: \"Is there anybody in there?: Complete {[No Accelerator/Multiplier]} once.\",\r\n    adesc121: \"Human being: Complete {[No Accelerator/Multiplier]} twice.\",\r\n    adesc122: \"Interdimensional: Complete {[No Accelerator/Multiplier]} three times.\",\r\n    adesc123: \"A slow nickel: Complete {[No Accelerator/Multiplier]} five times.\",\r\n    adesc124: \"Multipliers don't even work 0/5: Complete {[No Accelerator/Multiplier]} ten times.\",\r\n    adesc125: \"Accelerators don't even work -5/5: Complete {[No Accelerator/Multiplier]} fifteen times.\",\r\n    adesc126: \"ACCELERATOR BOOSTS DON'T EVEN WORK -100/5: Complete {[No Accelerator/Multiplier]} twenty-five times.\",\r\n    adesc127: \"I hate this challenge: Complete Cost++ Once.\",\r\n    adesc128: \"A costly mistake: Complete Cost++ Twice.\",\r\n    adesc129: \"Impetus: Complete Cost++ Three Times.\",\r\n    adesc130: \"Are you broke yet? Complete Cost++ Five Times.\",\r\n    adesc131: \"The world of Finance: Complete Cost++ Ten Times.\",\r\n    adesc132: \"Marginal Gains: Complete Cost++ Twenty Times.\",\r\n    adesc133: \"I buy these: Complete Cost++ Twenty-Five Times.\",\r\n    adesc134: \"Agnostic: Complete No Runes Once.\",\r\n    adesc135: \"Ant-i Runes: Complete No Runes Twice.\",\r\n    adesc136: \"Isn't it getting tiresome?: Complete No Runes Three Times.\",\r\n    adesc137: \"Machine does not accept offerings: Complete No Runes Five Times.\",\r\n    adesc138: \"Runes Suck 1/5: Complete No Runes Ten Times.\",\r\n    adesc139: \"I didn't even notice Prism was gone: Complete No Runes Twenty Times.\",\r\n    adesc140: \"Atheist: Complete No Runes Twenty-Five Times.\",\r\n    adesc141: \"Sadism: Complete {[Sadistic I]} Once.\",\r\n    adesc142: \"Masochism: Complete {[Sadistic I]} Twice.\",\r\n    adesc143: \"Insanity: Complete {[Sadistic I]} Three Times.\",\r\n    adesc144: \"How? Complete {[Sadistic I]} Five Times.\",\r\n    adesc145: \"Why? Complete {[Sadistic I]} Ten Times.\",\r\n    adesc146: \"Descend: Complete {[Sadistic I]} Twenty Times.\",\r\n    adesc147: \"End of the Universe: Complete {[Sadistic I]} Twenty-Five Times.\",\r\n    adesc148: \"Gas gas gas: Purchase 5 Accelerators.\",\r\n    adesc149: \"0 to 25: Purchase 25 Accelerators.\",\r\n    adesc150: \"0 to 100: Purchase 100 Accelerators\",\r\n    adesc151: \"Highway to Hell: Purchase 666 Accelerators.\",\r\n    adesc152: \"Perhaps you should brake: Purchase 2,000 Accelerators.\",\r\n    adesc153: \"Exit the vehicle now!: Purchase 12,500 Accelerators.\",\r\n    adesc154: \"Faster than light: Purchase 100,000 Accelerators.\",\r\n    adesc155: \"I've been duped!: Purchase 2 Multipliers.\",\r\n    adesc156: \"Funhouse Mirrors: Purchase 20 Multipliers.\",\r\n    adesc157: \"Friend of binary: Purchase 100 Multipliers.\",\r\n    adesc158: \"Feeling the cost growth yet?: Purchase 500 Multipliers.\",\r\n    adesc159: \"Perhaps you'll feel the cost now: Purchase 2,000 Multipliers.\",\r\n    adesc160: \"Exponential Synergy: Purchase 12,500 Multipliers.\",\r\n    adesc161: \"Cloned: Purchase 100,000 Multipliers.\",\r\n    adesc162: \"Jerk > 0: Purchase 2 Accelerator Boosts.\",\r\n    adesc163: \"Can't the speedometer move any faster?: Purchase 10 Accelerator Boosts.\",\r\n    adesc164: \"50 G rotations: Purchase 50 Accelerator Boosts.\",\r\n    adesc165: \"Dematerialize: Purchase 200 Accelerator Boosts.\",\r\n    adesc166: \"Breaking the laws of Physics: Purchase 1,000 Accelerator Boosts.\",\r\n    adesc167: \"Decayed Realism: Purchase 5,000 Accelerator Boosts.\",\r\n    adesc168: \"Kinda fast: Purchase 15,000 Accelerator Boosts.\",\r\n    adesc169: \"The Galactic Feast: Obtain 3 Galactic Crumbs.\",\r\n    adesc170: \"Only the finest: Obtain 100,000 Galactic Crumbs.\",\r\n    adesc171: \"Six-Course Meal: Obtain 666,666,666 Galactic Crumbs.\",\r\n    adesc172: \"Accumulation of Food: Obtain 1e20 Galactic Crumbs.\",\r\n    adesc173: \"Cookie Clicking: Obtain 1e40 Galactic Crumbs.\",\r\n    adesc174: \"Unlimited Bread Sticks!: Obtain 1e500 Galactic Crumbs.\",\r\n    adesc175: \"Restaurant at the end of the Universe: Obtain 1e2500 Galactic Crumbs.\",\r\n    adesc176: \"Ant-icipation!: Amass a 2x Ant Multiplier through sacrifice and own a Tier 2 ant.\",\r\n    adesc177: \"Ant-ecedent: Amass a 6x Ant Multiplier through sacrifice and own a Tier 3 ant.\",\r\n    adesc178: \"Ants are friends, not food!: Amass a 20x Ant Multiplier through sacrifice and own a Tier 4 Ant.\",\r\n    adesc179: \"Ant Devil?: Amass a 100x Ant Multiplier through sacrifice and own a Tier 5 Ant.\",\r\n    adesc180: \"The world's best chef: Amass a 500x Ant Multiplier through sacrifice and own a Tier 6 Ant.\",\r\n    adesc181: \"6 Michelin Stars: Amass a 6,666x Ant Multiplier through sacrifice and own a Tier 7 Ant.\",\r\n    adesc182: \"Keys to the Restaurant at the end of the Universe: Amass a 77,777x Ant Multiplier through sacrifice and own a Tier 8 Ant.\",\r\n    adesc183: \"Up: Ascend Once.\",\r\n    adesc184: \"Double-Up: Ascend Twice.\",\r\n    adesc185: \"Give me Ten!: Ascend Ten Times.\",\r\n    adesc186: \"Give me a Hundred: Ascend 100 Times.\",\r\n    adesc187: \"Give me a Thousand: Ascend 1,000 Times.\",\r\n    adesc188: \"Give me some arbitrary number I: Ascend 14,142 Times.\",\r\n    adesc189: \"Give me some arbitrary number II: Ascend 141,421 Times.\",\r\n    adesc190: \"Now that's what I call getting some Pi!: Attain a constant of 3.14.\",\r\n    adesc191: \"One in a million: Attain a constant of 1,000,000 [1e6].\",\r\n    adesc192: \"A number: Attain a constant of 4.32e10.\",\r\n    adesc193: \"The coolest of numbers: Attain a constant of 6.9e21.\",\r\n    adesc194: \"Planck^(-1): Attain a constant of 1.509e33.\",\r\n    adesc195: \"Epsilon > a lot: Attain a constant of 1e66.\",\r\n    adesc196: \"NUM_MAX: Attain a constant of 1.8e308.\",\r\n    adesc197: \"Casualties: Clear 'Reduced Ants' challenge once.\",\r\n    adesc198: \"Fatalities: Clear 'Reduced Ants' challenge twice.\",\r\n    adesc199: \"Destruction: Clear 'Reduced Ants' challenge three times.\",\r\n    adesc200: \"War, what is it good for?: Clear 'Reduced Ants' challenge five times.\",\r\n    adesc201: \"Absolutely everything.: Clear 'Reduced Ants' challenge ten times.\",\r\n    adesc202: \"Perfect Storm: Clear 'Reduced Ants' challenge twenty times.\",\r\n    adesc203: \"Immaculate Storm: Clear 'Reduced Ants' challenge thirty times.\",\r\n    adesc204: \"I didn't need those stupid reincarnations anyway!: Clear 'No Reincarnation' challenge once.\",\r\n    adesc205: \"[x1,x2,0,x3]: Clear 'No Reincarnation' challenge twice.\",\r\n    adesc206: \"Nonmetaphysical: Clear 'No Reincarnation' challenge three times.\",\r\n    adesc207: \"Living alone: Clear 'No Reincarnation' challenge five times.\",\r\n    adesc208: \"DM me on discord if you read these names: Clear 'No Reincarnation' challenge ten times.\",\r\n    adesc209: \"Yeah: Clear 'No Reincarnation' challenge twenty times.\",\r\n    adesc210: \"Science! Clear 'No Reincarnation' challenge thirty times.\",\r\n    adesc211: \"The IRS strikes back: Clear 'Tax+++' challenge once.\",\r\n    adesc212: \"Fiscal Policy: Clear 'Tax+++' challenge twice.\",\r\n    adesc213: \"Economic Boom: Clear 'Tax+++' challenge three times.\",\r\n    adesc214: \"Ant-onomics: Clear 'Tax+++' challenge five times.\",\r\n    adesc215: \"'Wow Platonic Tax sucks 1/5': Clear 'Tax+++' challenge ten times.\",\r\n    adesc216: \"Haha this is hard for some reason: Clear 'Tax+++' challenge twenty times.\",\r\n    adesc217: \"Taxes are hard: Clear 'Tax+++' challenge thirty times.\",\r\n    adesc218: \"Shiny Blue Rock: Clear 'No Research' once.\",\r\n    adesc219: \"It's like Avatar: Clear 'No Research' twice.\",\r\n    adesc220: \"It's like Unobtainium: Clear 'No Research' three times.\",\r\n    adesc221: \"It's like a thing: Clear 'No Research' five times.\",\r\n    adesc222: \"It's like: Clear 'No Research' ten times.\",\r\n    adesc223: \"It's: Clear 'No Research' twenty times.\",\r\n    adesc224: \"It: Clear 'No Research' thirty times.\",\r\n    adesc225: \"Pretty Corrupt: Clear an Ascension with above 100,000 score.\",\r\n    adesc226: \"Bought out: Clear an Ascension with above 1 million score.\",\r\n    adesc227: \"Utterly Corrupt: Clear an Ascension with above 10 million score.\",\r\n    adesc228: \"Antitrust: Clear an Ascension with above 100 million score.\",\r\n    adesc229: \"Ant-i-trust: Clear an Ascension with above 1 billion score.\",\r\n    adesc230: \"This is pretty unfair: Clear an Ascension with above 5 billion score.\",\r\n    adesc231: \"Antichrist: Clear an Ascension with above 25 billion score.\",\r\n    adesc232: \"Highly Blessed: Level your Speed Rune blessing to 100,000.\",\r\n    adesc233: \"Divine Blessing: Level your Speed Rune blessing to 100,000,000.\",\r\n    adesc234: \"Blessing III: Level your Speed Rune blessing to 100 billion.\",\r\n    adesc235: \"Spirit I: Level your Speed Spirit to 1 Million.\",\r\n    adesc236: \"Spirit II: Level your Speed Spirit to 1 Billion.\",\r\n    adesc237: \"Spirit III: Level your Speed Spirit to 1 Trillion.\",\r\n    adesc238: \"Three-folded: [Hint: you may want to look into the inception]\",\r\n    adesc239: \"Seeing red: [Hint: you may need a lot of red items]\",\r\n    adesc240: \"ASCENDED: [Hint: you may need a LOT of ascensions OR an particularly amazing ascension]\",\r\n    adesc241: \"Aesop: [Hint: you gotta be pretty dang slow]\",\r\n    adesc242: \"Aesop's Revenge: [Hint: you gotta be pretty dang fast]\",\r\n    adesc243: \"Unsmith: [Hint: unsmith emoji :unsmith: can be a pretty good input]\",\r\n    adesc244: \"Smith: [Hint: :antismith: looks promising as well]\",\r\n    adesc245: \"BLESSED: [Hint: Your Speed Blessing best be unreasonably high!]\",\r\n    adesc246: \"Why? [Hint: Sometimes even 1 in over a Trillion counts!]\",\r\n    adesc247: \"Challenging! [Hint: Challenge 11 is calling your name, but with even less ants]\",\r\n    adesc248: \"Seeing Red but not Blue: [Hint: Can you get red stuff without getting blue stuff?]\",\r\n    adesc249: \"Overtaxed: [Hint: It might pay not to read!]\",\r\n    adesc250: \"The Thousand Suns: [Hint: You need to fully research into becoming GOD]\",\r\n    adesc251: \"The Thousand Moons: [Hint: You may need to cube yourself up]\",\r\n    adesc252: \"Ultimate: Complete 'SADISTIC II' challenge.\"\r\n};\r\nconst areward = {\r\n    areward3: \"Gain +.05% to Accelerator Power.\",\r\n    areward4: \"Start transcensions/challenges with Worker Autobuyer unlocked.\",\r\n    areward5: \"Gain +1 Accelerator per 500 Workers owned.\",\r\n    areward6: \"Gain +1 Multiplier per 1,000 Workers owned.\",\r\n    areward7: \"Gain +1 Accelerator Boost per 2,000 workers owned.\",\r\n    areward10: \"Gain +.10% to Accelerator Power.\",\r\n    areward11: \"Start transcensions/challenges with Investment Autobuyer unlocked.\",\r\n    areward12: \"Gain +1 Accelerator per 500 Investments owned.\",\r\n    areward13: \"Gain +1 Multiplier per 1,000 Investments owned.\",\r\n    areward14: \"Gain +1 Accelerator Boost per 2,000 Investments owned.\",\r\n    areward17: \"Gain +.15% to Accelerator Power.\",\r\n    areward18: \"Start transcensions/challenges with Printer Autobuyer unlocked.\",\r\n    areward19: \"Gain +1 Accelerator per 500 Printers owned.\",\r\n    areward20: \"Gain +1 Multiplier per 1,000 Printers owned.\",\r\n    areward21: \"Gain +1 Accelerator Boost per 2,000 Printers owned.\",\r\n    areward24: \"Gain +.20% to Accelerator Power.\",\r\n    areward25: \"Start transcensions/challenges with Coin Mint Autobuyer unlocked.\",\r\n    areward26: \"Gain +1 Accelerator per 500 Mints owned.\",\r\n    areward27: \"Gain +1 Multiplier per 1,000 Mints owned.\",\r\n    areward28: \"Gain +1 Accelerator Boost per 2,000 Mints owned.\",\r\n    areward31: \"Gain +.25% to Accelerator Power.\",\r\n    areward32: \"Start transcensions/challenges with Alchemy Autobuyer unlocked.\",\r\n    areward33: \"Gain 10% more offerings from resets || +1 Accelerator per 500 Alchemies!\",\r\n    areward34: \"Gain 15% more offerings from resets (stacks multiplicatively!) || +1 Multiplier per 1,000 Alchemies!\",\r\n    areward35: \"Gain 25% more offerings from resets (stacks multiplicatively!) || +1 Accelerator Boost per 2,000 Alchemies!\",\r\n    areward36: \"Multiply Crystal Production by 2x.\",\r\n    areward37: \"Multiply Crystal Production by the common logarithm of owned Diamonds. Prestiges give more offerings based on time spent (Up to +15 at 1800 seconds)\",\r\n    areward38: \"Unlock the Duplication rune!\",\r\n    areward43: \"Accelerator Boosts can be purchased from any screen. Unlock the Auto-Prestige feature.\",\r\n    areward44: \"Unlock the Prism Rune! Transcensions give more offerings based on time spent (Up to +15 at 1800 seconds)\",\r\n    areward45: \"Reduce tax scaling by up to 5%, depending on the length of prestige.\",\r\n    areward46: \"Reduce tax scaling by up to another 5%, depending on length of prestige.\",\r\n    areward47: \"Reduce tax scaling by up to ANOTHER 10%, depending on length of prestige!\",\r\n    areward50: \"Unlock new Atomic production and unlock 3 new incredibly difficult challenges! Gain 2x particles on all future Reincarnations!\",\r\n    areward51: \"Manual Reincarnations give +4 Obtainium (unaffected by multipliers except time multiplier)!\",\r\n    areward52: \"Reincarnations give more offerings based on time spent (Up to +25 at 1800 seconds)\",\r\n    areward53: \"Increase the amount of obtainium gained through all features by 0.125% additive for each rune level.\",\r\n    areward57: \"Gain +1, +1% free Multipliers!\",\r\n    areward58: \"Gain +1, +1% more free Multipliers!\",\r\n    areward59: \"Gain +1, +1% more, MORE free Multipliers!\",\r\n    areward60: \"Gain +2, +1% free Accelerators!\",\r\n    areward61: \"Gain +2, +1% more free Accelerators!\",\r\n    areward62: \"Gain +2, +1% more, MORE free Accelerators!\",\r\n    areward71: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward72: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward73: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward74: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward75: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward76: \"+1% Conversion Exponent on all generator upgrades!\",\r\n    areward77: \"+1% Conversion Exponent on all generator upgrades! They're in overdrive now!\",\r\n    areward78: \"Start transcensions/challenges with 1 Refinery and automatically buy Refineries.\",\r\n    areward79: \"Automatically buy the first crystal upgrade if you can afford it!\",\r\n    areward80: \"Start transcensions/challenges with Multiplier Autobuyer unlocked. +5% offering recycle.\",\r\n    areward82: \"Delay tax growth by 4%.\",\r\n    areward84: \"+1% obtainium (stacks additively with other achievement rewards)\",\r\n    areward85: \"Start transcensions/challenges with 1 Coal Plant and automatically buy Coal Plants.\",\r\n    areward86: \"Automatically buy the second crystal upgrade if you can afford it!\",\r\n    areward87: \"Start transcensions/challenges with Accelerator Autobuyer unlocked. +5% offering recycle.\",\r\n    areward89: \"Delay tax growth by 4%.\",\r\n    areward91: \"+3% obtainium (stacks additively with other achievement rewards)\",\r\n    areward92: \"Start transcensions/challenges with 1 Coal Rig and automatically buy Coal Rigs.\",\r\n    areward93: \"Automatically buy the third crystal upgrade if you can afford it!\",\r\n    areward94: \"+5% offering recycle.\",\r\n    areward96: \"Delay tax growth by 4%.\",\r\n    areward98: \"+5% obtainium (stacks additively with other achievement rewards)\",\r\n    areward99: \"Start transcensions/challenges with 1 Diamond Pickaxe and automatically buy Diamond Pickaxes.\",\r\n    areward100: \"Automatically buy the fourth crystal upgrade if you can afford it!\",\r\n    areward101: \"+5% offering recycle.\",\r\n    areward102: \"Unlock the Thrift rune!\",\r\n    areward103: \"Delay tax growth by 4%.\",\r\n    areward105: \"+7% obtainium (stacks additively with other achievement rewards)\",\r\n    areward106: \"Start transcensions/challenges with 1 Pandora's Box and automatically buy Pandora's Boxes.\",\r\n    areward107: \"Automatically buy the fifth crystal upgrade if you can afford it!\",\r\n    areward108: \"+5% offering recycle.\",\r\n    areward110: \"Delay tax growth by 4%.\",\r\n    areward112: \"+9% obtainium (stacks additively with other achievement rewards)\",\r\n    areward115: \"+5% offering recycle.\",\r\n    areward117: \"Delay tax growth by 5.66%.\",\r\n    areward118: \"Each Reincarnation challenge completion delays tax growth by 0.75% per level, multiplicative\",\r\n    areward119: \"+11% obtainium. Unlock a nice trinket somewhere...\",\r\n    areward122: \"+7.5% offering recycle.\",\r\n    areward124: \"Delay tax growth by 5.66%. Unlock 5 new incredibly powerful researches!\",\r\n    areward126: \"+13% obtainium. You get an accessory to commemorate this moment!\",\r\n    areward127: \"Unlock 20 new incredibly expensive yet good researches. Unlock the [Anthill] feature!\",\r\n    areward128: \"Make researches go Cost-- with 1.5x Obtainium!\",\r\n    areward129: \"+7.5% offering recycle. Gain another 1.25x Obtainium multiplier!\",\r\n    areward131: \"Delay tax growth by 5.66%.\",\r\n    areward132: \"Permanently gain +25% more sacrifice reward!\",\r\n    areward133: \"+15% obtainium. Obtain the gift of Midas himself.\",\r\n    areward134: \"Unlock 10 newer incredibly expensive yet good researches. Unlock <<Talismans>> in the Runes Tab!\",\r\n    areward135: \"Talisman positive bonuses are now +0.05 stronger per level.\",\r\n    areward136: \"Talisman positive bonuses are now +0.05 even stronger per level.\",\r\n    areward137: \"Permanently gain +25% more sacrifice reward!\",\r\n    areward140: \"+17% obtainium. Lazy joke about not leaking talismans here [You get a new one]\",\r\n    areward141: \"Unlock a new reset tier!\",\r\n    areward147: \"+19% obtainium (Achievement total is up to 100%!). Gain the Polymath Talisman!\",\r\n    areward169: \"ALL Ant speed multiplied by log10(crumbs + 10)\",\r\n    areward171: \"+16.666% ALL Ant speed!\",\r\n    areward172: \"Gain more ants the longer your reincarnation lasts (max speed achieved in 2 hours)\",\r\n    areward173: \"Unlock Ant Sacrifice, allowing you to reset your ants and ant upgrades in exchange for amazing rewards! Automatically buy Worker Ants.\",\r\n    areward174: \"Ant Multiplier from sacrifice is multiplied by another logarithm (Multiply by 0.4 * log10(points + 1))\",\r\n    areward176: \"Unlock Tier 2 Ant autobuy, and autobuy Inceptus and Fortunae ants! Add +25 Base Ant ELO.\",\r\n    areward177: \"Unlock Tier 3 Ant autobuy, and autobuy Tributum ants! Add +50 Base Ant ELO.\",\r\n    areward178: \"Unlock Tier 4 Ant autobuy, and autobuy Celeritas and Multa ants! Add +75 Base Ant ELO.\",\r\n    areward179: \"Unlock Tier 5 Ant autobuy, and autobuy Sacrificium ants! Add +100 Base Ant ELO.\",\r\n    areward180: \"Unlock Tier 6 Ant autobuy, and autobuy Hic and Experientia ants! Add +1% Base Ant ELO.\",\r\n    areward181: \"Unlock Tier 7 Ant autobuy, and autobuy Praemoenio ants! Add +2% Base Ant ELO.\",\r\n    areward182: \"Unlock Tier 8 Ant autobuy, and autobuy Scientia and Phylacterium ants! Add +3% Base Ant ELO.\",\r\n    areward187: \"Gain an ascension gain multiplier based on your score (log10(score) - 7)x for Corruption Score > 100 Million. Gain +1% Offerings per 10,000 ascensions, up to +100%!\",\r\n    areward188: \"Gain +100 ascension count for all ascensions longer than 10 seconds. Gain +1% Obtainium per 50,000 ascensions, up to +100%!\",\r\n    areward189: \"Gain 20% of excess time after 10 seconds each Ascension as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Cubes per 250,000 ascensions, up to +200%!\",\r\n    areward193: \"Gain (log10(Constant+1)/4)% more Cubes on ascension!\",\r\n    areward195: \"Gain (log10(Constant+1)/4)% more Cubes and Tesseracts on ascension! Multiplicative with the other Ach. bonus.\",\r\n    areward196: \"Gain (log10(Constant+1)/50)% more Platonic Cubes on ascension!\",\r\n    areward197: \"You will unlock a stat tracker for ascensions.\",\r\n    areward198: \"Gain +4% Cubes on ascension!\",\r\n    areward199: \"Gain +4% Cubes on ascension!\",\r\n    areward200: \"Gain +4% Cubs on ascension! Did I spell that wrong? You bet I did.\",\r\n    areward201: \"Gain +3% Cubes on ascension!\",\r\n    areward202: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Tesseracts per 500,000 ascensions, up to +200%!\",\r\n    areward204: \"You will gain 25% of excess time after 10 seconds each Ascension as a linear multiplier to rewards.\",\r\n    areward205: \"Gain +4% Tesseracts on ascension!\",\r\n    areward206: \"Gain +4% Tesseracts on ascension!\",\r\n    areward207: \"Gain +4% Tesseracts on ascension!\",\r\n    areward208: \"Gain +3% Tesseracts on ascension!\",\r\n    areward209: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours).\",\r\n    areward211: \"You will gain 25% MORE excess time (Total: 50%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\r\n    areward212: \"Gain +4% Hypercubes on ascension!\",\r\n    areward213: \"Gain +4% Hypercubes on ascension!\",\r\n    areward214: \"Gain +4% Hypercubes on ascension!\",\r\n    areward215: \"Gain +3% Hypercubes on ascension!\",\r\n    areward216: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Hypercubes per 1,000,000 ascensions, up to +200%!\",\r\n    areward218: \"You gain gain 50% MORE MORE excess time (Total: 100%) after 10 seconds each Ascension as a linear multiplier to rewards.\",\r\n    areward219: \"Gain +4% Platonic Cubes on ascension!\",\r\n    areward220: \"Gain +4% Platonic Cubes on ascension!\",\r\n    areward221: \"Gain +4% Platonic Cubes on ascension!\",\r\n    areward222: \"Gain +3% Platonic Cubes on ascension!\",\r\n    areward223: \"Gain 20% of excess time after 10 seconds each Ascensions as a linear multiplier to ascensions (max 24 hours). Gain +0.1% Platonic Cubes per 1,337,000 ascensions, up to +200%!\",\r\n    areward240: \"Ascension Cube Gain Multipliers is VERY slightly affected by global speed multipliers: 1 + log10(Speed)/20 (Min: 1.10x, Max: 1.50x)\",\r\n    areward250: \"You gain a permanent +60% Obtainium and Offering bonus, with +6% all cube types!\",\r\n    areward251: \"You gain a permanent +100% Obtainium and Offering bonus, with +10% all cube types!\"\r\n};\r\nexport const resetachievementcheck = (i) => {\r\n    if (i === 1) {\r\n        if (player.prestigenoaccelerator === true) {\r\n            achievementaward(60);\r\n        }\r\n        if (player.prestigenomultiplier === true) {\r\n            achievementaward(57);\r\n        }\r\n        if (player.prestigenocoinupgrades === true) {\r\n            achievementaward(64);\r\n        }\r\n        if (G['prestigePointGain'].gte(1)) {\r\n            achievementaward(36);\r\n        }\r\n        if (G['prestigePointGain'].gte(1e6)) {\r\n            achievementaward(37);\r\n        }\r\n        if (G['prestigePointGain'].gte(1e100)) {\r\n            achievementaward(38);\r\n        }\r\n        if (G['prestigePointGain'].gte(\"1e1000\")) {\r\n            achievementaward(39);\r\n        }\r\n        if (G['prestigePointGain'].gte(\"1e10000\")) {\r\n            achievementaward(40);\r\n        }\r\n        if (G['prestigePointGain'].gte(\"1e77777\")) {\r\n            achievementaward(41);\r\n        }\r\n        if (G['prestigePointGain'].gte(\"1e250000\")) {\r\n            achievementaward(42);\r\n        }\r\n    }\r\n    if (i === 2) {\r\n        if (player.transcendnoaccelerator === true) {\r\n            achievementaward(61);\r\n        }\r\n        if (player.transcendnomultiplier === true) {\r\n            achievementaward(58);\r\n        }\r\n        if (player.transcendnocoinupgrades === true) {\r\n            achievementaward(65);\r\n        }\r\n        if (player.transcendnocoinorprestigeupgrades === true) {\r\n            achievementaward(66);\r\n        }\r\n        if (G['transcendPointGain'].gte(1)) {\r\n            achievementaward(43);\r\n        }\r\n        if (G['transcendPointGain'].gte(1e6)) {\r\n            achievementaward(44);\r\n        }\r\n        if (G['transcendPointGain'].gte(1e50)) {\r\n            achievementaward(45);\r\n        }\r\n        if (G['transcendPointGain'].gte(1e308)) {\r\n            achievementaward(46);\r\n        }\r\n        if (G['transcendPointGain'].gte(\"1e1500\")) {\r\n            achievementaward(47);\r\n        }\r\n        if (G['transcendPointGain'].gte(\"1e25000\")) {\r\n            achievementaward(48);\r\n        }\r\n        if (G['transcendPointGain'].gte(\"1e100000\")) {\r\n            achievementaward(49);\r\n        }\r\n    }\r\n    if (i === 3) {\r\n        if (player.reincarnatenoaccelerator === true) {\r\n            achievementaward(62);\r\n        }\r\n        if (player.reincarnatenomultiplier === true) {\r\n            achievementaward(59);\r\n        }\r\n        if (player.reincarnatenocoinupgrades === true) {\r\n            achievementaward(67);\r\n        }\r\n        if (player.reincarnatenocoinorprestigeupgrades === true) {\r\n            achievementaward(68);\r\n        }\r\n        if (player.reincarnatenocoinprestigeortranscendupgrades === true) {\r\n            achievementaward(69);\r\n        }\r\n        if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades === true) {\r\n            achievementaward(70);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(1)) {\r\n            achievementaward(50);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(1e5)) {\r\n            achievementaward(51);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(1e30)) {\r\n            achievementaward(52);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(1e200)) {\r\n            achievementaward(53);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(\"1e1500\")) {\r\n            achievementaward(54);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(\"1e5000\")) {\r\n            achievementaward(55);\r\n        }\r\n        if (G['reincarnationPointGain'].gte(\"1e7777\")) {\r\n            achievementaward(56);\r\n        }\r\n    }\r\n};\r\nconst challengeCompletionsBar = [\r\n    [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\r\n    [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\r\n    [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\r\n    [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\r\n    [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\r\n    [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\r\n    [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\r\n    [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\r\n    [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\r\n    [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147]\r\n];\r\nconst challengeCompletionsNotAuto = {\r\n    1: ['1e1000', 75],\r\n    2: ['1e1000', 76],\r\n    3: ['1e99999', 77],\r\n    5: ['1e120000', 63]\r\n};\r\nexport const challengeachievementcheck = (i, auto) => {\r\n    const generatorcheck = sumContents(player.upgrades.slice(101, 106));\r\n    for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\r\n        if (player.challengecompletions[i] > bar) {\r\n            achievementaward(ach);\r\n        }\r\n    }\r\n    if ([1, 2, 3, 5].includes(i) && !auto) {\r\n        const [gte, ach] = challengeCompletionsNotAuto[i];\r\n        if (i === 5) {\r\n            if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\r\n                achievementaward(ach);\r\n            }\r\n        }\r\n        else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\r\n            achievementaward(ach);\r\n        }\r\n    }\r\n    if (i >= 11 && i <= 14) {\r\n        const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30];\r\n        for (let j = 1; j <= 7; j++) {\r\n            if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\r\n                achievementaward(119 + 7 * i + j);\r\n            }\r\n        }\r\n    }\r\n};\r\nconst buildAchievementReq = [\r\n    () => player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5,\r\n    () => player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5,\r\n    () => player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5,\r\n    () => player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5,\r\n    () => player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5,\r\n    () => player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5,\r\n    () => player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5,\r\n    () => player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5,\r\n    () => player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5,\r\n    () => player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5,\r\n    () => player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5,\r\n    () => player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5,\r\n    () => player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5,\r\n    () => player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5,\r\n    () => player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5,\r\n    () => player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5,\r\n    () => player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5,\r\n    () => player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5,\r\n    () => player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5,\r\n    () => player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5,\r\n    () => player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5,\r\n    () => player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5,\r\n    () => player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5,\r\n    () => player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5,\r\n    () => player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5,\r\n    () => player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5,\r\n    () => player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5,\r\n    () => player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5,\r\n    () => player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5,\r\n    () => player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5,\r\n    () => player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5,\r\n    () => player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5,\r\n    () => player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5,\r\n    () => player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5,\r\n    () => player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5,\r\n];\r\nexport const buildingAchievementCheck = () => {\r\n    for (const req of buildAchievementReq) {\r\n        if (req()) {\r\n            const idx = buildAchievementReq.indexOf(req) + 1;\r\n            achievementaward(idx);\r\n        }\r\n    }\r\n};\r\nexport const ascensionAchievementCheck = (i, score = 0) => {\r\n    if (i === 1) {\r\n        const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213];\r\n        for (let j = 1; j <= 7; j++) {\r\n            if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\r\n                achievementaward(182 + j);\r\n            }\r\n        }\r\n        if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\r\n            achievementaward(240);\r\n        }\r\n    }\r\n    if (i === 2) {\r\n        const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, \"1.8e308\"];\r\n        for (let j = 1; j <= 7; j++) {\r\n            if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\r\n                achievementaward(189 + j);\r\n            }\r\n        }\r\n    }\r\n    if (i === 3) {\r\n        const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10];\r\n        for (let j = 1; j <= 7; j++) {\r\n            if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\r\n                achievementaward(224 + j);\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const achievementdescriptions = (i) => {\r\n    const y = adesc[`adesc${i}`];\r\n    const z = player.achievements[i] > 0.5 ? ' COMPLETED!' : '';\r\n    const k = areward[`areward${i}`] || '';\r\n    document.getElementById(\"achievementdescription\").textContent = y + z;\r\n    document.getElementById(\"achievementreward\").textContent = \"Reward: \" + achievementpointvalues[i] + \" AP. \" + achievementpointvalues[i] + \" Quarks! \" + k;\r\n    if (player.achievements[i] > 0.5) {\r\n        document.getElementById(\"achievementdescription\").style.color = \"gold\";\r\n    }\r\n    else {\r\n        document.getElementById(\"achievementdescription\").style.color = \"white\";\r\n    }\r\n};\r\nexport const achievementaward = (num) => {\r\n    if (player.achievements[num] < 0.5) {\r\n        player.achievementPoints += achievementpointvalues[num];\r\n        player.worlds += achievementpointvalues[num];\r\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\r\n        player.achievements[num] = 1;\r\n        revealStuff();\r\n    }\r\n    document.getElementById(`ach${num}`).style.backgroundColor = \"Green\";\r\n    Synergism.emit('achievement', num);\r\n};\r\n","import { player, format, clearInt, interval } from './Synergism';\r\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateMaxRunes, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nimport { achievementaward } from './Achievements';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { redeemShards } from './Runes';\r\nimport { updateTalismanInventory } from './Talismans';\r\nimport { buyResearch } from './Research';\r\nimport { resetAnts } from './Reset';\r\nimport { Synergism } from './Events';\r\nconst antdesc = {\r\n    antdesc1: \"Gain a worker ant for your everyday life. Gathers Galactic Crumbs. Essential!\",\r\n    antdesc2: \"Gain a breeder ant that produces worker ants automatically!\",\r\n    antdesc3: \"Gain a meta-breeder ant that produces breeder ants automatically!\",\r\n    antdesc4: \"Gain a mega-breeder ant that produces meta-breeder ants automatically!\",\r\n    antdesc5: \"Gain a Queen ant that produces mega-breeder ants automatically!\",\r\n    antdesc6: \"Gain a Lord Royal ant that produces Queen ants automatically!\",\r\n    antdesc7: \"Gain an ALMIGHTY ANT that produces Lord Royal ants automatically!\",\r\n    antdesc8: \"Gain a DISCIPLE OF ANT GOD that produces ALMIGHTY ANTS automatically!\"\r\n};\r\nconst antspecies = {\r\n    antspecies1: \"Inceptus Formicidae\",\r\n    antspecies2: \"Fortunae Formicidae\",\r\n    antspecies3: \"Tributum Formicidae\",\r\n    antspecies4: \"Celeritas Formicidae\",\r\n    antspecies5: \"Multa Formicidae\",\r\n    antspecies6: \"Sacrificium Formicidae\",\r\n    antspecies7: \"Hic Formicidae\",\r\n    antspecies8: \"Experientia Formicidae\",\r\n    antspecies9: \"Praemoenio Formicidae\",\r\n    antspecies10: \"Scientia Formicidae\",\r\n    antspecies11: \"Phylacterium Formicidae\",\r\n    antspecies12: \"Mortuus Est Formicidae\"\r\n};\r\nconst antupgdesc = {\r\n    antupgdesc1: \"Promotes romance and unity within the colony. [+12% Ant Speed / level]\",\r\n    antupgdesc2: \"Sweetens crumbs to increase their value [Each level increases Crumb --> Coin Conversion efficiency, up to ^50,000,000]\",\r\n    antupgdesc3: \"Swarms the Taxman into submission [Up to -99% taxes!]\",\r\n    antupgdesc4: \"Scares you into running faster [up to x20]\",\r\n    antupgdesc5: \"Imitates your body through magic shape-shifting powers [up to x40]\",\r\n    antupgdesc6: \"Tries to please Ant God... but fails [Additional Offerings!]\",\r\n    antupgdesc7: \"Helps you build a few things here and there [+3% Building Cost Delay / level, Cap 9,999,999%]\",\r\n    antupgdesc8: \"Knows how to salt and pepper food [Up to 1,000x Rune EXP!]\",\r\n    antupgdesc9: \"Can make your message to Ant God a little more clear [+1 all Rune Levels / level, Cap 10 Million]\",\r\n    antupgdesc10: \"Has big brain energy [Additional Obtainium!]\",\r\n    antupgdesc11: \"A valuable offering to the Ant God [Gain up to 3x Sacrifice Rewards!]\",\r\n    antupgdesc12: \"Betray Ant God increasing the fragility of your dimension [Unlocks ant talisman, Up to 2x faster timers on most things]\"\r\n};\r\nexport const calculateCrumbToCoinExp = () => {\r\n    const exponent = player.currentChallenge.ascension !== 15\r\n        ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499)\r\n        : 1 / 10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499));\r\n    return exponent;\r\n};\r\nconst antUpgradeTexts = [\r\n    () => \"ALL Ants work at \" + format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1 - 1] + G['bonusant1']), 2) + \"x speed.\",\r\n    () => \"Crumb --> Coin exponent is ^\" + format(calculateCrumbToCoinExp()),\r\n    () => \"Tax growth is multiplied by \" + format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']), 4),\r\n    () => \"Accelerator Boosts +\" + format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19) - 1), 3) + \"%\",\r\n    () => \"Multipliers +\" + format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39) - 1), 3) + \"%\",\r\n    () => \"Offerings x\" + format(1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']) / 50, 0.75), 4),\r\n    () => \"Building Costs scale \" + format(Math.min(9999999, 3 * player.antUpgrades[7 - 1] + 3 * G['bonusant7']), 0, true) + \"% slower!\",\r\n    () => \"Rune EXP is multiplied by \" + format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)), 3) + \"!\",\r\n    () => \"Each rune has +\" + format(1 * Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])), 0, true) + \" effective levels.\",\r\n    () => \"Obtainium x\" + format(1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 0.75), 4),\r\n    () => \"Sacrificing is \" + format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)), 4) + \"x as effective\",\r\n    () => \"Global timer is sped up by a factor of \" + format(calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69), 4)\r\n];\r\nlet repeatAnt = null;\r\nexport const antRepeat = (i) => {\r\n    clearInt(repeatAnt);\r\n    repeatAnt = interval(() => updateAntDescription(i), 50);\r\n};\r\nexport const updateAntDescription = (i) => {\r\n    const el = document.getElementById(\"anttierdescription\");\r\n    const la = document.getElementById(\"antprice\");\r\n    const ti = document.getElementById(\"antquantity\");\r\n    const me = document.getElementById(\"generateant\");\r\n    let priceType = \"Galactic Crumbs\";\r\n    let tier = \"\";\r\n    el.textContent = antdesc[\"antdesc\" + i];\r\n    switch (i) {\r\n        case 1:\r\n            priceType = \"Particles\";\r\n            tier = \"first\";\r\n            me.textContent = \"Generates \" + format(G['antOneProduce'], 5) + \" Crumbs/sec\";\r\n            break;\r\n        case 2:\r\n            tier = \"second\";\r\n            me.textContent = \"Generates \" + format(G['antTwoProduce'], 5) + \" Workers/sec\";\r\n            break;\r\n        case 3:\r\n            tier = \"third\";\r\n            me.textContent = \"Generates \" + format(G['antThreeProduce'], 5) + \" Breeders/sec\";\r\n            break;\r\n        case 4:\r\n            tier = \"fourth\";\r\n            me.textContent = \"Generates \" + format(G['antFourProduce'], 5) + \" MetaBreeders/sec\";\r\n            break;\r\n        case 5:\r\n            tier = \"fifth\";\r\n            me.textContent = \"Generates \" + format(G['antFiveProduce'], 5) + \" MegaBreeders/sec\";\r\n            break;\r\n        case 6:\r\n            tier = \"sixth\";\r\n            me.textContent = \"Generates \" + format(G['antSixProduce'], 5) + \" Queens/sec\";\r\n            break;\r\n        case 7:\r\n            tier = \"seventh\";\r\n            me.textContent = \"Generates \" + format(G['antSevenProduce'], 5) + \" Royals/sec\";\r\n            break;\r\n        case 8:\r\n            tier = \"eighth\";\r\n            me.textContent = \"Generates \" + format(G['antEightProduce'], 5) + \" ALMIGHTIES/sec\";\r\n            break;\r\n    }\r\n    la.textContent = \"Cost: \" + format(player[tier + \"CostAnts\"]) + \" \" + priceType;\r\n    ti.textContent = \"Owned: \" + format(player[tier + \"OwnedAnts\"]) + \" [+\" + format(player[tier + \"GeneratedAnts\"], 2) + \"]\";\r\n};\r\nconst getAntCost = (originalCost, buyTo, index) => {\r\n    --buyTo;\r\n    const cost = originalCost\r\n        .times(Decimal.pow(G['antCostGrowth'][index - 1], buyTo))\r\n        .add(1 * buyTo);\r\n    return cost;\r\n};\r\nconst getAntUpgradeCost = (originalCost, buyTo, index) => {\r\n    --buyTo;\r\n    const cost = originalCost.times(Decimal.pow(G['antUpgradeCostIncreases'][index - 1], buyTo));\r\n    return cost;\r\n};\r\nexport const buyAntProducers = (pos, type, originalCost, index) => {\r\n    const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints);\r\n    originalCost = new Decimal(originalCost);\r\n    const tag = index === 1 ? 'reincarnationPoints' : 'antPoints';\r\n    let buyTo = player[pos + \"Owned\" + type] + 1;\r\n    let cashToBuy = getAntCost(originalCost, buyTo, index);\r\n    while (player[tag].gte(cashToBuy)) {\r\n        buyTo = buyTo * 4;\r\n        cashToBuy = getAntCost(originalCost, buyTo, index);\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8);\r\n    while (stepdown !== 0) {\r\n        if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\r\n            stepdown = Math.floor(stepdown / 2);\r\n        }\r\n        else {\r\n            buyTo = buyTo - stepdown;\r\n        }\r\n    }\r\n    if (!player.antMax) {\r\n        if (1 + player[pos + \"Owned\" + type] < buyTo) {\r\n            buyTo = player[pos + \"Owned\" + type] + 1;\r\n        }\r\n    }\r\n    let buyFrom = Math.max(buyTo - 7, player[pos + 'Owned' + type] + 1);\r\n    let thisCost = getAntCost(originalCost, buyFrom, index);\r\n    while (buyFrom <= buyTo && player[tag].gte(getAntCost(originalCost, buyFrom, index))) {\r\n        player[tag] = player[tag].sub(thisCost);\r\n        player[pos + 'Owned' + type] = buyFrom;\r\n        buyFrom = buyFrom + 1;\r\n        thisCost = getAntCost(originalCost, buyFrom, index);\r\n        player[pos + 'Cost' + type] = thisCost;\r\n    }\r\n    if (player.reincarnationPoints.lt(0)) {\r\n        player.reincarnationPoints = new Decimal(\"0\");\r\n    }\r\n    if (player.antPoints.lt(0)) {\r\n        player.antPoints = new Decimal(\"0\");\r\n    }\r\n    calculateAntSacrificeELO();\r\n    const achRequirements = [2, 6, 20, 100, 500, 6666, 77777];\r\n    for (let j = 0; j < achRequirements.length; j++) {\r\n        if (sacrificeMult > achRequirements[j] && player[G['ordinals'][j + 1] + \"OwnedAnts\"] > 0 && player.achievements[176 + j] === 0) {\r\n            achievementaward(176 + j);\r\n        }\r\n    }\r\n    if (player.firstOwnedAnts > 6.9e7) {\r\n        player.firstOwnedAnts = 6.9e7;\r\n    }\r\n};\r\nexport const buyAntUpgrade = (originalCost, auto, index) => {\r\n    if (player.currentChallenge.ascension !== 11) {\r\n        originalCost = new Decimal(originalCost);\r\n        let buyTo = 1 + player.antUpgrades[index - 1];\r\n        let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\r\n        while (player.antPoints.gte(cashToBuy)) {\r\n            buyTo = buyTo * 4;\r\n            cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\r\n        }\r\n        let stepdown = Math.floor(buyTo / 8);\r\n        while (stepdown !== 0) {\r\n            if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\r\n                stepdown = Math.floor(stepdown / 2);\r\n            }\r\n            else {\r\n                buyTo = buyTo - stepdown;\r\n            }\r\n        }\r\n        if (!player.antMax) {\r\n            if (player.antUpgrades[index - 1] + 1 < buyTo) {\r\n                buyTo = 1 + player.antUpgrades[index - 1];\r\n            }\r\n        }\r\n        let buyFrom = Math.max(buyTo - 7, 1 + player.antUpgrades[index - 1]);\r\n        let thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\r\n        while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\r\n            player.antPoints = player.antPoints.sub(thisCost);\r\n            player.antUpgrades[index - 1] = buyFrom;\r\n            buyFrom = buyFrom + 1;\r\n            thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\r\n        }\r\n        calculateAnts();\r\n        calculateRuneLevels();\r\n        calculateAntSacrificeELO();\r\n        if (!auto) {\r\n            antUpgradeDescription(index);\r\n        }\r\n        if (player.antUpgrades[12 - 1] === 1 && index === 12) {\r\n            revealStuff();\r\n        }\r\n    }\r\n};\r\nexport const antUpgradeDescription = (i) => {\r\n    const el = document.getElementById(\"antspecies\");\r\n    const al = document.getElementById(\"antlevelbonus\");\r\n    const la = document.getElementById(\"antupgradedescription\");\r\n    const ti = document.getElementById(\"antupgradecost\");\r\n    const me = document.getElementById(\"antupgradeeffect\");\r\n    const content1 = antspecies[\"antspecies\" + i];\r\n    const content2 = antupgdesc[\"antupgdesc\" + i];\r\n    const bonuslevel = G[\"bonusant\" + i];\r\n    const c11 = player.currentChallenge.ascension === 11 ? 999 : 0;\r\n    el.childNodes[0].textContent = content1 + \" Level \" + format(player.antUpgrades[i - 1]);\r\n    al.textContent = \" [+\" + format(Math.min(player.antUpgrades[i - 1] + c11, bonuslevel)) + \"]\";\r\n    la.textContent = content2;\r\n    ti.textContent = \"Cost: \" + format(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1])) + \" Galactic Crumbs\";\r\n    me.textContent = \"CURRENT EFFECT: \" + antUpgradeTexts[i - 1]();\r\n};\r\nexport const antSacrificePointsToMultiplier = (points) => {\r\n    let multiplier = Math.pow(1 + points / 5000, 2);\r\n    multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10));\r\n    if (player.achievements[174] > 0) {\r\n        multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10));\r\n    }\r\n    return multiplier;\r\n};\r\nexport const showSacrifice = () => {\r\n    const sacRewards = calculateAntSacrificeRewards();\r\n    document.getElementById(\"antSacrificeSummary\").style.display = \"block\";\r\n    document.getElementById(\"antELO\").childNodes[0].textContent = \"Your Ant ELO is \";\r\n    document.getElementById(\"ELO\").textContent = format(G['antELO'], 2);\r\n    document.getElementById(\"effectiveELO\").textContent = \"[\" + format(G['effectiveELO'], 2, false) + \" effective]\";\r\n    document.getElementById(\"antSacrificeMultiplier\").childNodes[0].textContent = \"Ant Multiplier x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false) + \" --> \";\r\n    document.getElementById(\"SacrificeMultiplier\").textContent = \"x\" + format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false);\r\n    document.getElementById(\"SacrificeUpgradeMultiplier\").textContent = format(G['upgradeMultiplier'], 3, true) + \"x\";\r\n    document.getElementById(\"SacrificeTimeMultiplier\").textContent = format(G['timeMultiplier'], 3, true) + \"x\";\r\n    document.getElementById(\"antSacrificeOffering\").textContent = \"+\" + format(sacRewards.offerings);\r\n    document.getElementById(\"antSacrificeObtainium\").textContent = \"+\" + format(sacRewards.obtainium);\r\n    if (player.challengecompletions[9] > 0) {\r\n        document.getElementById(\"antSacrificeTalismanShard\").textContent = \"+\" + format(sacRewards.talismanShards) + \" [>500 ELO]\";\r\n        document.getElementById(\"antSacrificeCommonFragment\").textContent = \"+\" + format(sacRewards.commonFragments) + \" [>750 ELO]\";\r\n        document.getElementById(\"antSacrificeUncommonFragment\").textContent = \"+\" + format(sacRewards.uncommonFragments) + \" [>1,000 ELO]\";\r\n        document.getElementById(\"antSacrificeRareFragment\").textContent = \"+\" + format(sacRewards.rareFragments) + \" [>1,500 ELO]\";\r\n        document.getElementById(\"antSacrificeEpicFragment\").textContent = \"+\" + format(sacRewards.epicFragments) + \" [>2,000 ELO]\";\r\n        document.getElementById(\"antSacrificeLegendaryFragment\").textContent = \"+\" + format(sacRewards.legendaryFragments) + \" [>3,000 ELO]\";\r\n        document.getElementById(\"antSacrificeMythicalFragment\").textContent = \"+\" + format(sacRewards.mythicalFragments) + \" [>5,000 ELO]\";\r\n    }\r\n};\r\nexport const sacrificeAnts = (auto = false) => {\r\n    const historyEntry = {};\r\n    let p = true;\r\n    if (player.antPoints.gte(\"1e40\")) {\r\n        if (!auto && player.antSacrificePoints < 100 && player.toggles[32]) {\r\n            p = confirm(\"This resets your Crumbs, Ants and Ant Upgrades in exchange for some multiplier and resources. Continue?\");\r\n        }\r\n        if (p) {\r\n            historyEntry.antSacrificePointsBefore = player.antSacrificePoints;\r\n            const sacRewards = calculateAntSacrificeRewards();\r\n            player.antSacrificePoints += sacRewards.antSacrificePoints;\r\n            player.runeshards += sacRewards.offerings;\r\n            player.researchPoints += sacRewards.obtainium;\r\n            historyEntry.seconds = player.antSacrificeTimer;\r\n            historyEntry.offerings = sacRewards.offerings;\r\n            historyEntry.obtainium = sacRewards.obtainium;\r\n            historyEntry.antSacrificePointsAfter = player.antSacrificePoints;\r\n            historyEntry.baseELO = G['antELO'];\r\n            historyEntry.effectiveELO = G['effectiveELO'];\r\n            historyEntry.crumbs = player.antPoints;\r\n            historyEntry.crumbsPerSecond = G['antOneProduce'];\r\n            if (player.challengecompletions[9] > 0) {\r\n                player.talismanShards += sacRewards.talismanShards;\r\n                player.commonFragments += sacRewards.commonFragments;\r\n                player.uncommonFragments += sacRewards.uncommonFragments;\r\n                player.rareFragments += sacRewards.rareFragments;\r\n                player.epicFragments += sacRewards.epicFragments;\r\n                player.legendaryFragments += sacRewards.legendaryFragments;\r\n                player.mythicalFragments += sacRewards.mythicalFragments;\r\n            }\r\n            if (player.shopUpgrades.offeringAutoLevel > 0.5 && player.autoSacrificeToggle) {\r\n                if (player.cubeUpgrades[20] === 1 && player.runeshards >= 5) {\r\n                    let unmaxed = 0;\r\n                    for (let i = 1; i <= 5; i++) {\r\n                        if (player.runelevels[i - 1] < calculateMaxRunes(i))\r\n                            unmaxed++;\r\n                    }\r\n                    if (unmaxed > 0) {\r\n                        const baseAmount = Math.floor(player.runeshards / unmaxed);\r\n                        for (let i = 1; i <= 5; i++) {\r\n                            redeemShards(i, true, baseAmount);\r\n                        }\r\n                        player.sacrificeTimer = 0;\r\n                    }\r\n                }\r\n            }\r\n            resetAnts();\r\n            player.antSacrificeTimer = 0;\r\n            player.antSacrificeTimerReal = 0;\r\n            updateTalismanInventory();\r\n            if (player.autoResearch > 0 && player.autoResearchToggle) {\r\n                const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\r\n                buyResearch(player.autoResearch, true, linGrowth);\r\n            }\r\n            calculateAntSacrificeELO();\r\n            Synergism.emit('historyAdd', 'ants', 'antsacrifice', historyEntry);\r\n        }\r\n    }\r\n    if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\r\n        achievementaward(248);\r\n    }\r\n};\r\nexport const autoBuyAnts = () => {\r\n    const canAffordUpgrade = (x, m) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G['antUpgradeBaseCost'][x - 1]), player.antUpgrades[x - 1] + 1, x).times(m));\r\n    const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145];\r\n    const cost = [\"100\", \"100\", \"1000\", \"1000\", \"1e5\", \"1e6\", \"1e8\", \"1e11\", \"1e15\", \"1e20\", \"1e40\", \"1e100\"];\r\n    if (player.currentChallenge.ascension !== 11) {\r\n        for (let i = 1; i <= ach.length; i++) {\r\n            const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]];\r\n            if (check && canAffordUpgrade(i, 2)) {\r\n                buyAntUpgrade(cost[i - 1], true, i);\r\n            }\r\n        }\r\n    }\r\n    const _ach = [173, 176, 177, 178, 179, 180, 181, 182];\r\n    const _cost = [\"1e800\", \"3\", \"100\", \"10000\", \"1e12\", \"1e36\", \"1e100\", \"1e300\"];\r\n    for (let i = 1; i <= _ach.length; i++) {\r\n        const res = i === 1 ? player.reincarnationPoints : player.antPoints;\r\n        const m = i === 1 ? 1 : 2;\r\n        if (player.achievements[_ach[i - 1]] && res.gte(player[G['ordinals'][i - 1] + \"CostAnts\"].times(m))) {\r\n            buyAntProducers(G['ordinals'][i - 1], \"Ants\", _cost[i - 1], i);\r\n        }\r\n    }\r\n};\r\n","import { player } from './Synergism';\r\nimport { achievementaward } from './Achievements';\r\nimport Decimal from 'break_infinity.js';\r\nimport { upgradeupdate } from './Upgrades';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { Globals as G } from './Variables';\r\nimport { buyUpgrades } from './Buy';\r\nconst buyGenerator = (i, state, auto) => {\r\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\r\n        player.unlocks.generation = true;\r\n    }\r\n    const q = 100 + i;\r\n    let type = \"transcendPoints\";\r\n    if (q <= 110 && q >= 106) {\r\n        type = \"coins\";\r\n    }\r\n    else if (q <= 115) {\r\n        type = \"prestigePoints\";\r\n    }\r\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\r\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\r\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n        if (achievementCheck === 0 && q >= 102 && q <= 105) {\r\n            achievementaward(q - 31);\r\n        }\r\n        player[type] = player[type].sub(cost);\r\n        player.upgrades[q] = 1;\r\n        upgradeupdate(q, state);\r\n    }\r\n    if (!auto) {\r\n        revealStuff();\r\n    }\r\n};\r\nexport const buyAutobuyers = (i, state) => {\r\n    const q = i + 80;\r\n    let type = \"\";\r\n    if (q <= 87) {\r\n        type = \"prestigePoints\";\r\n    }\r\n    else if (q <= 93) {\r\n        type = \"transcendPoints\";\r\n    }\r\n    else {\r\n        type = \"reincarnationPoints\";\r\n    }\r\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\r\n    if (player[type].gte(cost) && player.upgrades[q] === 0) {\r\n        player[type] = player[type].sub(cost);\r\n        player.upgrades[q] = 1;\r\n        upgradeupdate(q, state);\r\n    }\r\n};\r\nexport const autoUpgrades = () => {\r\n    if (player.upgrades[90] > 0.5 && player.shoptoggles.generators === true) {\r\n        for (let i = 1; i < 6; i++) {\r\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + i)])) && player.shoptoggles.generators === true) {\r\n                buyGenerator(i, true, true);\r\n            }\r\n        }\r\n        for (let j = 6; j < 11; j++) {\r\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][(100 + j)])) && player.shoptoggles.generators === true) {\r\n                buyGenerator(j, true, true);\r\n            }\r\n        }\r\n        for (let k = 11; k < 16; k++) {\r\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + k)])) && player.shoptoggles.generators === true) {\r\n                buyGenerator(k, true, true);\r\n            }\r\n        }\r\n        for (let l = 16; l < 21; l++) {\r\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + l)])) && player.shoptoggles.generators === true) {\r\n                buyGenerator(l, true, true);\r\n            }\r\n        }\r\n    }\r\n    if (player.upgrades[91] > 0.5) {\r\n        for (let i = 1; i < 21; i++) {\r\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true) {\r\n                buyUpgrades('coin', i, true);\r\n            }\r\n        }\r\n        for (let i = 121; i <= 125; i++) {\r\n            if (player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true && player.cubeUpgrades[19] > 0) {\r\n                buyUpgrades('coin', i, true);\r\n            }\r\n        }\r\n    }\r\n    if (player.upgrades[92] > 0.5) {\r\n        for (let i = 21; i < 38; i++) {\r\n            if (player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.prestige === true) {\r\n                buyUpgrades('prestige', i, true);\r\n            }\r\n        }\r\n        if (player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige === true && player.achievements[120] === 1) {\r\n            buyUpgrades('prestige', 38, true);\r\n        }\r\n        if (player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige === true && player.achievements[127] === 1) {\r\n            buyUpgrades('prestige', 39, true);\r\n        }\r\n        if (player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige === true && player.achievements[134] === 1) {\r\n            buyUpgrades('prestige', 40, true);\r\n        }\r\n    }\r\n    if (player.upgrades[99] > 0.5) {\r\n        for (let i = 41; i < 61; i++) {\r\n            if (player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.transcend === true) {\r\n                buyUpgrades('transcend', i, true);\r\n            }\r\n        }\r\n    }\r\n    if (player.cubeUpgrades[8] > 0) {\r\n        for (let i = 61; i <= 80; i++) {\r\n            if (player.reincarnationPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.reincarnate) {\r\n                buyUpgrades('reincarnation', i, true);\r\n            }\r\n        }\r\n    }\r\n};\r\n","import { player, updateAllTick, updateAllMultiplier, format } from './Synergism';\r\nimport { CalcECC } from './Challenges';\r\nimport Decimal from 'break_infinity.js';\r\nimport { achievementaward } from './Achievements';\r\nimport { smallestInc } from './Utility';\r\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades';\r\nimport { reset } from './Reset';\r\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate';\r\nimport { Globals as G } from './Variables';\r\nexport const getReductionValue = () => {\r\n    let reduction = 1;\r\n    reduction += (G['rune4level'] * G['effectiveLevelMult']) / 160;\r\n    reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\r\n    reduction += CalcECC('transcend', player.challengecompletions[4]) / 200;\r\n    reduction += Math.min(99999.9, (3 * (player.antUpgrades[7 - 1] + G['bonusant7'])) / 100);\r\n    return reduction;\r\n};\r\nconst getCostAccelerator = (buyingTo) => {\r\n    --buyingTo;\r\n    const originalCost = 500;\r\n    let cost = new Decimal(originalCost);\r\n    cost = cost.times(Decimal.pow(4 / G['costDivisor'], buyingTo));\r\n    if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n        const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4]);\r\n        const factorialBit = new Decimal(num).factorial();\r\n        const multBit = Decimal.pow(4, num);\r\n        cost = cost.times(multBit.times(factorialBit));\r\n    }\r\n    if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n        const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4]);\r\n        const sumBit = sumNum * (sumNum + 1) / 2;\r\n        cost = cost.times(Decimal.pow(2, sumBit));\r\n    }\r\n    if (player.currentChallenge.transcension === 4) {\r\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\r\n        cost = cost.times(Decimal.pow(10, sumBit));\r\n    }\r\n    if (player.currentChallenge.reincarnation === 8) {\r\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\r\n        cost = cost.times(Decimal.pow(1e50, sumBit));\r\n    }\r\n    return cost;\r\n};\r\nexport const buyAccelerator = (autobuyer) => {\r\n    let buyTo = player.acceleratorBought + 1;\r\n    let cashToBuy = getCostAccelerator(buyTo);\r\n    while (player.coins.gte(cashToBuy)) {\r\n        buyTo = buyTo * 4;\r\n        cashToBuy = getCostAccelerator(buyTo);\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8);\r\n    while (stepdown !== 0) {\r\n        if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\r\n            stepdown = Math.floor(stepdown / 2);\r\n        }\r\n        else {\r\n            buyTo = buyTo - stepdown;\r\n        }\r\n    }\r\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\r\n        if (player.acceleratorBought + player.coinbuyamount < buyTo) {\r\n            buyTo = player.acceleratorBought + player.coinbuyamount;\r\n        }\r\n    }\r\n    let buyFrom = Math.max(buyTo - 7, player.acceleratorBought + 1);\r\n    let thisCost = getCostAccelerator(buyFrom);\r\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n        player.coins = player.coins.sub(thisCost);\r\n        player.acceleratorBought = buyFrom;\r\n        buyFrom = buyFrom + 1;\r\n        thisCost = getCostAccelerator(buyFrom);\r\n        player.acceleratorCost = thisCost;\r\n    }\r\n    player.prestigenoaccelerator = false;\r\n    player.transcendnoaccelerator = false;\r\n    player.reincarnatenoaccelerator = false;\r\n    updateAllTick();\r\n    if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\r\n        achievementaward(148);\r\n    }\r\n    if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\r\n        achievementaward(149);\r\n    }\r\n    if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\r\n        achievementaward(150);\r\n    }\r\n    if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\r\n        achievementaward(151);\r\n    }\r\n    if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\r\n        achievementaward(152);\r\n    }\r\n    if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\r\n        achievementaward(153);\r\n    }\r\n    if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\r\n        achievementaward(154);\r\n    }\r\n};\r\nconst getCostMultiplier = (buyingTo) => {\r\n    --buyingTo;\r\n    const originalCost = 1e5;\r\n    let cost = new Decimal(originalCost);\r\n    cost = cost.times(Decimal.pow(10, buyingTo / G['costDivisor']));\r\n    if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n        const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4]);\r\n        const factorialBit = new Decimal(num).factorial();\r\n        const powBit = Decimal.pow(10, num);\r\n        cost = cost.times(factorialBit.times(powBit));\r\n    }\r\n    if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\r\n        const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4]);\r\n        const sumBit = sumNum * (sumNum + 1) / 2;\r\n        cost = cost.times(Decimal.pow(2, sumBit));\r\n    }\r\n    if (player.currentChallenge.transcension === 4) {\r\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\r\n        cost = cost.times(Decimal.pow(10, sumBit));\r\n    }\r\n    if (player.currentChallenge.reincarnation === 8) {\r\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\r\n        cost = cost.times(Decimal.pow(1e50, sumBit));\r\n    }\r\n    return cost;\r\n};\r\nexport const buyMultiplier = (autobuyer) => {\r\n    let buyTo = player.multiplierBought + 1;\r\n    let cashToBuy = getCostMultiplier(buyTo);\r\n    while (player.coins.gte(cashToBuy)) {\r\n        buyTo = buyTo * 4;\r\n        cashToBuy = getCostMultiplier(buyTo);\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8);\r\n    while (stepdown !== 0) {\r\n        if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\r\n            stepdown = Math.floor(stepdown / 2);\r\n        }\r\n        else {\r\n            buyTo = buyTo - stepdown;\r\n        }\r\n    }\r\n    if (!autobuyer && player.coinbuyamount !== \"max\") {\r\n        if (player.multiplierBought + player.coinbuyamount < buyTo) {\r\n            buyTo = player.multiplierBought + player.coinbuyamount;\r\n        }\r\n    }\r\n    let buyFrom = Math.max(buyTo - 7, player.multiplierBought + 1);\r\n    let thisCost = getCostMultiplier(buyFrom);\r\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\r\n        player.coins = player.coins.sub(thisCost);\r\n        player.multiplierBought = buyFrom;\r\n        buyFrom = buyFrom + 1;\r\n        thisCost = getCostMultiplier(buyFrom);\r\n        player.multiplierCost = thisCost;\r\n    }\r\n    player.prestigenomultiplier = false;\r\n    player.transcendnomultiplier = false;\r\n    player.reincarnatenomultiplier = false;\r\n    updateAllMultiplier();\r\n    if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\r\n        achievementaward(155);\r\n    }\r\n    if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\r\n        achievementaward(156);\r\n    }\r\n    if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\r\n        achievementaward(157);\r\n    }\r\n    if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\r\n        achievementaward(158);\r\n    }\r\n    if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\r\n        achievementaward(159);\r\n    }\r\n    if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\r\n        achievementaward(160);\r\n    }\r\n    if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\r\n        achievementaward(161);\r\n    }\r\n};\r\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI);\r\nconst exponentFactorialPartExtra = Math.log10(Math.E);\r\nconst factorialByExponent = (fact) => {\r\n    if (++fact === 0) {\r\n        return 0;\r\n    }\r\n    return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2);\r\n};\r\nconst fact100exponent = Math.log10(9.3326215443944152681699238856267e+157);\r\nconst precision16_loss_addition_of_ones = 188.582;\r\nconst known_log10s = function () {\r\n    const needed = [1.03, 1.25];\r\n    const nums = [1, 2, 3, 4, 5, 6, 10, 15];\r\n    for (const num of nums) {\r\n        needed.push(100 + (100 * num));\r\n        needed.push(10 + (10 * num));\r\n    }\r\n    const chalcompletions = 1000;\r\n    for (let i = 0; i < chalcompletions; ++i) {\r\n        needed.push(1 + (i / 2));\r\n    }\r\n    const obj = {};\r\n    for (const need of needed) {\r\n        if (obj[need] === undefined) {\r\n            obj[need] = Math.log10(need);\r\n        }\r\n    }\r\n    return obj;\r\n}();\r\nexport const getCost = (originalCost, buyingTo, type, num, r) => {\r\n    --buyingTo;\r\n    const cost = new Decimal(originalCost);\r\n    let mlog10125 = num * buyingTo;\r\n    if (buyingTo < precision16_loss_addition_of_ones / num) {\r\n        cost.mantissa += buyingTo / Math.pow(10, cost.exponent);\r\n    }\r\n    let fastFactMultBuyTo = 0;\r\n    let fr = Math.floor(r * 1000);\r\n    if (buyingTo >= r * 1000) {\r\n        ++fastFactMultBuyTo;\r\n        cost.exponent -= factorialByExponent(fr);\r\n        cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr);\r\n    }\r\n    fr = Math.floor(r * 5000);\r\n    if (buyingTo >= r * 5000) {\r\n        ++fastFactMultBuyTo;\r\n        cost.exponent -= factorialByExponent(fr);\r\n        cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1;\r\n    }\r\n    fr = Math.floor(r * 20000);\r\n    if (buyingTo >= r * 20000) {\r\n        fastFactMultBuyTo += 3;\r\n        cost.exponent -= factorialByExponent(fr) * 3;\r\n        cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr);\r\n    }\r\n    fr = Math.floor(r * 250000);\r\n    if (buyingTo >= r * 250000) {\r\n        cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2);\r\n    }\r\n    cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo;\r\n    let fastFactMultBuyTo100 = 0;\r\n    if ((player.currentChallenge.transcension === 4) && (type === \"Coin\" || type === \"Diamonds\")) {\r\n        ++fastFactMultBuyTo100;\r\n        if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\r\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\r\n        }\r\n    }\r\n    if ((player.currentChallenge.reincarnation === 10) && (type === \"Coin\" || type === \"Diamonds\")) {\r\n        ++fastFactMultBuyTo100;\r\n        if (buyingTo >= (r * 25000)) {\r\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\r\n        }\r\n    }\r\n    cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)));\r\n    cost.exponent += known_log10s[1.25] * mlog10125;\r\n    fr = Math.floor(r * 1000 * player.challengecompletions[8]);\r\n    if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\r\n        cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr);\r\n    }\r\n    const extra = cost.exponent - Math.floor(cost.exponent);\r\n    cost.exponent = Math.floor(cost.exponent);\r\n    cost.mantissa *= Math.pow(10, extra);\r\n    cost.normalize();\r\n    return cost;\r\n};\r\nexport const buyMax = (pos, type, num, originalCost) => {\r\n    const r = getReductionValue();\r\n    let tag = '';\r\n    switch (type) {\r\n        case 'Diamonds':\r\n            tag = 'prestigePoints';\r\n            break;\r\n        case 'Mythos':\r\n            tag = 'transcendPoints';\r\n            break;\r\n        case 'Particles':\r\n            tag = 'reincarnationPoints';\r\n            break;\r\n        case 'Coin':\r\n            tag = 'coins';\r\n            break;\r\n    }\r\n    const buyStart = player[pos + 'Owned' + type];\r\n    let buyInc = 1;\r\n    let cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\r\n    while (player[tag].gte(cashToBuy)) {\r\n        buyInc = buyInc * 4;\r\n        cashToBuy = getCost(originalCost, buyStart + buyInc, type, num, r);\r\n    }\r\n    let stepdown = Math.floor(buyInc / 8);\r\n    while (stepdown !== 0) {\r\n        if (getCost(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\r\n            stepdown = Math.floor(stepdown / 2);\r\n        }\r\n        else {\r\n            buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\r\n        }\r\n    }\r\n    let buyFrom = Math.max(buyStart + buyInc - 7, player[pos + 'Owned' + type] + 1);\r\n    let thisCost = getCost(originalCost, buyFrom, type, num, r);\r\n    while (buyFrom < buyStart + buyInc && player[tag].gte(thisCost)) {\r\n        player[tag] = player[tag].sub(thisCost);\r\n        player[pos + 'Owned' + type] = buyFrom;\r\n        buyFrom = buyFrom + smallestInc(buyFrom);\r\n        thisCost = getCost(originalCost, buyFrom, type, num, r);\r\n        player[pos + 'Cost' + type] = thisCost;\r\n    }\r\n};\r\nconst buyProducerTypes = {\r\n    Diamonds: ['prestigePoints', 'crystal'],\r\n    Mythos: ['transcendPoints', 'mythos'],\r\n    Particles: ['reincarnationPoints', 'particle'],\r\n    Coin: ['coins', 'coin']\r\n};\r\nexport const buyProducer = (pos, type, num, autobuyer) => {\r\n    const [tag, amounttype] = buyProducerTypes[type];\r\n    const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount`];\r\n    let r = 1;\r\n    r += (G['rune4level'] * G['effectiveLevelMult']) / 160;\r\n    r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\r\n    r += CalcECC('transcend', player.challengecompletions[4]) / 200;\r\n    r += (3 * (G['bonusant7'] + player.antUpgrades[7 - 1])) / 100;\r\n    while (player[tag].gte(player[pos + 'Cost' + type]) && G['ticker'] < buythisamount) {\r\n        player[tag] = player[tag].sub(player[pos + 'Cost' + type]);\r\n        player[pos + 'Owned' + type] += 1;\r\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, num));\r\n        player[pos + 'Cost' + type] = player[pos + 'Cost' + type].add(1);\r\n        if (player[pos + 'Owned' + type] >= (1000 * r)) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).dividedBy(1000).times(1 + num / 2);\r\n        }\r\n        if (player[pos + 'Owned' + type] >= (5000 * r)) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(player[pos + 'Owned' + type]).times(10).times(10 + num * 10);\r\n        }\r\n        if (player[pos + 'Owned' + type] >= (20000 * r)) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(player[pos + 'Owned' + type], 3)).times(100000).times(100 + num * 100);\r\n        }\r\n        if (player[pos + 'Owned' + type] >= (250000 * r)) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.03, player[pos + 'Owned' + type] - 250000 * r));\r\n        }\r\n        if (player.currentChallenge.transcension === 4 && (type === \"Coin\" || type === \"Diamonds\")) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Math.pow(100 * player[pos + 'Owned' + type] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]));\r\n            if (player[pos + 'Owned' + type] >= 1000 - (10 * player.challengecompletions[4])) {\r\n                player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(1.25, player[pos + 'Owned' + type]));\r\n            }\r\n        }\r\n        if (player.currentChallenge.reincarnation === 8 && (type === \"Coin\" || type === \"Diamonds\" || type === \"Mythos\") && player[pos + 'Owned' + type] >= (1000 * player.challengecompletions[8] * r)) {\r\n            player[pos + 'Cost' + type] = player[pos + 'Cost' + type].times(Decimal.pow(2, (player[pos + 'Owned' + type] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))));\r\n        }\r\n        G['ticker'] += 1;\r\n    }\r\n    G['ticker'] = 0;\r\n};\r\nexport const buyUpgrades = (type, pos, state) => {\r\n    let addendum = \"\";\r\n    if (type === \"prestige\" || type === \"transcend\" || type === \"reincarnation\") {\r\n        addendum = \"Point\";\r\n    }\r\n    if (player[type + addendum + 's'].gte(Decimal.pow(10, G['upgradeCosts'][pos])) && player.upgrades[pos] === 0) {\r\n        player[type + addendum + 's'] = player[type + addendum + 's'].sub(Decimal.pow(10, G['upgradeCosts'][pos]));\r\n        player.upgrades[pos] = 1;\r\n        upgradeupdate(pos, state);\r\n    }\r\n    if (type === \"transcend\") {\r\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\r\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\r\n    }\r\n    if (type === \"prestige\") {\r\n        player.transcendnocoinorprestigeupgrades = false;\r\n        player.reincarnatenocoinorprestigeupgrades = false;\r\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\r\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\r\n    }\r\n    if (type === \"coin\") {\r\n        player.prestigenocoinupgrades = false;\r\n        player.transcendnocoinupgrades = false;\r\n        player.transcendnocoinorprestigeupgrades = false;\r\n        player.reincarnatenocoinupgrades = false;\r\n        player.reincarnatenocoinorprestigeupgrades = false;\r\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\r\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\r\n    }\r\n};\r\nexport const calculateCrystalBuy = (i) => {\r\n    const u = i - 1;\r\n    const exponent = Decimal.log(player.prestigeShards.add(1), 10);\r\n    const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G['crystalUpgradesCost'][u]) / G['crystalUpgradeCostIncrement'][u] + 1 / 4), 1 / 2) + 1 / 2);\r\n    return toBuy;\r\n};\r\nexport const buyCrystalUpgrades = (i, auto = false) => {\r\n    const u = i - 1;\r\n    let c = 0;\r\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\r\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n        c += 10;\r\n    }\r\n    const toBuy = calculateCrystalBuy(i);\r\n    if (toBuy + c > player.crystalUpgrades[u]) {\r\n        player.crystalUpgrades[u] = 100 / 100 * (toBuy + c);\r\n        if (toBuy > 0) {\r\n            player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G['crystalUpgradesCost'][u] + G['crystalUpgradeCostIncrement'][u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)));\r\n            if (!auto) {\r\n                crystalupgradedescriptions(i);\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const boostAccelerator = (automated) => {\r\n    let buyamount = 1;\r\n    if (player.upgrades[46] === 1) {\r\n        buyamount = automated ? 9999 : player.coinbuyamount;\r\n    }\r\n    if (player.upgrades[46] < 1) {\r\n        while (player.prestigePoints.gte(player.acceleratorBoostCost) && G['ticker'] < buyamount) {\r\n            if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n                player.acceleratorBoostBought += 1;\r\n                player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought));\r\n                if (player.acceleratorBoostBought > (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4]))) {\r\n                    player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4])), 2) / (1 + 2 * G['effectiveRuneBlessingPower'][4])));\r\n                }\r\n                player.transcendnoaccelerator = false;\r\n                player.reincarnatenoaccelerator = false;\r\n                if (player.upgrades[46] < 0.5) {\r\n                    for (let j = 21; j < 41; j++) {\r\n                        player.upgrades[j] = 0;\r\n                    }\r\n                    reset(\"prestige\");\r\n                    player.prestigePoints = new Decimal(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const buyStart = player.acceleratorBoostBought;\r\n        let buyInc = 1;\r\n        let cost = getAcceleratorBoostCost(buyStart + buyInc);\r\n        while (player.prestigePoints.gte(cost)) {\r\n            buyInc *= 4;\r\n            cost = getAcceleratorBoostCost(buyStart + buyInc);\r\n        }\r\n        let stepdown = Math.floor(buyInc / 8);\r\n        while (stepdown !== 0) {\r\n            if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\r\n                stepdown = Math.floor(stepdown / 2);\r\n            }\r\n            else {\r\n                buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\r\n            }\r\n        }\r\n        let buyFrom = Math.max(buyStart + buyInc - 7, player.acceleratorBoostBought + 1);\r\n        let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought);\r\n        while (buyFrom < buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\r\n            player.prestigePoints = player.prestigePoints.sub(thisCost);\r\n            player.acceleratorBoostBought = buyFrom;\r\n            buyFrom = buyFrom + smallestInc(buyInc);\r\n            thisCost = getAcceleratorBoostCost(buyFrom);\r\n            player.acceleratorBoostCost = thisCost;\r\n            player.transcendnoaccelerator = false;\r\n            player.reincarnatenoaccelerator = false;\r\n        }\r\n    }\r\n    G['ticker'] = 0;\r\n    if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\r\n        achievementaward(162);\r\n    }\r\n    if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\r\n        achievementaward(163);\r\n    }\r\n    if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\r\n        achievementaward(164);\r\n    }\r\n    if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\r\n        achievementaward(165);\r\n    }\r\n    if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\r\n        achievementaward(166);\r\n    }\r\n    if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\r\n        achievementaward(167);\r\n    }\r\n    if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\r\n        achievementaward(168);\r\n    }\r\n};\r\nconst getAcceleratorBoostCost = (level = 1) => {\r\n    level--;\r\n    const base = new Decimal(1e3);\r\n    const eff = 1 + 2 * G['effectiveRuneBlessingPower'][4];\r\n    const linSum = (n) => n * (n + 1) / 2;\r\n    const sqrSum = (n) => n * (n + 1) * (2 * n + 1) / 6;\r\n    if (level > 1000 * eff) {\r\n        return base.times(Decimal.pow(10, 10 * level\r\n            + linSum(level)\r\n            + sqrSum(level - 1000 * eff) / eff));\r\n    }\r\n    else {\r\n        return base.times(Decimal.pow(10, 10 * level + linSum(level)));\r\n    }\r\n};\r\nconst getParticleCost = (originalCost, buyTo) => {\r\n    --buyTo;\r\n    originalCost = new Decimal(originalCost);\r\n    let cost = originalCost.times(Decimal.pow(2, buyTo));\r\n    const DR = (player.currentChallenge.ascension !== 15) ? 325000 : 1000;\r\n    if (buyTo > DR) {\r\n        cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)));\r\n    }\r\n    return (cost);\r\n};\r\nexport const buyParticleBuilding = (pos, originalCost, autobuyer = false) => {\r\n    let buyTo = player[pos + 'OwnedParticles'] + 1;\r\n    let cashToBuy = getParticleCost(originalCost, buyTo);\r\n    while (player.reincarnationPoints.gte(cashToBuy)) {\r\n        buyTo = buyTo * 4;\r\n        cashToBuy = getParticleCost(originalCost, buyTo);\r\n    }\r\n    let stepdown = Math.floor(buyTo / 8);\r\n    while (stepdown !== 0) {\r\n        if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\r\n            stepdown = Math.floor(stepdown / 2);\r\n        }\r\n        else {\r\n            buyTo = buyTo - stepdown;\r\n        }\r\n    }\r\n    if (!autobuyer) {\r\n        if (player.particlebuyamount + player[pos + 'OwnedParticles'] < buyTo) {\r\n            buyTo = player[pos + 'OwnedParticles'] + player.particlebuyamount + 1;\r\n        }\r\n    }\r\n    let buyFrom = Math.max(buyTo - 7, player[pos + 'OwnedParticles'] + 1);\r\n    let thisCost = getParticleCost(originalCost, buyFrom);\r\n    while (buyFrom < buyTo && player.reincarnationPoints.gte(getParticleCost(originalCost, buyFrom))) {\r\n        player.reincarnationPoints = player.reincarnationPoints.sub(thisCost);\r\n        player[pos + 'OwnedParticles'] = buyFrom;\r\n        buyFrom = buyFrom + 1;\r\n        thisCost = getParticleCost(originalCost, buyFrom);\r\n        player[pos + 'CostParticles'] = thisCost;\r\n    }\r\n};\r\nexport const getTesseractCost = (intCost, index) => {\r\n    const buyFrom = player['ascendBuilding' + index]['owned'];\r\n    const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2);\r\n    let buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((player.wowTesseracts + subCost) / intCost, 1 / 2), 1 / 2));\r\n    buyTo = Math.min(buyTo, player.tesseractbuyamount + player['ascendBuilding' + index]['owned']);\r\n    const actualCost = intCost * Math.pow(buyTo * (buyTo + 1) / 2, 2) - subCost;\r\n    return [buyTo, actualCost];\r\n};\r\nexport const buyTesseractBuilding = (intCost, index) => {\r\n    const buyTo = getTesseractCost(intCost, index)[0];\r\n    const actualCost = getTesseractCost(intCost, index)[1];\r\n    player['ascendBuilding' + index]['owned'] = buyTo;\r\n    player.wowTesseracts -= actualCost;\r\n    player['ascendBuilding' + index]['cost'] = intCost * Math.pow(1 + player['ascendBuilding' + index]['owned'], 3);\r\n};\r\nexport const buyRuneBonusLevels = (type, index) => {\r\n    let baseCost;\r\n    let baseLevels;\r\n    let levelCap;\r\n    (type === 'Spirits') ?\r\n        (baseCost = G['spiritBaseCost'], baseLevels = player.runeSpiritLevels[index], levelCap = player.runeSpiritBuyAmount) :\r\n        (baseCost = G['blessingBaseCost'], baseLevels = player.runeBlessingLevels[index], levelCap = player.runeBlessingBuyAmount);\r\n    const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap);\r\n    (type === 'Blessings') ?\r\n        player.runeSpiritLevels[index] = level :\r\n        player.runeBlessingLevels[index] = level;\r\n    player.runeshards -= cost;\r\n    if (index === 1) {\r\n        const requirementArray = [0, 1e5, 1e8, 1e11];\r\n        for (let i = 1; i <= 3; i++) {\r\n            if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\r\n                achievementaward(231 + i);\r\n            }\r\n            if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\r\n                achievementaward(234 + i);\r\n            }\r\n        }\r\n        if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\r\n            achievementaward(245);\r\n        }\r\n    }\r\n    calculateRuneBonuses();\r\n    if (type === 'Blessings') {\r\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\r\n        const t = (index === 5) ? 1 : 0;\r\n        document.getElementById('runeBlessingPower' + index + 'Value1').textContent = format(G['runeBlessings'][index]);\r\n        document.getElementById('runeBlessingPower' + index + 'Value2').textContent = format(1 - t + blessingMultiplierArray[index] * G['effectiveRuneBlessingPower'][index], 4, true);\r\n    }\r\n    if (type === 'Spirits') {\r\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\r\n        spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400);\r\n        const t = (index === 3) ? 1 : 0;\r\n        document.getElementById('runeSpiritPower' + index + 'Value1').textContent = format(G['runeSpirits'][index]);\r\n        document.getElementById('runeSpiritPower' + index + 'Value2').textContent = format(1 - t + spiritMultiplierArray[index] * G['effectiveRuneSpiritPower'][index], 4, true);\r\n    }\r\n};\r\n","import { player, format, interval, clearInt, saveSynergy, resourceGain, updateAll } from './Synergism';\r\nimport { sumContents, productContents } from './Utility';\r\nimport { Globals as G } from './Variables';\r\nimport { CalcECC } from './Challenges';\r\nimport Decimal from 'break_infinity.js';\r\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans';\r\nimport { reset } from './Reset';\r\nimport { achievementaward } from './Achievements';\r\nimport { redeemShards } from './Runes';\r\nexport const calculateTotalCoinOwned = () => {\r\n    G['totalCoinOwned'] =\r\n        player.firstOwnedCoin +\r\n            player.secondOwnedCoin +\r\n            player.thirdOwnedCoin +\r\n            player.fourthOwnedCoin +\r\n            player.fifthOwnedCoin;\r\n};\r\nexport const calculateTotalAcceleratorBoost = () => {\r\n    let b = 0;\r\n    if (player.upgrades[26] > 0.5) {\r\n        b += 1;\r\n    }\r\n    if (player.upgrades[31] > 0.5) {\r\n        b += Math.floor(G['totalCoinOwned'] / 2000) * 100 / 100;\r\n    }\r\n    if (player.achievements[7] > 0.5) {\r\n        b += Math.floor(player.firstOwnedCoin / 2000);\r\n    }\r\n    if (player.achievements[14] > 0.5) {\r\n        b += Math.floor(player.secondOwnedCoin / 2000);\r\n    }\r\n    if (player.achievements[21] > 0.5) {\r\n        b += Math.floor(player.thirdOwnedCoin / 2000);\r\n    }\r\n    if (player.achievements[28] > 0.5) {\r\n        b += Math.floor(player.fourthOwnedCoin / 2000);\r\n    }\r\n    if (player.achievements[35] > 0.5) {\r\n        b += Math.floor(player.fifthOwnedCoin / 2000);\r\n    }\r\n    b += player.researches[93] * Math.floor(1 / 20 * (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']));\r\n    b += Math.floor((0.01 + G['rune1level']) * G['effectiveLevelMult'] / 20);\r\n    b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\r\n    b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17]);\r\n    b *= (1 + 1 / 20 * player.researches[88]);\r\n    b *= calculateSigmoidExponential(20, (player.antUpgrades[4 - 1] + G['bonusant4']) / 1000 * 20 / 19);\r\n    b *= (1 + 1 / 100 * player.researches[127]);\r\n    b *= (1 + 0.8 / 100 * player.researches[142]);\r\n    b *= (1 + 0.6 / 100 * player.researches[157]);\r\n    b *= (1 + 0.4 / 100 * player.researches[172]);\r\n    b *= (1 + 0.2 / 100 * player.researches[187]);\r\n    b *= (1 + 0.01 / 100 * player.researches[200]);\r\n    b *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\r\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n        b *= 2;\r\n    }\r\n    b = Math.floor(b);\r\n    G['freeAcceleratorBoost'] = b;\r\n    G['totalAcceleratorBoost'] = Math.floor(player.acceleratorBoostBought + G['freeAcceleratorBoost']) * 100 / 100;\r\n};\r\nexport const calculateAcceleratorMultiplier = () => {\r\n    G['acceleratorMultiplier'] = 1;\r\n    G['acceleratorMultiplier'] *= (1 + player.achievements[60] / 100);\r\n    G['acceleratorMultiplier'] *= (1 + player.achievements[61] / 100);\r\n    G['acceleratorMultiplier'] *= (1 + player.achievements[62] / 100);\r\n    G['acceleratorMultiplier'] *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\r\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10]);\r\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[86]);\r\n    G['acceleratorMultiplier'] *= (1 + 1 / 100 * player.researches[126]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.8 / 100 * player.researches[141]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.6 / 100 * player.researches[156]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.4 / 100 * player.researches[171]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.2 / 100 * player.researches[186]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.researches[200]);\r\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\r\n    G['acceleratorMultiplier'] *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\r\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n        G['acceleratorMultiplier'] *= 1.25;\r\n    }\r\n};\r\nexport const calculateRecycleMultiplier = () => {\r\n    const recycleFactors = sumContents([\r\n        0.05 * player.achievements[80],\r\n        0.05 * player.achievements[87],\r\n        0.05 * player.achievements[94],\r\n        0.05 * player.achievements[101],\r\n        0.05 * player.achievements[108],\r\n        0.05 * player.achievements[115],\r\n        0.075 * player.achievements[122],\r\n        0.075 * player.achievements[129],\r\n        0.05 * player.upgrades[61],\r\n        0.25 * Math.min(1, G['rune4level'] / 400),\r\n        0.005 * player.cubeUpgrades[2]\r\n    ]);\r\n    return 1 / (1 - recycleFactors);\r\n};\r\nexport function calculateRuneExpGiven(runeIndex, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\r\n    const recycleMultiplier = calculateRecycleMultiplier();\r\n    let allRuneExpAdditiveMultiplier = null;\r\n    if (all) {\r\n        allRuneExpAdditiveMultiplier = sumContents([\r\n            1 / 100 * player.highestchallengecompletions[3],\r\n            1 * player.upgrades[66]\r\n        ]);\r\n    }\r\n    else {\r\n        allRuneExpAdditiveMultiplier = sumContents([\r\n            1,\r\n            Math.min(1, player.highestchallengecompletions[1]),\r\n            0.4 / 10 * player.highestchallengecompletions[1],\r\n            0.6 * player.researches[22],\r\n            0.3 * player.researches[23],\r\n            2 * player.upgrades[61],\r\n            player.upgrades[71] * runeLevel / 25\r\n        ]);\r\n    }\r\n    const allRuneExpMultiplier = productContents([\r\n        1 + (player.researches[91] / 20),\r\n        1 + (player.researches[92] / 20),\r\n        calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8 - 1] + G['bonusant8'], 1.1)),\r\n        G['cubeBonusMultiplier'][4],\r\n        (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\r\n        1 / Math.pow(G['droughtMultiplier'][player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13]),\r\n        1 + 1 / 10 * player.constantUpgrades[8],\r\n        G['challenge15Rewards'].runeExp\r\n    ]);\r\n    const runeExpMultiplier = [\r\n        productContents([\r\n            1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\r\n        ]),\r\n        productContents([\r\n            1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10)\r\n        ]),\r\n        productContents([\r\n            1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5)\r\n        ]),\r\n        productContents([\r\n            1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10)\r\n        ]),\r\n        productContents([\r\n            1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5)\r\n        ])\r\n    ];\r\n    const fact = [\r\n        allRuneExpAdditiveMultiplier,\r\n        allRuneExpMultiplier,\r\n        recycleMultiplier,\r\n        runeExpMultiplier[runeIndex]\r\n    ];\r\n    return returnFactors ? fact : productContents(fact);\r\n}\r\nexport const lookupTableGen = (runeLevel) => {\r\n    const allRuneExpRequiredMultiplier = productContents([\r\n        Math.pow(runeLevel / 2, 3),\r\n        ((3.5 * runeLevel) + 100) / 500,\r\n        Math.max(1, (runeLevel - 200) / 9),\r\n        Math.max(1, (runeLevel - 400) / 12),\r\n        Math.max(1, (runeLevel - 600) / 15),\r\n        Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\r\n    ]);\r\n    return allRuneExpRequiredMultiplier;\r\n};\r\nconst lookupTableRuneExp = Object.assign({}, ...Array.from({ length: 20000 }, (_, i) => ({ [i]: lookupTableGen(i) })));\r\nexport const calculateRuneExpToLevel = (runeIndex, runeLevel = player.runelevels[runeIndex]) => {\r\n    return lookupTableRuneExp[runeLevel] * G['runeexpbase'][runeIndex];\r\n};\r\nexport const calculateMaxRunes = (i) => {\r\n    let max = 1000;\r\n    const increaseAll = 10 * (2 * player.cubeUpgrades[16] + 2 * player.cubeUpgrades[37])\r\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\r\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\r\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50]);\r\n    const increaseMaxLevel = [\r\n        null,\r\n        10 * (player.researches[78] + player.researches[111]) + increaseAll,\r\n        10 * (player.researches[80] + player.researches[112]) + increaseAll,\r\n        10 * (player.researches[79] + player.researches[113]) + increaseAll,\r\n        10 * (player.researches[77] + player.researches[114]) + increaseAll,\r\n        10 * player.researches[115] + increaseAll\r\n    ];\r\n    max += increaseMaxLevel[i];\r\n    return max;\r\n};\r\nexport function calculateOfferings(input, calcMult = true, statistic = false) {\r\n    if (input == \"acceleratorBoost\" || input == \"ascension\" || input == \"ascensionChallenge\") {\r\n        return 0;\r\n    }\r\n    let q = 0;\r\n    let a = 0;\r\n    let b = 0;\r\n    let c = 0;\r\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\r\n        a += 3;\r\n        if (player.achievements[52] > 0.5) {\r\n            a += (25 * Math.min(player.reincarnationcounter / 1800, 1));\r\n        }\r\n        if (player.upgrades[62] > 0.5) {\r\n            a += 1 / 50 * (sumContents(player.challengecompletions));\r\n        }\r\n        a += 0.6 * player.researches[25];\r\n        if (player.researches[95] === 1) {\r\n            a += 4;\r\n        }\r\n        a += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\r\n        a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4);\r\n        a *= Math.min(Math.pow(player.reincarnationcounter / 10, 2), 1);\r\n        if (player.reincarnationcounter >= 5) {\r\n            a *= Math.max(1, player.reincarnationcounter / 10);\r\n        }\r\n    }\r\n    if (input == \"transcension\" || input == \"transcensionChallenge\" || input == \"reincarnation\" ||\r\n        input == \"reincarnationChallenge\") {\r\n        b += 2;\r\n        if (player.reincarnationCount > 0) {\r\n            b += 2;\r\n        }\r\n        if (player.achievements[44] > 0.5) {\r\n            b += (15 * Math.min(player.transcendcounter / 1800, 1));\r\n        }\r\n        if (player.challengecompletions[2] > 0) {\r\n            b += 1;\r\n        }\r\n        b += 0.2 * player.researches[24];\r\n        b += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\r\n        b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5);\r\n        b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25);\r\n        b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1);\r\n        if (player.transcendCount >= 5) {\r\n            b *= Math.max(1, player.transcendcounter / 10);\r\n        }\r\n    }\r\n    c += 1;\r\n    if (player.transcendCount > 0 || player.reincarnationCount > 0) {\r\n        c += 1;\r\n    }\r\n    if (player.reincarnationCount > 0) {\r\n        c += 2;\r\n    }\r\n    if (player.achievements[37] > 0.5) {\r\n        c += (15 * Math.min(player.prestigecounter / 1800, 1));\r\n    }\r\n    if (player.challengecompletions[2] > 0) {\r\n        c += 1;\r\n    }\r\n    c += 0.2 * player.researches[24];\r\n    c += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200);\r\n    c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5);\r\n    c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50);\r\n    c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1);\r\n    if (player.prestigeCount >= 5) {\r\n        c *= Math.max(1, player.prestigecounter / 10);\r\n    }\r\n    q = a + b + c;\r\n    const arr = [\r\n        1 + 10 * player.achievements[33] / 100,\r\n        1 + 15 * player.achievements[34] / 100,\r\n        1 + 25 * player.achievements[35] / 100,\r\n        1 + 20 * player.upgrades[38] / 100,\r\n        1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)),\r\n        1 + 1 / 50 * player.shopUpgrades.offeringAutoLevel,\r\n        1 + 1 / 25 * player.shopUpgrades.offeringTimerLevel,\r\n        1 + 1 / 100 * player.shopUpgrades.cashGrabLevel,\r\n        1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85],\r\n        1 + Math.pow((player.antUpgrades[6 - 1] + G['bonusant6']), .66),\r\n        G['cubeBonusMultiplier'][3],\r\n        1 + 0.02 * player.constantUpgrades[3],\r\n        1 + 0.0003 * player.talismanLevels[3 - 1] * player.researches[149] + 0.0004 * player.talismanLevels[3 - 1] * player.researches[179],\r\n        1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]),\r\n        1 + 0.01 / 100 * player.researches[200],\r\n        1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187],\r\n        1 + .6 * player.achievements[250] + 1 * player.achievements[251],\r\n        1 + 0.05 * player.cubeUpgrades[46],\r\n        1 + 0.02 / 100 * player.cubeUpgrades[50],\r\n        1 + player.platonicUpgrades[5],\r\n        1 + 2.5 * player.platonicUpgrades[10],\r\n        1 + 5 * player.platonicUpgrades[15],\r\n        G['challenge15Rewards'].offering,\r\n    ];\r\n    if (calcMult) {\r\n        q *= productContents(arr);\r\n    }\r\n    else if (!calcMult) {\r\n        return arr;\r\n    }\r\n    if (statistic) {\r\n        return productContents(arr);\r\n    }\r\n    q = Math.floor(q) * 100 / 100;\r\n    let persecond = 0;\r\n    if (input === \"prestige\") {\r\n        persecond = q / (1 + player.prestigecounter);\r\n    }\r\n    if (input === \"transcension\" || input == \"transcensionChallenge\") {\r\n        persecond = q / (1 + player.transcendcounter);\r\n    }\r\n    if (input === \"reincarnation\" || input == \"reincarnationChallenge\") {\r\n        persecond = q / (1 + player.reincarnationcounter);\r\n    }\r\n    if (persecond > player.offeringpersecond) {\r\n        player.offeringpersecond = persecond;\r\n    }\r\n    return q;\r\n}\r\nexport const calculateObtainium = () => {\r\n    G['obtainiumGain'] = 1;\r\n    if (player.upgrades[69] > 0) {\r\n        G['obtainiumGain'] *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5)).toNumber());\r\n    }\r\n    if (player.upgrades[72] > 0) {\r\n        G['obtainiumGain'] *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]));\r\n    }\r\n    if (player.upgrades[74] > 0) {\r\n        G['obtainiumGain'] *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)));\r\n    }\r\n    G['obtainiumGain'] *= (1 + player.researches[65] / 5);\r\n    G['obtainiumGain'] *= (1 + player.researches[76] / 10);\r\n    G['obtainiumGain'] *= (1 + player.researches[81] / 10);\r\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.obtainiumAutoLevel / 50);\r\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.cashGrabLevel / 100);\r\n    G['obtainiumGain'] *= (1 + G['rune5level'] / 200 * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)));\r\n    G['obtainiumGain'] *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07 * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15 * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147]);\r\n    G['obtainiumGain'] *= (1 + 2 * Math.pow((player.antUpgrades[10 - 1] + G['bonusant10']) / 50, 2 / 3));\r\n    G['obtainiumGain'] *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6));\r\n    G['obtainiumGain'] *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251]);\r\n    G['obtainiumGain'] *= G['cubeBonusMultiplier'][5];\r\n    G['obtainiumGain'] *= (1 + 0.04 * player.constantUpgrades[4]);\r\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[47]);\r\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[3]);\r\n    G['obtainiumGain'] *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]));\r\n    G['obtainiumGain'] *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][4]);\r\n    G['obtainiumGain'] *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144]);\r\n    G['obtainiumGain'] *= (1 + 0.02 / 100 * player.cubeUpgrades[50]);\r\n    if (player.achievements[53] > 0) {\r\n        G['obtainiumGain'] *= (1 + 1 / 800 * (G['runeSum']));\r\n    }\r\n    if (player.achievements[128]) {\r\n        G['obtainiumGain'] *= 1.5;\r\n    }\r\n    if (player.achievements[129]) {\r\n        G['obtainiumGain'] *= 1.25;\r\n    }\r\n    if (player.achievements[51] > 0) {\r\n        G['obtainiumGain'] += 4;\r\n    }\r\n    if (player.reincarnationcounter >= 2) {\r\n        G['obtainiumGain'] += 1 * player.researches[63];\r\n    }\r\n    if (player.reincarnationcounter >= 5) {\r\n        G['obtainiumGain'] += 2 * player.researches[64];\r\n    }\r\n    G['obtainiumGain'] *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2));\r\n    G['obtainiumGain'] *= (1 + 1 / 25 * player.shopUpgrades.obtainiumTimerLevel);\r\n    if (player.reincarnationCount >= 5) {\r\n        G['obtainiumGain'] *= Math.max(1, player.reincarnationcounter / 10);\r\n    }\r\n    G['obtainiumGain'] *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2);\r\n    G['obtainiumGain'] = Math.pow(G['obtainiumGain'], Math.min(1, G['illiteracyPower'][player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log(player.researchPoints + 10) / Math.log(10)))));\r\n    G['obtainiumGain'] *= (1 + 4 / 100 * player.cubeUpgrades[42]);\r\n    G['obtainiumGain'] *= (1 + 3 / 100 * player.cubeUpgrades[43]);\r\n    G['obtainiumGain'] *= (1 + player.platonicUpgrades[5]);\r\n    G['obtainiumGain'] *= (1 + 1.5 * player.platonicUpgrades[9]);\r\n    G['obtainiumGain'] *= (1 + 2.5 * player.platonicUpgrades[10]);\r\n    G['obtainiumGain'] *= (1 + 5 * player.platonicUpgrades[15]);\r\n    G['obtainiumGain'] *= G['challenge15Rewards'].obtainium;\r\n    if (player.currentChallenge.ascension === 15) {\r\n        G['obtainiumGain'] += 1;\r\n    }\r\n    if (player.currentChallenge.ascension === 14) {\r\n        G['obtainiumGain'] = 0;\r\n    }\r\n    player.obtainiumpersecond = G['obtainiumGain'] / (0.1 + player.reincarnationcounter);\r\n    player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond);\r\n};\r\nexport const calculateAutomaticObtainium = () => {\r\n    return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5);\r\n};\r\nexport const calculateTalismanEffects = () => {\r\n    let positiveBonus = 0;\r\n    let negativeBonus = 0;\r\n    if (player.achievements[135] === 1) {\r\n        positiveBonus += 0.02;\r\n    }\r\n    if (player.achievements[136] === 1) {\r\n        positiveBonus += 0.02;\r\n    }\r\n    positiveBonus += 0.02 * (player.talismanRarity[4 - 1] - 1);\r\n    positiveBonus += 1.2 * player.researches[106] / 100;\r\n    positiveBonus += 1.2 * player.researches[107] / 100;\r\n    positiveBonus += 1.2 * player.researches[116] / 200;\r\n    positiveBonus += 1.2 * player.researches[117] / 200;\r\n    positiveBonus += (G['cubeBonusMultiplier'][9] - 1);\r\n    positiveBonus += 0.0004 * player.cubeUpgrades[50];\r\n    negativeBonus += 0.06 * player.researches[118];\r\n    negativeBonus += 0.0004 * player.cubeUpgrades[50];\r\n    for (let i = 1; i <= 5; i++) {\r\n        if (player.talismanOne[i] === (1)) {\r\n            G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1 - 1]] + positiveBonus) * player.talismanLevels[1 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman1Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[1 - 1]] - negativeBonus) * player.talismanLevels[1 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanTwo[i] === (1)) {\r\n            G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2 - 1]] + positiveBonus) * player.talismanLevels[2 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman2Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[2 - 1]] - negativeBonus) * player.talismanLevels[2 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanThree[i] === (1)) {\r\n            G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3 - 1]] + positiveBonus) * player.talismanLevels[3 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman3Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[3 - 1]] - negativeBonus) * player.talismanLevels[3 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanFour[i] === (1)) {\r\n            G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4 - 1]] + positiveBonus) * player.talismanLevels[4 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman4Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[4 - 1]] - negativeBonus) * player.talismanLevels[4 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanFive[i] === (1)) {\r\n            G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5 - 1]] + positiveBonus) * player.talismanLevels[5 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman5Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[5 - 1]] - negativeBonus) * player.talismanLevels[5 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanSix[i] === (1)) {\r\n            G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6 - 1]] + positiveBonus) * player.talismanLevels[6 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman6Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[6 - 1]] - negativeBonus) * player.talismanLevels[6 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        if (player.talismanSeven[i] === (1)) {\r\n            G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7 - 1]] + positiveBonus) * player.talismanLevels[7 - 1] * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n        else {\r\n            G['talisman7Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[7 - 1]] - negativeBonus) * player.talismanLevels[7 - 1] * (-1) * G['challenge15Rewards'].talismanBonus;\r\n        }\r\n    }\r\n    const talismansEffects = [G['talisman1Effect'], G['talisman2Effect'], G['talisman3Effect'], G['talisman4Effect'], G['talisman5Effect'], G['talisman6Effect'], G['talisman7Effect']];\r\n    const runesTalisman = [0, 0, 0, 0, 0, 0];\r\n    talismansEffects.forEach((talismanEffect) => {\r\n        talismanEffect.forEach((levels, runeNumber) => {\r\n            runesTalisman[runeNumber] += levels;\r\n        });\r\n    });\r\n    [, G['rune1Talisman'], G['rune2Talisman'], G['rune3Talisman'], G['rune4Talisman'], G['rune5Talisman']] = runesTalisman;\r\n    G['talisman6Power'] = 0;\r\n    G['talisman7Quarks'] = 0;\r\n    if (player.talismanRarity[1 - 1] === 6) {\r\n        G['rune2Talisman'] += 400;\r\n    }\r\n    if (player.talismanRarity[2 - 1] === 6) {\r\n        G['rune1Talisman'] += 400;\r\n    }\r\n    if (player.talismanRarity[3 - 1] === 6) {\r\n        G['rune4Talisman'] += 400;\r\n    }\r\n    if (player.talismanRarity[4 - 1] === 6) {\r\n        G['rune3Talisman'] += 400;\r\n    }\r\n    if (player.talismanRarity[5 - 1] === 6) {\r\n        G['rune5Talisman'] += 400;\r\n    }\r\n    if (player.talismanRarity[6 - 1] === 6) {\r\n        G['talisman6Power'] = 2.5;\r\n    }\r\n    if (player.talismanRarity[7 - 1] === 6) {\r\n        G['talisman7Quarks'] = 2;\r\n    }\r\n};\r\nexport const calculateRuneLevels = () => {\r\n    calculateTalismanEffects();\r\n    if (player.currentChallenge.reincarnation !== 9) {\r\n        G['rune1level'] = Math.max(1, player.runelevels[0] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune1Talisman']) + 7 * player.constantUpgrades[7]);\r\n        G['rune2level'] = Math.max(1, player.runelevels[1] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune2Talisman']) + 7 * player.constantUpgrades[7]);\r\n        G['rune3level'] = Math.max(1, player.runelevels[2] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune3Talisman']) + 7 * player.constantUpgrades[7]);\r\n        G['rune4level'] = Math.max(1, player.runelevels[3] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune4Talisman']) + 7 * player.constantUpgrades[7]);\r\n        G['rune5level'] = Math.max(1, player.runelevels[4] + Math.min(1e7, (player.antUpgrades[9 - 1] + G['bonusant9'])) * 1 + (G['rune5Talisman']) + 7 * player.constantUpgrades[7]);\r\n    }\r\n    G['runeSum'] = sumContents([G['rune1level'], G['rune2level'], G['rune3level'], G['rune4level'], G['rune5level']]);\r\n    calculateRuneBonuses();\r\n};\r\nexport const calculateRuneBonuses = () => {\r\n    G['blessingMultiplier'] = 1;\r\n    G['spiritMultiplier'] = 1;\r\n    G['blessingMultiplier'] *= (1 + 6.9 * player.researches[134] / 100);\r\n    G['blessingMultiplier'] *= (1 + (player.talismanRarity[3 - 1] - 1) / 10);\r\n    G['blessingMultiplier'] *= (1 + 0.10 * Math.log(player.epicFragments + 1) / Math.log(10) * player.researches[174]);\r\n    G['blessingMultiplier'] *= (1 + 2 * player.researches[194] / 100);\r\n    if (player.researches[160] > 0) {\r\n        G['blessingMultiplier'] *= Math.pow(1.25, 8);\r\n    }\r\n    G['spiritMultiplier'] *= (1 + 8 * player.researches[164] / 100);\r\n    if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\r\n        G['spiritMultiplier'] *= Math.pow(2, 8);\r\n    }\r\n    G['spiritMultiplier'] *= (1 + 0.15 * Math.log(player.legendaryFragments + 1) / Math.log(10) * player.researches[189]);\r\n    G['spiritMultiplier'] *= (1 + 2 * player.researches[194] / 100);\r\n    G['spiritMultiplier'] *= (1 + (player.talismanRarity[5 - 1] - 1) / 100);\r\n    for (let i = 1; i <= 5; i++) {\r\n        G['runeBlessings'][i] = G['blessingMultiplier'] * player.runelevels[i - 1] * player.runeBlessingLevels[i];\r\n        G['runeSpirits'][i] = G['spiritMultiplier'] * player.runelevels[i - 1] * player.runeSpiritLevels[i];\r\n    }\r\n    for (let i = 1; i <= 5; i++) {\r\n        if (G['runeBlessings'][i] <= 1e30) {\r\n            G['effectiveRuneBlessingPower'][i] = (Math.pow(G['runeBlessings'][i], 1 / 8)) / 75 * G['challenge15Rewards'].blessingBonus;\r\n        }\r\n        else if (G['runeBlessings'][i] > 1e30) {\r\n            G['effectiveRuneBlessingPower'][i] = Math.pow(10, 5 / 2) * (Math.pow(G['runeBlessings'][i], 1 / 24)) / 75 * G['challenge15Rewards'].blessingBonus;\r\n        }\r\n        if (G['runeSpirits'][i] <= 1e25) {\r\n            G['effectiveRuneSpiritPower'][i] = (Math.pow(G['runeSpirits'][i], 1 / 8)) / 75 * G['challenge15Rewards'].spiritBonus;\r\n        }\r\n        else if (G['runeSpirits'][i] > 1e25) {\r\n            G['effectiveRuneSpiritPower'][i] = Math.pow(10, 25 / 12) * (Math.pow(G['runeSpirits'][i], 1 / 24)) / 75 * G['challenge15Rewards'].spiritBonus;\r\n        }\r\n    }\r\n};\r\nexport const calculateAnts = () => {\r\n    let bonusLevels = 0;\r\n    bonusLevels += 2 * (player.talismanRarity[6 - 1] - 1);\r\n    bonusLevels += CalcECC('reincarnation', player.challengecompletions[9]);\r\n    bonusLevels += 2 * player.constantUpgrades[6];\r\n    bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11]);\r\n    bonusLevels += Math.floor(1 / 200 * player.researches[200]);\r\n    bonusLevels *= G['challenge15Rewards'].bonusAntLevel;\r\n    let c11 = 0;\r\n    let c11bonus = 0;\r\n    if (player.currentChallenge.ascension === 11) {\r\n        c11 = 999;\r\n    }\r\n    if (player.currentChallenge.ascension === 11) {\r\n        c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)));\r\n    }\r\n    G['bonusant1'] = Math.min(player.antUpgrades[1 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant2'] = Math.min(player.antUpgrades[2 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant3'] = Math.min(player.antUpgrades[3 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant4'] = Math.min(player.antUpgrades[4 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant5'] = Math.min(player.antUpgrades[5 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant6'] = Math.min(player.antUpgrades[6 - 1] + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant7'] = Math.min(player.antUpgrades[7 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant8'] = Math.min(player.antUpgrades[8 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant9'] = Math.min(player.antUpgrades[9 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant10'] = Math.min(player.antUpgrades[10 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant11'] = Math.min(player.antUpgrades[11 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n    G['bonusant12'] = Math.min(player.antUpgrades[12 - 1] + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus);\r\n};\r\nexport const calculateAntSacrificeELO = () => {\r\n    G['antELO'] = 0;\r\n    G['effectiveELO'] = 0;\r\n    const antUpgradeSum = sumContents(player.antUpgrades);\r\n    if (player.antPoints.gte(\"1e40\")) {\r\n        G['antELO'] += Decimal.log(player.antPoints, 10);\r\n        G['antELO'] += 1 / 2 * antUpgradeSum;\r\n        G['antELO'] += 1 / 10 * player.firstOwnedAnts;\r\n        G['antELO'] += 1 / 5 * player.secondOwnedAnts;\r\n        G['antELO'] += 1 / 3 * player.thirdOwnedAnts;\r\n        G['antELO'] += 1 / 2 * player.fourthOwnedAnts;\r\n        G['antELO'] += player.fifthOwnedAnts;\r\n        G['antELO'] += 2 * player.sixthOwnedAnts;\r\n        G['antELO'] += 4 * player.seventhOwnedAnts;\r\n        G['antELO'] += 8 * player.eighthOwnedAnts;\r\n        G['antELO'] += 666 * player.researches[178];\r\n        if (player.achievements[180] === 1) {\r\n            G['antELO'] *= 1.01;\r\n        }\r\n        if (player.achievements[181] === 1) {\r\n            G['antELO'] *= 1.03 / 1.01;\r\n        }\r\n        if (player.achievements[182] === 1) {\r\n            G['antELO'] *= 1.06 / 1.03;\r\n        }\r\n        G['antELO'] *= (1 + player.researches[110] / 100);\r\n        G['antELO'] *= (1 + 2.5 * player.researches[148] / 100);\r\n        if (player.achievements[176] === 1) {\r\n            G['antELO'] += 25;\r\n        }\r\n        if (player.achievements[177] === 1) {\r\n            G['antELO'] += 50;\r\n        }\r\n        if (player.achievements[178] === 1) {\r\n            G['antELO'] += 75;\r\n        }\r\n        if (player.achievements[179] === 1) {\r\n            G['antELO'] += 100;\r\n        }\r\n        G['antELO'] += 25 * player.researches[108];\r\n        G['antELO'] += 25 * player.researches[109];\r\n        G['antELO'] += 40 * player.researches[123];\r\n        G['antELO'] += 100 * CalcECC('reincarnation', player.challengecompletions[10]);\r\n        G['antELO'] += 75 * player.upgrades[80];\r\n        G['antELO'] = 1 / 10 * Math.floor(10 * G['antELO']);\r\n        G['effectiveELO'] += 0.5 * Math.min(3500, G['antELO']);\r\n        G['effectiveELO'] += 0.1 * Math.min(4000, G['antELO']);\r\n        G['effectiveELO'] += 0.1 * Math.min(6000, G['antELO']);\r\n        G['effectiveELO'] += 0.1 * Math.min(10000, G['antELO']);\r\n        G['effectiveELO'] += 0.2 * G['antELO'];\r\n        G['effectiveELO'] += (G['cubeBonusMultiplier'][8] - 1);\r\n        G['effectiveELO'] += 1 * player.cubeUpgrades[50];\r\n        G['effectiveELO'] *= (1 + 0.03 * player.upgrades[124]);\r\n    }\r\n};\r\nconst calculateAntSacrificeMultipliers = () => {\r\n    G['timeMultiplier'] = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2));\r\n    if (player.achievements[177] === 0) {\r\n        G['timeMultiplier'] *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10));\r\n    }\r\n    if (player.achievements[177] > 0) {\r\n        G['timeMultiplier'] *= Math.max(1, player.antSacrificeTimer / 10);\r\n    }\r\n    G['upgradeMultiplier'] = 1;\r\n    G['upgradeMultiplier'] *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11 - 1] + G['bonusant11']) / 125)));\r\n    G['upgradeMultiplier'] *= (1 + player.researches[103] / 20);\r\n    G['upgradeMultiplier'] *= (1 + player.researches[104] / 20);\r\n    if (player.achievements[132] === 1) {\r\n        G['upgradeMultiplier'] *= 1.25;\r\n    }\r\n    if (player.achievements[137] === 1) {\r\n        G['upgradeMultiplier'] *= 1.25;\r\n    }\r\n    G['upgradeMultiplier'] *= (1 + 6.66 * G['effectiveRuneBlessingPower'][3]);\r\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]));\r\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * player.researches[122]);\r\n    G['upgradeMultiplier'] *= (1 + 3 / 100 * player.researches[133]);\r\n    G['upgradeMultiplier'] *= (1 + 2 / 100 * player.researches[163]);\r\n    G['upgradeMultiplier'] *= (1 + 1 / 100 * player.researches[193]);\r\n    G['upgradeMultiplier'] *= (1 + 1 / 10 * player.upgrades[79]);\r\n    G['upgradeMultiplier'] *= (1 + 0.09 * player.upgrades[40]);\r\n    G['upgradeMultiplier'] *= G['cubeBonusMultiplier'][7];\r\n};\r\nexport const calculateAntSacrificeRewards = () => {\r\n    calculateAntSacrificeELO();\r\n    calculateAntSacrificeMultipliers();\r\n    const rewardsMult = G['timeMultiplier'] * G['upgradeMultiplier'];\r\n    const rewards = {\r\n        antSacrificePoints: G['effectiveELO'] * rewardsMult / 85,\r\n        offerings: player.offeringpersecond * 0.15 * G['effectiveELO'] * rewardsMult / 180,\r\n        obtainium: player.maxobtainiumpersecond * 0.24 * G['effectiveELO'] * rewardsMult / 180,\r\n        talismanShards: (G['antELO'] > 500)\r\n            ? Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G['effectiveELO'] - 500)), 2)))\r\n            : 0,\r\n        commonFragments: (G['antELO'] > 750)\r\n            ? Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G['effectiveELO'] - 750)), 1.83)))\r\n            : 0,\r\n        uncommonFragments: (G['antELO'] > 1000)\r\n            ? Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G['effectiveELO'] - 1000)), 1.66)))\r\n            : 0,\r\n        rareFragments: (G['antELO'] > 1500)\r\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G['effectiveELO'] - 1500)), 1.50)))\r\n            : 0,\r\n        epicFragments: (G['antELO'] > 2000)\r\n            ? Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G['effectiveELO'] - 2000)), 1.33)))\r\n            : 0,\r\n        legendaryFragments: (G['antELO'] > 3000)\r\n            ? Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G['effectiveELO'] - 3000)), 1.16)))\r\n            : 0,\r\n        mythicalFragments: (G['antELO'] > 5000)\r\n            ? Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G['effectiveELO'] - 4150)), 1)))\r\n            : 0\r\n    };\r\n    return rewards;\r\n};\r\nexport const calculateOffline = (forceTime = 0) => {\r\n    G['timeWarp'] = true;\r\n    const maximumTimer = 86400 + 7200 * player.researches[31] + 7200 * player.researches[32];\r\n    const updatedTime = Date.now();\r\n    const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000));\r\n    document.getElementById(\"offlineTimer\").textContent = \"You have \" + format(timeAdd, 0) + \" real-life seconds of Offline Progress!\";\r\n    let simulatedTicks = (timeAdd > 1000) ? 200 : 1 + Math.floor(timeAdd / 5);\r\n    const tickValue = (timeAdd > 1000) ? timeAdd / 200 : Math.min(5, timeAdd);\r\n    let timeMultiplier = 1;\r\n    const maxSimulatedTicks = simulatedTicks;\r\n    let progressBarWidth = 0;\r\n    let automaticObtainium = 0;\r\n    toggleTalismanBuy(player.buyTalismanShardPercent);\r\n    updateTalismanInventory();\r\n    player.quarkstimer += timeAdd;\r\n    player.quarkstimer = Math.min(90000 + 45000 * player.researches[195], player.quarkstimer);\r\n    player.ascensionCounter += timeAdd;\r\n    player.runeshards += timeAdd * (1 / 2 * Math.min(1, player.highestchallengecompletions[2]) + player.cubeUpgrades[2]);\r\n    document.getElementById('preload').style.display = (forceTime > 0) ? 'none' : 'block';\r\n    document.getElementById(\"offlineprogressbar\").style.display = \"block\";\r\n    player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick;\r\n    const runOffline = interval(runSimulator, 0);\r\n    function runSimulator() {\r\n        timeMultiplier = calculateTimeAcceleration();\r\n        calculateObtainium();\r\n        player.prestigecounter += tickValue * timeMultiplier;\r\n        player.transcendcounter += tickValue * timeMultiplier;\r\n        player.reincarnationcounter += tickValue * timeMultiplier;\r\n        resourceGain(tickValue * G['timeMultiplier']);\r\n        if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\r\n            calculateObtainium();\r\n            automaticObtainium = calculateAutomaticObtainium();\r\n            player.researchPoints += tickValue * timeMultiplier * automaticObtainium;\r\n        }\r\n        if (player.achievements[173] > 0) {\r\n            player.antSacrificeTimer += tickValue * timeMultiplier;\r\n            player.antSacrificeTimerReal += tickValue;\r\n        }\r\n        if (player.shopUpgrades.offeringAutoLevel > 0 && player.autoSacrificeToggle) {\r\n            player.sacrificeTimer += tickValue;\r\n            if (player.sacrificeTimer >= 1) {\r\n                const rune = player.autoSacrifice;\r\n                redeemShards(rune, true);\r\n                player.sacrificeTimer = player.sacrificeTimer % 1;\r\n            }\r\n        }\r\n        updateAll();\r\n        simulatedTicks -= 1;\r\n        progressBarWidth = 750 * (1 - simulatedTicks / maxSimulatedTicks);\r\n        document.getElementById(\"offlineprogressdone\").style.width = progressBarWidth + \"px\";\r\n        if (simulatedTicks < 1) {\r\n            clearInt(runOffline);\r\n            G['timeWarp'] = false;\r\n            document.getElementById(\"offlineprogressbar\").style.display = \"none\";\r\n            document.getElementById(\"preload\").style.display = \"none\";\r\n        }\r\n    }\r\n    player.offlinetick = updatedTime;\r\n    if (!player.loadedNov13Vers) {\r\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\r\n            const ascCount = player.ascensionCount;\r\n            reset(\"ascensionChallenge\");\r\n            player.ascensionCount = (ascCount + 1);\r\n        }\r\n        player.loadedNov13Vers = true;\r\n    }\r\n    saveSynergy();\r\n    updateTalismanInventory();\r\n    calculateObtainium();\r\n    calculateAnts();\r\n    calculateRuneLevels();\r\n};\r\nexport const calculateSigmoid = (constant, factor, divisor) => {\r\n    return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))));\r\n};\r\nexport const calculateSigmoidExponential = (constant, coefficient) => {\r\n    return (1 + (constant - 1) * (1 - Math.exp(-coefficient)));\r\n};\r\nexport const calculateCubeBlessings = () => {\r\n    const cubeArray = [player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\r\n    const powerBonus = [player.cubeUpgrades[45] / 100, player.cubeUpgrades[35] / 100, player.cubeUpgrades[24] / 100, player.cubeUpgrades[14] / 100, player.cubeUpgrades[40] / 100, player.cubeUpgrades[22] / 40, player.cubeUpgrades[15] / 100, player.cubeUpgrades[25] / 100, player.cubeUpgrades[44] / 100, player.cubeUpgrades[34] / 100];\r\n    for (let i = 1; i <= 10; i++) {\r\n        let power = 1;\r\n        let mult = 1;\r\n        if (cubeArray[i - 1] >= 1000) {\r\n            power = G['blessingDRPower'][i];\r\n            mult *= Math.pow(1000, (1 - G['blessingDRPower'][i]) * (1 + powerBonus[i - 1]));\r\n        }\r\n        if (i === 6) {\r\n            power = 2.25;\r\n            mult = 1;\r\n        }\r\n        G['cubeBonusMultiplier'][i] = 1 + mult * G['blessingbase'][i] * Math.pow(cubeArray[i - 1], power * (1 + powerBonus[i - 1])) * G['tesseractBonusMultiplier'][i];\r\n    }\r\n    calculateRuneLevels();\r\n    calculateAntSacrificeELO();\r\n    calculateObtainium();\r\n};\r\nexport function calculateCubeMultiplier(calcMult = true) {\r\n    const arr = [\r\n        Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\r\n        1 + 3 / 200 * player.shopUpgrades.seasonPassLevel,\r\n        1 + player.researches[119] / 400,\r\n        1 + player.researches[120] / 400,\r\n        1 + 14 * player.cubeUpgrades[1] / 100,\r\n        1 + 7 * player.cubeUpgrades[11] / 100,\r\n        1 + 7 * player.cubeUpgrades[21] / 100,\r\n        1 + 7 * player.cubeUpgrades[31] / 100,\r\n        1 + 7 * player.cubeUpgrades[41] / 100,\r\n        1 + player.researches[137] / 100,\r\n        1 + 0.9 * player.researches[152] / 100,\r\n        1 + 0.8 * player.researches[167] / 100,\r\n        1 + 0.7 * player.researches[182] / 100,\r\n        1 + 0.6 * player.researches[197] / 100,\r\n        1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\r\n        1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12 - 1],\r\n        1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][2],\r\n        1 + 0.004 / 100 * player.researches[200],\r\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\r\n        1 + 0.25 * player.cubeUpgrades[30],\r\n        1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\r\n        1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400,\r\n        1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\r\n        1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(calculateTimeAcceleration() + 0.01) / Math.log(10)),\r\n        1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\r\n        G['platonicBonusMultiplier'][0],\r\n        G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4\r\n    ];\r\n    if (calcMult) {\r\n        return productContents(arr);\r\n    }\r\n    else {\r\n        return arr;\r\n    }\r\n}\r\nexport const calculateTimeAcceleration = () => {\r\n    let timeMult = 1;\r\n    timeMult *= (1 + 1 / 300 * Math.log(player.maxobtainium + 1) / Math.log(10) * player.upgrades[70]);\r\n    timeMult *= (1 + player.researches[121] / 50);\r\n    timeMult *= (1 + 0.015 * player.researches[136]);\r\n    timeMult *= (1 + 0.012 * player.researches[151]);\r\n    timeMult *= (1 + 0.009 * player.researches[166]);\r\n    timeMult *= (1 + 0.006 * player.researches[181]);\r\n    timeMult *= (1 + 0.003 * player.researches[196]);\r\n    timeMult *= (1 + 8 * G['effectiveRuneBlessingPower'][1]);\r\n    timeMult *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][1]);\r\n    timeMult *= G['cubeBonusMultiplier'][10];\r\n    timeMult *= 1 + player.cubeUpgrades[18] / 5;\r\n    timeMult *= calculateSigmoid(2, player.antUpgrades[12 - 1] + G['bonusant12'], 69);\r\n    timeMult *= (1 + 0.10 * (player.talismanRarity[2 - 1] - 1));\r\n    timeMult *= G['challenge15Rewards'].globalSpeed;\r\n    timeMult *= G['lazinessMultiplier'][player.usedCorruptions[3]];\r\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\r\n        timeMult *= 1000;\r\n    }\r\n    if (timeMult > 100) {\r\n        timeMult = 10 * Math.sqrt(timeMult);\r\n    }\r\n    if (timeMult < 1) {\r\n        timeMult = Math.pow(timeMult, 1 - player.platonicUpgrades[7] / 30);\r\n    }\r\n    timeMult *= G['platonicBonusMultiplier'][7];\r\n    if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\r\n        achievementaward(241);\r\n    }\r\n    if (timeMult > 3600 && player.achievements[242] < 1) {\r\n        achievementaward(242);\r\n    }\r\n    return (timeMult);\r\n};\r\nexport const calculateCorruptionPoints = () => {\r\n    let basePoints = 400;\r\n    for (let i = 1; i <= 9; i++) {\r\n        basePoints += 16 * Math.pow(player.usedCorruptions[i], 2);\r\n    }\r\n    return (basePoints);\r\n};\r\nexport const calculateSummationLinear = (baseLevel, baseCost, resourceAvailable, differenceCap = 1e9) => {\r\n    const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2;\r\n    const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)));\r\n    const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost;\r\n    return [buyToLevel, realCost];\r\n};\r\nexport const calculateSummationNonLinear = (baseLevel, baseCost, resourceAvailable, diffPerLevel, buyAmount) => {\r\n    const c = diffPerLevel / 2;\r\n    resourceAvailable = resourceAvailable || 0;\r\n    const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c));\r\n    resourceAvailable += alreadySpent;\r\n    const v = resourceAvailable / baseCost;\r\n    let buyToLevel = c > 0\r\n        ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\r\n        : Math.floor(v);\r\n    buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel);\r\n    let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent;\r\n    if (buyToLevel == baseLevel) {\r\n        totalCost = baseCost * (1 + 2 * c * baseLevel);\r\n    }\r\n    return [buyToLevel, totalCost];\r\n};\r\nexport const CalcCorruptionStuff = () => {\r\n    const corruptionArrayMultiplier = [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10];\r\n    const corruptionLevelSum = sumContents(player.usedCorruptions);\r\n    let cubeBank = 0;\r\n    let challengeModifier = 1;\r\n    let corruptionMultiplier = 1;\r\n    let bankMultiplier = 1;\r\n    let effectiveScore = 1;\r\n    const speed = calculateTimeAcceleration();\r\n    for (let i = 1; i <= 10; i++) {\r\n        challengeModifier = (i >= 6) ? 2 : 1;\r\n        cubeBank += challengeModifier * player.highestchallengecompletions[i];\r\n    }\r\n    let baseScore = 0;\r\n    const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\r\n    const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\r\n    const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\r\n    for (let i = 1; i <= 10; i++) {\r\n        baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i];\r\n        if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\r\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75);\r\n            if (player.highestchallengecompletions[i] >= 750) {\r\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750);\r\n            }\r\n        }\r\n        if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\r\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25);\r\n            if (player.highestchallengecompletions[i] >= 60) {\r\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60);\r\n            }\r\n        }\r\n    }\r\n    baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10] + player.platonicUpgrades[15]), player.highestchallengecompletions[10]);\r\n    for (let i = 1; i <= 10; i++) {\r\n        corruptionMultiplier *= corruptionArrayMultiplier[player.usedCorruptions[i]];\r\n    }\r\n    effectiveScore = baseScore * corruptionMultiplier * G['challenge15Rewards'].score * G['platonicBonusMultiplier'][6];\r\n    bankMultiplier = Math.pow(effectiveScore / 3000, 1 / 4.1);\r\n    let cubeGain = cubeBank * bankMultiplier;\r\n    cubeGain *= calculateCubeMultiplier();\r\n    cubeGain *= (1 + 0.000075 * corruptionLevelSum * player.platonicUpgrades[1]);\r\n    if (effectiveScore > 5e12 && player.platonicUpgrades[10] > 0) {\r\n        cubeGain *= 2;\r\n    }\r\n    if (effectiveScore > 25e12 && player.platonicUpgrades[15] > 0) {\r\n        cubeGain *= 2.25;\r\n    }\r\n    let tesseractGain = 1;\r\n    tesseractGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e5)) / 1e4, .35);\r\n    tesseractGain *= (1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]));\r\n    if (effectiveScore >= 100000) {\r\n        tesseractGain += 2;\r\n    }\r\n    tesseractGain *= (1 + 0.25 * player.cubeUpgrades[30]);\r\n    tesseractGain *= (1 + 1 / 200 * player.cubeUpgrades[38] * sumContents(player.usedCorruptions));\r\n    tesseractGain *= (1 + player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400);\r\n    tesseractGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\r\n    tesseractGain *= (1 + 0.00015 * corruptionLevelSum * player.platonicUpgrades[2]);\r\n    if (effectiveScore > 7.5e12 && player.platonicUpgrades[10] > 0) {\r\n        tesseractGain *= 2;\r\n    }\r\n    if (effectiveScore > 50e12 && player.platonicUpgrades[15] > 0) {\r\n        tesseractGain *= 2.25;\r\n    }\r\n    tesseractGain *= G['platonicBonusMultiplier'][1];\r\n    tesseractGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\r\n    tesseractGain *= (1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8));\r\n    tesseractGain *= (1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208]);\r\n    tesseractGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\r\n    tesseractGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\r\n    tesseractGain *= (1 + 3 / 200 * player.shopUpgrades.seasonPassLevel);\r\n    let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0;\r\n    hypercubeGain *= Math.pow(1 + Math.max(0, (effectiveScore - 1e9)) / 1e8, .5);\r\n    hypercubeGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\r\n    hypercubeGain *= (1 + 0.00045 * corruptionLevelSum * player.platonicUpgrades[3]);\r\n    if (effectiveScore > 10e12 && player.platonicUpgrades[10] > 0) {\r\n        hypercubeGain *= 2;\r\n    }\r\n    if (effectiveScore > 100e12 && player.platonicUpgrades[15] > 0) {\r\n        hypercubeGain *= 2.25;\r\n    }\r\n    hypercubeGain *= G['platonicBonusMultiplier'][2];\r\n    hypercubeGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\r\n    hypercubeGain *= (1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9));\r\n    hypercubeGain *= (1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215]);\r\n    hypercubeGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\r\n    hypercubeGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\r\n    let platonicGain = (effectiveScore >= 1.337e12) ? 1 : 0;\r\n    platonicGain *= Math.pow(1 + Math.max(0, effectiveScore - 1.337e12) / 1.337e11, .75);\r\n    platonicGain *= Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4 * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1));\r\n    if (effectiveScore > 2.5e12) {\r\n        platonicGain *= (1 + player.platonicUpgrades[4] / 50);\r\n    }\r\n    if (effectiveScore > 20e12 && player.platonicUpgrades[10] > 0) {\r\n        platonicGain *= 2;\r\n    }\r\n    if (effectiveScore > 250e12 && player.platonicUpgrades[15] > 0) {\r\n        platonicGain *= 2.25;\r\n    }\r\n    platonicGain *= G['platonicBonusMultiplier'][3];\r\n    platonicGain *= (G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4);\r\n    platonicGain *= (1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9));\r\n    platonicGain *= (1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222]);\r\n    platonicGain *= (1 + player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10));\r\n    platonicGain *= (1 + player.achievements[240] * Math.max(0.1, 1 / 20 * Math.log(speed + 0.01) / Math.log(10)));\r\n    platonicGain *= (1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251]);\r\n    return [cubeBank, Math.floor(baseScore), corruptionMultiplier, Math.floor(effectiveScore), Math.floor(cubeGain), Math.floor(tesseractGain), Math.floor(hypercubeGain), Math.floor(platonicGain)];\r\n};\r\nexport const dailyResetCheck = () => {\r\n    if (!player.dayCheck) {\r\n        player.dayCheck = new Date();\r\n        console.log('date successfully calibrated!');\r\n    }\r\n    else if (typeof player.dayCheck === 'string') {\r\n        player.dayCheck = new Date(player.dayCheck);\r\n    }\r\n    const d = new Date();\r\n    const h = d.getHours();\r\n    const m = d.getMinutes();\r\n    const s = d.getSeconds();\r\n    player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s;\r\n    if (d.getDate() !== player.dayCheck.getDate() || d.getMonth() !== player.dayCheck.getMonth() || d.getFullYear() !== player.dayCheck.getFullYear()) {\r\n        player.dayCheck = new Date();\r\n        player.cubeQuarkDaily = 0;\r\n        player.tesseractQuarkDaily = 0;\r\n        player.hypercubeQuarkDaily = 0;\r\n        player.cubeOpenedDaily = 0;\r\n        player.tesseractOpenedDaily = 0;\r\n        player.hypercubeOpenedDaily = 0;\r\n        document.getElementById('cubeQuarksOpenRequirement').style.display = \"block\";\r\n        if (player.challengecompletions[11] > 0) {\r\n            document.getElementById('tesseractQuarksOpenRequirement').style.display = \"block\";\r\n        }\r\n        if (player.challengecompletions[13] > 0) {\r\n            document.getElementById('hypercubeQuarksOpenRequirement').style.display = \"block\";\r\n        }\r\n    }\r\n};\r\n","import Decimal from \"break_infinity.js\";\r\nimport player, { format, resetCheck } from \"./Synergism\";\r\nimport { toggleAutoChallengeTextColors, toggleChallenges } from \"./Toggles\";\r\nimport { Globals as G } from './Variables';\r\nimport { calculateRuneLevels } from \"./Calculate\";\r\nexport const challengeDisplay = (i, changefocus) => {\r\n    changefocus = (changefocus === null || changefocus === undefined) ? true : changefocus;\r\n    if (changefocus) {\r\n        G['challengefocus'] = i;\r\n        document.getElementById(\"oneChallengeDetails\").style.display = \"block\";\r\n    }\r\n    let quarksMultiplier = 1;\r\n    if (changefocus) {\r\n        G['challengefocus'] = i;\r\n        document.getElementById(\"oneChallengeDetails\").style.display = \"block\";\r\n        G['triggerChallenge'] = i;\r\n    }\r\n    let maxChallenges = 0;\r\n    if (i <= 5 && changefocus) {\r\n        if (player.challengecompletions[i] >= 100) {\r\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 100! Effective completion count: \" + CalcECC('transcend', player.challengecompletions[i]);\r\n        }\r\n        else {\r\n            document.getElementById('completionSoftcap').textContent = \"\";\r\n        }\r\n    }\r\n    if (i > 5 && i <= 10) {\r\n        maxChallenges = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\r\n        quarksMultiplier = 10;\r\n        if (player.challengecompletions[i] >= 25 && changefocus) {\r\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 25! Effective completion count: \" + format(CalcECC('reincarnation', player.challengecompletions[i]), 2, true);\r\n        }\r\n        else {\r\n            document.getElementById('completionSoftcap').textContent = \"\";\r\n        }\r\n    }\r\n    if (i > 10) {\r\n        maxChallenges = 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15];\r\n        if (player.challengecompletions[i] >= 10) {\r\n            document.getElementById('completionSoftcap').textContent = \"|| Softcapped past 10! Effective completion count: \" + format(CalcECC('ascension', player.challengecompletions[i]), 2, true);\r\n        }\r\n        else {\r\n            document.getElementById('completionSoftcap').textContent = \"\";\r\n        }\r\n    }\r\n    let descriptor = \"\";\r\n    const a = document.getElementById(\"challengeName\");\r\n    const b = document.getElementById(\"challengeFlavor\");\r\n    const c = document.getElementById(\"challengeRestrictions\");\r\n    const d = document.getElementById(\"challengeGoal\");\r\n    const e = document.getElementById(\"challengePer1\").childNodes[0];\r\n    const f = document.getElementById(\"challengePer2\").childNodes[0];\r\n    const g = document.getElementById(\"challengePer3\").childNodes[0];\r\n    const h = document.getElementById(\"challengeFirst1\");\r\n    const j = document.getElementById(\"challengeQuarkBonus\");\r\n    const k = document.getElementById(\"startChallenge\");\r\n    const l = document.getElementById(\"challengeCurrent1\");\r\n    const m = document.getElementById(\"challengeCurrent2\");\r\n    const n = document.getElementById(\"challengeCurrent3\");\r\n    if (i === 1 && G['challengefocus'] === 1) {\r\n        maxChallenges = 25 + 5 * player.researches[66] + 925 * player.researches[105];\r\n        a.textContent = \"No Multipliers Challenge || \" + player.challengecompletions[1] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"Multipliers make the game a little too fast. Let's take them out!\";\r\n        c.textContent = \"Transcend and reach the goal except Multipliers do nothing but act like Accelerators, which are nerfed by 50%!\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"+10 base Multiplier Boosts! [+0.05 to power!] Current: \";\r\n        f.textContent = \"+10% total Multiplier Boosts! Current: \";\r\n        g.textContent = \"+0.04 base Rune exp per Offering! Current: \";\r\n        h.textContent = \"+1 free Multiplier! +1 Base EXP per offering used!\";\r\n        k.textContent = \"Start [No Multipliers]\";\r\n        l.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \" Boosts\";\r\n        m.textContent = \"+\" + format(10 * CalcECC('transcend', player.challengecompletions[1])) + \"% more Boosts\";\r\n        n.textContent = \"+\" + format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true) + \" Rune EXP [Highest Completion]\";\r\n    }\r\n    if (i === 2 && G['challengefocus'] === 2) {\r\n        maxChallenges = 25 + 5 * player.researches[67] + 925 * player.researches[105];\r\n        a.textContent = \"No Accelerators Challenge || \" + player.challengecompletions[2] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"Who needs accelerators? They do basically nothing now.\";\r\n        c.textContent = \"Transcend and reach the goal except Accelerators do nothing! Multipliers are nerfed a bit as well.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"+5 Free Accelerators! Current: \";\r\n        f.textContent = \"+5% Accelerator Boost Power! Current: \";\r\n        g.textContent = \"+0.25% Accelerator Power! Current: \";\r\n        h.textContent = \"+1 base offering for Prestige and Transcensions.\";\r\n        k.textContent = \"Start [No Accelerators]\";\r\n        l.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \" Accelerators\";\r\n        m.textContent = \"+\" + format(5 * CalcECC('transcend', player.challengecompletions[2])) + \"% A.Boost Power\";\r\n        n.textContent = \"+\" + format(0.25 * CalcECC('transcend', player.challengecompletions[2]), 2, true) + \"% Accelerator Power\";\r\n    }\r\n    if (i === 3 && G['challengefocus'] === 3) {\r\n        maxChallenges = 25 + 5 * player.researches[68] + 925 * player.researches[105];\r\n        a.textContent = \"No Shards Challenge || \" + player.challengecompletions[3] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"Alright, now you're thinking, how else can I make the game harder?\";\r\n        c.textContent = \"Transcend and reach the goal except you do not produce Crystals or Mythos Shards.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"Crystal --> Coin conversion exponent +0.04! Current: \";\r\n        f.textContent = \"+0.5% to Grandmaster production per Mythos producer bought. Current: \";\r\n        g.textContent = \"When you use a rune, all other runes gain +0.01 EXP. Current: \";\r\n        h.textContent = \"Gain an offering automatically every 2 seconds!\";\r\n        k.textContent = \"Start [No Shards]\";\r\n        l.textContent = \"Exponent +\" + format(0.04 * player.challengecompletions[3], 2, true);\r\n        m.textContent = \"+\" + format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \"%\";\r\n        n.textContent = \"+\" + format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true) + \" EXP\";\r\n    }\r\n    if (i === 4 && G['challengefocus'] === 4) {\r\n        maxChallenges = 25 + 5 * player.researches[69] + 925 * player.researches[105];\r\n        a.textContent = \"Cost+ Challenge || \" + player.challengecompletions[4] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"You're getting rich now, but inflation hasn't happened yet? I don't think so!\";\r\n        c.textContent = \"Transcend and reach the goal except Coin/Crystal producers, Accelerators and Multipliers cost more. [Gets harder each time!]\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"Accelerator Cost scale slows down by +5 purchases. Current: \";\r\n        f.textContent = \"Multiplier Cost scale slows down by +2 purchases. Current: \";\r\n        g.textContent = \"Building Cost Delay +0.5%. Current: \";\r\n        h.textContent = \"None\";\r\n        k.textContent = \"Start [Cost+]\";\r\n        l.textContent = \"Accelerator Delay +\" + format(5 * CalcECC('transcend', player.challengecompletions[4]));\r\n        m.textContent = \"Multiplier Delay +\" + format(2 * CalcECC('transcend', player.challengecompletions[4]));\r\n        n.textContent = \"Building Cost Delay +\" + format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true) + \"%\";\r\n    }\r\n    if (i === 5 && G['challengefocus'] === 5) {\r\n        maxChallenges = 25 + 5 * player.researches[70] + 925 * player.researches[105];\r\n        a.textContent = \"Reduced Diamonds Challenge || \" + player.challengecompletions[5] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"You ever wonder how you get so many diamonds?\";\r\n        c.textContent = \"Transcend and reach the goal except you gain far fewer Diamonds from all sources [Gets harder each time!]\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"+0.01 Coin --> Diamond conversion exponent on Prestige! Current: \";\r\n        f.textContent = \"Multiply Crystal production by 10! Current: \";\r\n        g.textContent = \"\";\r\n        h.textContent = \"None\";\r\n        k.textContent = \"Start [Reduced Diamonds]\";\r\n        l.textContent = \"Exponent = ^\" + format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true);\r\n        m.textContent = \"Crystal production x\" + format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])));\r\n        n.textContent = \"\";\r\n    }\r\n    if (i === 6 && G['challengefocus'] === 6) {\r\n        a.textContent = \"Higher Tax Challenge || \" + player.challengecompletions[6] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"The tax man caught wind that you reincarnated recently...\";\r\n        c.textContent = \"Reincarnate and reach the goal except tax has a lower cap, and Coin production is divided by 1e250.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 6)) + \" Mythos Shards in challenge.\";\r\n        e.textContent = \"-3.5% Taxes [Multiplicative]! Current: \";\r\n        f.textContent = \"Thrift Rune Exp +10%! Current: \";\r\n        g.textContent = \"Prestige Offerings +2%! Current: \";\r\n        h.textContent = \"-7.5% Taxes!\";\r\n        k.textContent = \"Start <Higher Tax>\";\r\n        l.textContent = \"Tax multiplier x\" + format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true);\r\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[6])) + \"%\";\r\n        n.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[6])) + \"% Prestige-based Offerings\";\r\n    }\r\n    if (i === 7 && G['challengefocus'] === 7) {\r\n        a.textContent = \"No Multipliers/Accelerators Challenge || \" + player.challengecompletions[7] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"You're really going to hate this one.\";\r\n        c.textContent = \"Reincarnate and reach the goal except Accelerators and Multipliers do nothing. Coin Production is divided by 1e1,250.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 7)) + \" Mythos Shards in challenge.\";\r\n        e.textContent = \"Accelerator/Multiplier boost power exponent +0.04! Current: \";\r\n        f.textContent = \"Speed Rune Exp +10%! Current: \";\r\n        g.textContent = \"Duplication Rune Exp +10%! Current: \";\r\n        h.textContent = \"Multiplier Boost power +25%! The first Discord-Booster Global Diamond Upgrade.\";\r\n        k.textContent = \"Start <No Multipliers/Accelerators>\";\r\n        l.textContent = \"Exponent = ^\" + format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true);\r\n        m.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\r\n        n.textContent = \"EXP +\" + format(10 * CalcECC('reincarnation', player.challengecompletions[7])) + \"%\";\r\n    }\r\n    if (i === 8 && G['challengefocus'] === 8) {\r\n        a.textContent = \"Cost++ Challenge || \" + player.challengecompletions[8] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"You thought you could outgrow inflation by Reincarnating?\";\r\n        c.textContent = \"Reincarnate and reach the goal except Cost Scaling for producers and Accelerators/Multipliers scale much, much faster.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i], 8)) + \" Mythos Shards in challenge.\";\r\n        e.textContent = \"Base Building Power +0.25! Current: \";\r\n        f.textContent = \"Prism Rune Exp +20%! Current: \";\r\n        g.textContent = \"Transcend Offerings +4%! Current: \";\r\n        h.textContent = \"Unlock the Anthill feature! Includes 20 new Researches. A Global Diamond Upgrade.\";\r\n        k.textContent = \"Start <Cost++>\";\r\n        l.textContent = \"+\" + format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true);\r\n        m.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% EXP\";\r\n        n.textContent = \"+\" + format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true) + \"% Transcend-based offerings\";\r\n    }\r\n    if (i === 9 && G['challengefocus'] === 9) {\r\n        a.textContent = \"No Runes Challenge || \" + player.challengecompletions[9] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"You'll never complain about Prism being bad again.\";\r\n        c.textContent = \"Reincarnate and reach the goal except runes always have level 1 effects. All coin production is divided by e2,000,000.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"+1 free Ant level! Current: \";\r\n        f.textContent = \"+10% Ant speed [Multiplicative!] Current: \";\r\n        g.textContent = \"SI Rune Exp +20%! Current: \";\r\n        h.textContent = \"Unlock the Talismans feature! [In Runes tab]. A Global Diamond Upgrade.\";\r\n        k.textContent = \"Start <No Runes>\";\r\n        l.textContent = \"+\" + format(CalcECC('reincarnation', player.challengecompletions[9])) + \" free levels\";\r\n        m.textContent = \"x\" + format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true) + \" Ant Speed\";\r\n        n.textContent = \"+\" + format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true) + \"% EXP\";\r\n    }\r\n    if (i === 10 && G['challengefocus'] === 10) {\r\n        a.textContent = \"Sadistic Challenge I || \" + player.challengecompletions[10] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"I'm sorry for what I've unleashed onto the world.\";\r\n        c.textContent = \"Reincarnate and reach the goal except run the first five challenges AT THE SAME TIME! Coin Production /e12,500,000.\";\r\n        d.textContent = \"Goal: Gain \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" Coins in challenge.\";\r\n        e.textContent = \"+100 base ELO for sacrificing ants! Current: \";\r\n        f.textContent = \"+2% Ant Sacrifice Reward! Current: \";\r\n        g.textContent = \"Reincarnation Offerings +10%! Current: \";\r\n        h.textContent = \"Unlock the Ascension Reset Tier!\";\r\n        k.textContent = \"Start <Sadistic I>\";\r\n        l.textContent = \"+\" + format(100 * CalcECC('reincarnation', player.challengecompletions[10])) + \" Ant ELO\";\r\n        m.textContent = \"+\" + format(2 * CalcECC('reincarnation', player.challengecompletions[10])) + \"% Ant Sacrifice reward\";\r\n        n.textContent = \"+\" + format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true) + \"% Reincarnate-based offerings\";\r\n    }\r\n    if (i === 11 && G['challengefocus'] === 11) {\r\n        a.textContent = \"Reduced Ants Challenge || \" + player.challengecompletions[11] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"The great Ant War of '21 wiped off all of the skilled ants.\";\r\n        c.textContent = \"Ascend and reach the goal but only get free ant upgrades and from Challenge8/9 completions. FOR ASCENSION CHALLENGES YOU MUST CLEAR CHALLENGE 10 TO ATTEMPT THEM.\";\r\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\r\n        e.textContent = \"+12 free Ant Levels! Current: \";\r\n        f.textContent = \"Ant Speed x(1e5)^completions! Current: \";\r\n        g.textContent = \"+80 to Rune Caps! Current: \";\r\n        h.textContent = \"Unlock 15 Researches, and unlock the ability to open Tesseracts!\";\r\n        k.textContent = \"Start <[(Reduced Ants)]>\";\r\n        l.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[11])) + \" free ant levels\";\r\n        m.textContent = \"Ant Speed x\" + format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\r\n        n.textContent = \"+\" + format(80 * CalcECC('ascension', player.challengecompletions[11])) + \" to Rune Caps\";\r\n    }\r\n    if (i === 12 && G['challengefocus'] === 12) {\r\n        a.textContent = \"No Reincarnation Challenge || \" + player.challengecompletions[12] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"For some reason, you just can't do it.\";\r\n        c.textContent = \"Ascend and reach the goal but you do not gain Particles and you cannot Reincarnate at all! Ant production ^0.5.\";\r\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\r\n        e.textContent = \"+50% Obtainium! Current: \";\r\n        f.textContent = \"+12% Offerings! Current: \";\r\n        g.textContent = \"+1 Cube Tribute per opening! Current: \";\r\n        h.textContent = \"Unlock 15 Researches, and unlock the mystical Spirit Power! Find these in the Runes tab.\";\r\n        k.textContent = \"Start <[(No Reincarnation)]>\";\r\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[12])) + \"% Obtainium\";\r\n        m.textContent = \"+\" + format(12 * CalcECC('ascension', player.challengecompletions[12])) + \"% Offerings\";\r\n        n.textContent = \"+\" + format(CalcECC('ascension', player.challengecompletions[12])) + \" additional Cube Tributes\";\r\n    }\r\n    if (i === 13 && G['challengefocus'] === 13) {\r\n        a.textContent = \"Tax+++ Challenge || \" + player.challengecompletions[13] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"Good luck with the IRS, buddy.\";\r\n        c.textContent = \"Ascend and reach the goal, but taxes are much higher and grow with challenge completions. Ant production ^0.23\";\r\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\r\n        e.textContent = \"Taxes -3.33%! Multiplicative! Current: \";\r\n        f.textContent = \"+6 maximum to Talisman Level Cap! Current: \";\r\n        g.textContent = \"+3% Spirit Power effectiveness! Current: \";\r\n        h.textContent = \"Unlock 15 Researches, and unlock the power of the Hypercube!\";\r\n        k.textContent = \"Start <[(Tax+++)]>\";\r\n        l.textContent = \"-\" + format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true) + \"% Corruption Tax\";\r\n        m.textContent = \"+\" + format(6 * CalcECC('ascension', player.challengecompletions[13])) + \" Talisman Level Cap\";\r\n        n.textContent = \"+\" + format(3 * CalcECC('ascension', player.challengecompletions[13])) + \"% Effectiveness\";\r\n    }\r\n    if (i === 14 && G['challengefocus'] === 14) {\r\n        a.textContent = \"No Research Challenge || \" + player.challengecompletions[14] + \"/\" + format(maxChallenges) + \" Completions\";\r\n        b.textContent = \"The dimension that never progressed past the dark ages. Many fear to even step foot.\";\r\n        c.textContent = \"Ascend and reach the goal but you do not gain Obtainium nor are any researches purchasable. Ant production ^0.2.\";\r\n        d.textContent = \"Goal: Complete Challenge 10 [Sadistic Challenge I] \" + format(challengeRequirement(i, player.challengecompletions[i])) + \" times.\";\r\n        e.textContent = \"+50% stronger effect on researches 1x1 through 1x5. Current: \";\r\n        f.textContent = \"+1 research purchased per roomba tick! Current: \";\r\n        g.textContent = \"+200 to Rune Caps! Current: \";\r\n        h.textContent = \"Unlock 15 Researches, and a way to coalesce your power into the Singularity.\";\r\n        k.textContent = \"Start <[(No Research)]>\";\r\n        l.textContent = \"+\" + format(50 * CalcECC('ascension', player.challengecompletions[14])) + \"% Power\";\r\n        m.textContent = \"+\" + format(1 * player.challengecompletions[14]) + \" per Tick\";\r\n        n.textContent = \"+\" + format(200 * CalcECC('ascension', player.challengecompletions[14])) + \" to Rune Caps\";\r\n    }\r\n    if (i === 15 && G['challengefocus'] === 15) {\r\n        a.textContent = \"SADISTIC CHALLENGE II || \" + player.challengecompletions[15] + \"/9001 Completions\";\r\n        b.textContent = \"The worst sin a man can do is making others suffer.\";\r\n        c.textContent = \"Ascend and reach the goal but you're FULLY corrupt and must stay that way.\";\r\n        d.textContent = \"Goal: 1e4T Coins, but get bonuses based on your best attempt.\";\r\n        e.textContent = \"You have no idea \";\r\n        f.textContent = \"what you have just done \";\r\n        g.textContent = \"the ant god shakes their mighty head \";\r\n        h.textContent = \"Enter the singularity.\";\r\n        k.textContent = \"Start <[(Sadistic Challenge II)]>\";\r\n        l.textContent = \"\";\r\n        m.textContent = \"\";\r\n        n.textContent = \"\";\r\n    }\r\n    const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\r\n    const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\r\n    const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\r\n    let scoreDisplay = 0;\r\n    if (i <= 5) {\r\n        if (player.highestchallengecompletions[i] >= 750) {\r\n            scoreDisplay = scoreArray3[i];\r\n        }\r\n        else if (player.highestchallengecompletions[i] >= 75) {\r\n            scoreDisplay = scoreArray2[i];\r\n        }\r\n        else {\r\n            scoreDisplay = scoreArray1[i];\r\n        }\r\n    }\r\n    if (i > 5 && i <= 10) {\r\n        if (player.highestchallengecompletions[i] >= 60) {\r\n            scoreDisplay = scoreArray3[i];\r\n        }\r\n        else if (player.highestchallengecompletions[i] >= 25) {\r\n            scoreDisplay = scoreArray2[i];\r\n        }\r\n        else {\r\n            scoreDisplay = scoreArray1[i];\r\n        }\r\n    }\r\n    if (changefocus) {\r\n        j.textContent = \"\";\r\n    }\r\n    if (player.ascensionCount === 0) {\r\n        descriptor = \"Quarks\";\r\n        j.style.color = \"cyan\";\r\n    }\r\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\r\n        j.textContent = \"Gain \" + Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41]) + \" \" + descriptor + \" for completing this challenge [First Time Bonus]!\";\r\n    }\r\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1) {\r\n        j.textContent = \"Completing the challenge adds \" + ((i > 5) ? 2 : 1) + \" to Ascension Bank and increase base Score by \" + scoreDisplay + \".\";\r\n    }\r\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\r\n        j.textContent = \"Gain 1 Wow! HYPERCUBE for completing this challenge (First Time Bonus)\";\r\n    }\r\n    (i <= 10 && player.researches[150] > 0) ?\r\n        (document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"block\", document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid green\") :\r\n        document.getElementById(\"toggleAutoChallengeIgnore\").style.display = \"none\";\r\n    let constructor = \"ON\";\r\n    if (!player.autoChallengeToggles[i]) {\r\n        constructor = \"OFF\";\r\n        document.getElementById('toggleAutoChallengeIgnore').style.border = \"2px solid red\";\r\n    }\r\n    document.getElementById(\"toggleAutoChallengeIgnore\").textContent = \"Automatically Run Chal.\" + i + \" [\" + constructor + \"]\";\r\n    const ella = document.getElementById(\"toggleAutoChallengeStart\");\r\n    (player.autoChallengeRunning) ?\r\n        (ella.textContent = \"Auto Challenge Sweep [ON]\", ella.style.border = \"2px solid gold\") :\r\n        (ella.textContent = \"Auto Challenge Sweep [OFF]\", ella.style.border = \"2px solid red\");\r\n};\r\nexport const getChallengeConditions = (i) => {\r\n    if (player.currentChallenge.reincarnation === 9) {\r\n        G['rune1level'] = 1;\r\n        G['rune2level'] = 1;\r\n        G['rune3level'] = 1;\r\n        G['rune4level'] = 1;\r\n        G['rune5level'] = 1;\r\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    G['prestigePointGain'] = new Decimal('0');\r\n    if (i >= 6) {\r\n        G['transcendPointGain'] = new Decimal('0');\r\n    }\r\n    if (i >= 11) {\r\n        G['reincarnationPointGain'] = new Decimal('0');\r\n    }\r\n    calculateRuneLevels();\r\n};\r\nexport const toggleRetryChallenges = () => {\r\n    document.getElementById(\"retryChallenge\").textContent = player.retrychallenges\r\n        ? \"Retry Challenges: OFF\"\r\n        : \"Retry Challenges: ON\";\r\n    player.retrychallenges = !player.retrychallenges;\r\n};\r\nexport const highestChallengeRewards = (chalNum, highestValue) => {\r\n    let multiplier = 1 / 10;\r\n    if (chalNum >= 6) {\r\n        multiplier = 1;\r\n    }\r\n    if (player.ascensionCount === 0) {\r\n        player.worlds += (1 + Math.floor(highestValue * multiplier) * 100 / 100);\r\n    }\r\n};\r\nconst calculateChallengeRequirementMultiplier = (type, completions, special = 0) => {\r\n    let requirementMultiplier = Math.max(1, G['hyperchallengedMultiplier'][player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5));\r\n    switch (type) {\r\n        case \"transcend\":\r\n            (completions >= 75) ?\r\n                requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\r\n                requirementMultiplier *= Math.pow(1 + completions, 2);\r\n            requirementMultiplier *= G['challenge15Rewards'].transcendChallengeReduction;\r\n            return (requirementMultiplier);\r\n        case \"reincarnation\":\r\n            if (completions >= 60) {\r\n                if (special === 8) {\r\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 60;\r\n                }\r\n                else if (special === 7) {\r\n                    requirementMultiplier *= Math.pow(1 + completions, 1) / 30;\r\n                }\r\n                else if (special === 6) {\r\n                    requirementMultiplier *= Math.pow(1 + completions, 2) / 360;\r\n                }\r\n                else {\r\n                    requirementMultiplier *= Math.pow(1 + completions, 5) / 7200;\r\n                }\r\n            }\r\n            if (completions >= 25) {\r\n                requirementMultiplier *= Math.pow(1 + completions, 5) / 625;\r\n            }\r\n            if (completions < 25) {\r\n                requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions));\r\n            }\r\n            requirementMultiplier *= G['challenge15Rewards'].reincarnationChallengeReduction;\r\n            return requirementMultiplier;\r\n        case \"ascension\":\r\n            (completions >= 10) ?\r\n                requirementMultiplier *= (2 * (1 + completions) - 10) :\r\n                requirementMultiplier *= (1 + completions);\r\n            return (requirementMultiplier);\r\n    }\r\n};\r\nexport const CalcECC = (type, completions) => {\r\n    let effective = 0;\r\n    switch (type) {\r\n        case \"transcend\":\r\n            effective += Math.min(100, completions);\r\n            effective += 1 / 20 * (Math.max(100, completions) - 100);\r\n            return (effective);\r\n        case \"reincarnation\":\r\n            effective += Math.min(25, completions);\r\n            effective += 1 / 2 * (Math.max(25, completions) - 25);\r\n            return (effective);\r\n        case \"ascension\":\r\n            effective += Math.min(10, completions);\r\n            effective += 1 / 2 * (Math.max(10, completions) - 10);\r\n            return (effective);\r\n    }\r\n};\r\nexport const challengeRequirement = (challenge, completion, special = 0) => {\r\n    const base = G['challengeBaseRequirements'][challenge - 1];\r\n    if (challenge <= 5) {\r\n        return Decimal.pow(10, base * calculateChallengeRequirementMultiplier(\"transcend\", completion, special));\r\n    }\r\n    else if (challenge <= 10) {\r\n        let c10Reduction = 0;\r\n        if (challenge === 10) {\r\n            c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * player.shopUpgrades.challenge10Tomes);\r\n        }\r\n        return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special));\r\n    }\r\n    else if (challenge <= 14) {\r\n        return calculateChallengeRequirementMultiplier(\"ascension\", completion, special);\r\n    }\r\n    else if (challenge === 15) {\r\n        return Decimal.pow(10, 4 * Math.pow(10, 30));\r\n    }\r\n};\r\nexport const runChallengeSweep = (dt) => {\r\n    if (player.researches[150] > 0 &&\r\n        player.autoChallengeRunning &&\r\n        (player.reincarnationPoints.gte('0') || player.currentChallenge.ascension === 12)) {\r\n        G['autoChallengeTimerIncrement'] += dt;\r\n        if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.exit) {\r\n            if (player.currentChallenge.transcension !== 0 && player.autoChallengeIndex <= 5) {\r\n                resetCheck('challenge', undefined, true);\r\n                G['autoChallengeTimerIncrement'] = 0;\r\n                player.autoChallengeIndex += 1;\r\n                if (player.autoChallengeTimer.enter >= 1) {\r\n                    toggleAutoChallengeTextColors(3);\r\n                }\r\n            }\r\n            if (player.currentChallenge.reincarnation !== 0 && player.autoChallengeIndex > 5) {\r\n                resetCheck('reincarnationchallenge', undefined, true);\r\n                G['autoChallengeTimerIncrement'] = 0;\r\n                player.autoChallengeIndex += 1;\r\n                if (player.autoChallengeTimer.enter >= 1) {\r\n                    toggleAutoChallengeTextColors(3);\r\n                }\r\n            }\r\n            if (player.autoChallengeIndex > 10) {\r\n                player.autoChallengeIndex = 1;\r\n                if (player.autoChallengeTimer.start >= 1) {\r\n                    toggleAutoChallengeTextColors(1);\r\n                }\r\n            }\r\n        }\r\n        if (player.autoChallengeIndex === 1 && G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.start) {\r\n            while (!player.autoChallengeToggles[player.autoChallengeIndex]) {\r\n                player.autoChallengeIndex += (!player.autoChallengeToggles[player.autoChallengeIndex]) ? 1 : 0;\r\n                if (player.autoChallengeIndex === 10) {\r\n                    break;\r\n                }\r\n            }\r\n            if (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n                G['autoChallengeTimerIncrement'] = 0;\r\n            }\r\n            toggleChallenges(player.autoChallengeIndex, true);\r\n            if (player.autoChallengeTimer.exit >= 1) {\r\n                toggleAutoChallengeTextColors(2);\r\n            }\r\n        }\r\n        if (player.autoChallengeIndex !== 1 && G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.enter) {\r\n            if (player.currentChallenge.transcension === 0 && player.autoChallengeIndex <= 5) {\r\n                while (!player.autoChallengeToggles[player.autoChallengeIndex]) {\r\n                    player.autoChallengeIndex += 1;\r\n                    if (player.autoChallengeIndex > 10) {\r\n                        player.autoChallengeIndex = 1;\r\n                        if (player.autoChallengeTimer.start >= 1) {\r\n                            toggleAutoChallengeTextColors(1);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (player.autoChallengeIndex !== 1) {\r\n                    toggleChallenges(player.autoChallengeIndex, true);\r\n                    if (player.autoChallengeTimer.exit >= 1) {\r\n                        toggleAutoChallengeTextColors(2);\r\n                    }\r\n                }\r\n                G['autoChallengeTimerIncrement'] = 0;\r\n            }\r\n            if (player.currentChallenge.reincarnation === 0 && player.autoChallengeIndex > 5) {\r\n                while (player.challengecompletions[player.autoChallengeIndex] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5]) || !player.autoChallengeToggles[player.autoChallengeIndex]) {\r\n                    player.autoChallengeIndex += 1;\r\n                    if (player.autoChallengeIndex > 10) {\r\n                        player.autoChallengeIndex = 1;\r\n                        if (player.autoChallengeTimer.start >= 1) {\r\n                            toggleAutoChallengeTextColors(1);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (player.autoChallengeIndex !== 1) {\r\n                    toggleChallenges(player.autoChallengeIndex, true);\r\n                    if (player.autoChallengeTimer.exit >= 1) {\r\n                        toggleAutoChallengeTextColors(2);\r\n                    }\r\n                }\r\n                G['autoChallengeTimerIncrement'] = 0;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport default {};\r\n","import { player, format } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { toggleCorruptionLevel } from './Toggles';\r\nimport { getElementById } from './Utility';\r\nexport const corruptionDisplay = (index) => {\r\n    if (document.getElementById(\"corruptionDetails\").style.visibility !== \"visible\") {\r\n        document.getElementById(\"corruptionDetails\").style.visibility = \"visible\";\r\n    }\r\n    if (document.getElementById(\"corruptionSelectedPic\").style.visibility !== \"visible\") {\r\n        document.getElementById(\"corruptionSelectedPic\").style.visibility = \"visible\";\r\n    }\r\n    G['corruptionTrigger'] = index;\r\n    const corruptionTexts = {\r\n        1: {\r\n            name: \"Corruption I: Divisiveness\",\r\n            description: \"Your multipliers get disintegrated! Is extra devious without also using Maladaption Corruption\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[1]) + \". Effect: Free Mult Exponent ^\" + format(G['divisivenessPower'][player.usedCorruptions[1]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[1]) + \". Effect: Free Multiplier Exponent ^\" + format(G['divisivenessPower'][player.prototypeCorruptions[1]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[1]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[1]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[1], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[1], 2), 1) + \"%\",\r\n            image: \"Pictures/Divisiveness Level 7.png\"\r\n        },\r\n        2: {\r\n            name: \"Corruption II: Maladaption\",\r\n            description: \"Insert Cool Text Here. Is extra devious without also using Divisiveness Corruption. Yin/Yang!\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[2]) + \". Effect: Free Accel. Exponent ^\" + format(G['maladaptivePower'][player.usedCorruptions[2]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[2]) + \". Effect: Free Accelerator Exponent ^\" + format(G['maladaptivePower'][player.prototypeCorruptions[2]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[2]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[2]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[2], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[2], 2), 1) + \"%\",\r\n            image: \"Pictures/Maladaption Lvl 7.png\"\r\n        },\r\n        3: {\r\n            name: \"Corruption III: Spacial Dilation\",\r\n            description: \"Way to go, Albert.\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[3]) + \". Effect: Time Speed is divided by \" + format(1 / G['lazinessMultiplier'][player.usedCorruptions[3]], 5),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[3]) + \". Effect: Time is divided by \" + format(1 / G['lazinessMultiplier'][player.prototypeCorruptions[3]], 5),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[3]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[3]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[3], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[3], 2), 1) + \"%\",\r\n            image: \"Pictures/Laziness Lvl 7.png\"\r\n        },\r\n        4: {\r\n            name: \"Corruption IV: Hyperchallenged\",\r\n            description: \"What's in a challenge?\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.usedCorruptions[4]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[4]) + \". Effect: Challenge Exponent Reqs.  x\" + format(G['hyperchallengedMultiplier'][player.prototypeCorruptions[4]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[4]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[4]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[4], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[4], 2), 1) + \"%\",\r\n            image: \"Pictures/Hyperchallenged Lvl 7.png\"\r\n        },\r\n        5: {\r\n            name: \"Corruption V: Scientific Illiteracy\",\r\n            description: \"Maybe Albert wouldn't have theorized Dilation after all.\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.usedCorruptions[5]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[5]) + \". Effect: Obtainium gain ^\" + format(G['illiteracyPower'][player.prototypeCorruptions[5]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[5]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[5]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[5], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[5], 2), 1) + \"%\",\r\n            image: \"Pictures/Scientific Illiteracy Lvl 7.png\"\r\n        },\r\n        6: {\r\n            name: \"Corruption VI: Market Deflation\",\r\n            description: \"Diamond Mine destroyed... no more monopolies!\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[6]) + \". Effect: Diamond gain ^\" + format(G['deflationMultiplier'][player.usedCorruptions[6]], 9),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[6]) + \". Effect: Diamond gain ^\" + format(G['deflationMultiplier'][player.prototypeCorruptions[6]], 9),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[6]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[6]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[6], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[6], 2), 1) + \"%\",\r\n            image: \"Pictures/Deflation Lvl 7.png\"\r\n        },\r\n        7: {\r\n            name: \"Corruption VII: Extinction\",\r\n            description: \"It killed the dinosaurs too, ya dingus.\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.usedCorruptions[7]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[7]) + \". Effect: Ant Production ^\" + format(G['extinctionMultiplier'][player.prototypeCorruptions[7]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[7]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[7]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[7], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[7], 2), 1) + \"%\",\r\n            image: \"Pictures/Extinction Lvl 7.png\"\r\n        },\r\n        8: {\r\n            name: \"Corruption VIII: Drought\",\r\n            description: \"More like California, am I right?\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.usedCorruptions[8]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[8]) + \". Effect: Offering EXP divided by \" + format(G['droughtMultiplier'][player.prototypeCorruptions[8]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[8]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[8]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[8], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[8], 2), 1) + \"%\",\r\n            image: \"Pictures/Drought Lvl 7.png\"\r\n        },\r\n        9: {\r\n            name: \"Corruption IX: Financial Recession\",\r\n            description: \"2008.exe has stopped working.\",\r\n            current: \"On this Ascension, this corruption is level \" + format(player.usedCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.usedCorruptions[9]], 3),\r\n            planned: \"On next Ascension, this corruption will be level \" + format(player.prototypeCorruptions[9]) + \". Effect: Coin Gain ^\" + format(G['financialcollapsePower'][player.prototypeCorruptions[9]], 3),\r\n            multiplier: \"Current Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.usedCorruptions[9]], 1) + \" / Next Ascension Score Multiplier: \" + format(G['corruptionPointMultipliers'][player.prototypeCorruptions[9]], 1),\r\n            spiritContribution: \"This Ascension gives Rune Spirit Effect +\" + format(4 * Math.pow(player.usedCorruptions[9], 2), 1) + \"% / Next Ascension Rune Spirit Effect +\" + format(4 * Math.pow(player.prototypeCorruptions[9], 2), 1) + \"%\",\r\n            image: \"Pictures/Financial Collapse Lvl 7.png\"\r\n        },\r\n        10: {\r\n            name: \"CLEANSE THE CORRUPTION\",\r\n            description: \"Free this world of sin.\",\r\n            current: \"Reset all Corruptions to level 0 for your current ascension. Does not reset your current ascension.\",\r\n            planned: \"Push that big 'Reset Corruptions' button to confirm your decision.\",\r\n            multiplier: \"Note: if you need to do this, you may have bitten off more than you can chew.\",\r\n            spiritContribution: \"\",\r\n            image: \"Pictures/ExitCorruption.png\"\r\n        }\r\n    };\r\n    document.getElementById(\"corruptionName\").textContent = corruptionTexts[index].name;\r\n    document.getElementById(\"corruptionDescription\").textContent = corruptionTexts[index].description;\r\n    document.getElementById(\"corruptionLevelCurrent\").textContent = corruptionTexts[index].current;\r\n    document.getElementById(\"corruptionLevelPlanned\").textContent = corruptionTexts[index].planned;\r\n    document.getElementById(\"corruptionMultiplierContribution\").textContent = corruptionTexts[index].multiplier;\r\n    document.getElementById(\"corruptionSpiritContribution\").textContent = corruptionTexts[index].spiritContribution;\r\n    document.getElementById(\"corruptionSelectedPic\").setAttribute(\"src\", corruptionTexts[index].image);\r\n    if (index < 10) {\r\n        document.getElementById(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index]);\r\n        document.getElementById(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index]);\r\n    }\r\n};\r\nexport const corruptionButtonsAdd = () => {\r\n    const rows = document.getElementsByClassName(\"corruptionStatRow\");\r\n    for (let i = 0; i < rows.length; i++) {\r\n        const row = rows[i];\r\n        const p = document.createElement(\"p\");\r\n        p.className = \"corrDesc\";\r\n        let text = document.createTextNode(\"Current: \");\r\n        p.appendChild(text);\r\n        let span = document.createElement(\"span\");\r\n        span.id = `corrCurrent${i + 1}`;\r\n        span.textContent = player.usedCorruptions[i + 1] + '';\r\n        p.appendChild(span);\r\n        text = document.createTextNode(\" / Next: \");\r\n        p.appendChild(text);\r\n        span = document.createElement(\"span\");\r\n        span.id = `corrNext${i + 1}`;\r\n        span.textContent = player.prototypeCorruptions[i + 1] + '';\r\n        p.appendChild(span);\r\n        row.appendChild(p);\r\n        let btn;\r\n        btn = document.createElement(\"button\");\r\n        btn.className = \"corrBtn corruptionMax\";\r\n        btn.textContent = \"+12\";\r\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 12);\r\n        row.appendChild(btn);\r\n        btn = document.createElement(\"button\");\r\n        btn.className = \"corrBtn corruptionUp\";\r\n        btn.textContent = \"+1\";\r\n        btn.onclick = () => toggleCorruptionLevel(i + 1, 1);\r\n        row.appendChild(btn);\r\n        btn = document.createElement(\"button\");\r\n        btn.className = \"corrBtn corruptionDown\";\r\n        btn.textContent = \"-1\";\r\n        btn.onclick = () => toggleCorruptionLevel(i + 1, -1);\r\n        row.appendChild(btn);\r\n        btn = document.createElement(\"button\");\r\n        btn.className = \"corrBtn corruptionReset\";\r\n        btn.textContent = \"-12\";\r\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 1, -12));\r\n        row.appendChild(btn);\r\n        row.addEventListener('click', () => corruptionDisplay(i + 1));\r\n    }\r\n};\r\nexport const corruptionLoadoutTableCreate = () => {\r\n    const corrCount = 9;\r\n    const table = getElementById(\"corruptionLoadoutTable\");\r\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\r\n        const row = table.insertRow();\r\n        for (let j = 0; j <= corrCount; j++) {\r\n            const cell = row.insertCell();\r\n            if (j === 0) {\r\n                cell.textContent = (i === 0) ? \"Next:\" : `Loadout ${i}:`;\r\n            }\r\n            else if (j <= corrCount) {\r\n                cell.textContent = ((i === 0) ? player.prototypeCorruptions[j] : player.corruptionLoadouts[i][j]).toString();\r\n                cell.style.textAlign = \"center\";\r\n            }\r\n        }\r\n        if (i === 0)\r\n            continue;\r\n        let cell = row.insertCell();\r\n        let btn = document.createElement(\"button\");\r\n        btn.className = \"corrSave\";\r\n        btn.textContent = \"Save\";\r\n        btn.onclick = () => corruptionLoadoutSaveLoad(true, i);\r\n        cell.appendChild(btn);\r\n        cell = row.insertCell();\r\n        btn = document.createElement(\"button\");\r\n        btn.className = \"corrLoad\";\r\n        btn.textContent = \"Load\";\r\n        btn.onclick = () => corruptionLoadoutSaveLoad(false, i);\r\n        cell.appendChild(btn);\r\n    }\r\n};\r\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\r\n    const row = getElementById(\"corruptionLoadoutTable\").rows[updateRow + 1].cells;\r\n    for (let i = 0; i < row.length; i++) {\r\n        if (i === 0 || i > 9)\r\n            continue;\r\n        row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i] : player.corruptionLoadouts[updateRow][i]).toString();\r\n    }\r\n};\r\nconst corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\r\n    if (save) {\r\n        player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions);\r\n        corruptionLoadoutTableUpdate(loadout);\r\n    }\r\n    else {\r\n        player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout]);\r\n        corruptionLoadoutTableUpdate();\r\n    }\r\n};\r\nexport const corruptionCleanseConfirm = () => {\r\n    const corrupt = document.getElementById('corruptionCleanseConfirm');\r\n    corrupt.style.visibility = 'visible';\r\n    setTimeout(() => corrupt.style.visibility = 'hidden', 10000);\r\n};\r\n","import player, { format } from \"./Synergism\";\r\nimport { achievementaward } from \"./Achievements\";\r\nimport { CalcECC } from \"./Challenges\";\r\nimport { calculateCubeBlessings, calculateSummationNonLinear } from \"./Calculate\";\r\nimport { upgradeupdate } from \"./Upgrades\";\r\nimport { revealStuff } from \"./UpdateHTML\";\r\nimport { Globals as G } from \"./Variables\";\r\nconst distributions = {\r\n    cubes: {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    },\r\n    tesseracts: {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    },\r\n    hypercubes: {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    },\r\n    platonics: {\r\n        cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\r\n        tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\r\n        hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\r\n        platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\r\n        hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\r\n        taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\r\n        scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\r\n    }\r\n};\r\nexport const cubeDistributions = (k) => distributions[k];\r\nexport const openCubes = (value, cubeName, max = false) => {\r\n    return [value, cubeName, max];\r\n};\r\nexport const openCube = (value, max = false) => {\r\n    let toSpend = max ? player.wowCubes : Math.min(player.wowCubes, value);\r\n    if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\r\n        achievementaward(246);\r\n    }\r\n    player.wowCubes -= toSpend;\r\n    player.cubeOpenedDaily += toSpend;\r\n    if (player.cubeQuarkDaily < 25 + 75 * +player.shopUpgrades.cubeToQuarkBought) {\r\n        while (player.cubeOpenedDaily >= 10 * Math.pow(1 + player.cubeQuarkDaily, 4) && player.cubeQuarkDaily < 25 + 75 * +player.shopUpgrades.cubeToQuarkBought) {\r\n            player.cubeQuarkDaily += 1;\r\n            player.worlds += 1;\r\n        }\r\n    }\r\n    toSpend *= (1 + player.researches[138] / 1000);\r\n    toSpend *= (1 + 0.8 * player.researches[168] / 1000);\r\n    toSpend *= (1 + 0.6 * player.researches[198] / 1000);\r\n    toSpend = Math.floor(toSpend);\r\n    let toSpendModulo = toSpend % 20;\r\n    let toSpendDiv20 = Math.floor(toSpend / 20);\r\n    const blessings = {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    };\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\r\n        toSpendModulo += toSpendDiv20;\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\r\n        toSpendModulo += toSpendDiv20;\r\n    }\r\n    if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\r\n        toSpendModulo += toSpendDiv20;\r\n    }\r\n    toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20);\r\n    toSpendModulo = toSpendModulo % 20;\r\n    for (const key of Object.keys(player.cubeBlessings)) {\r\n        player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\r\n    }\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n        const num = 100 * Math.random();\r\n        for (const key of Object.keys(player.cubeBlessings)) {\r\n            if (blessings[key].pdf(num))\r\n                player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\r\n        }\r\n    }\r\n    calculateCubeBlessings();\r\n};\r\nconst cubeUpgradeName = [\r\n    \"Wow! I want more Cubes.\",\r\n    \"Wow! I want passive Offering gain too.\",\r\n    \"Wow! I want better passive Obtainium\",\r\n    \"Wow! I want to keep mythos building autobuyers.\",\r\n    \"Wow! I want to keep mythos upgrade autobuyer.\",\r\n    \"Wow! I want to keep auto mythos gain.\",\r\n    \"Wow! I want the particle building automators.\",\r\n    \"Wow! I want to automate Particle Upgrades.\",\r\n    \"Wow! I want to automate researches better dangit.\",\r\n    \"Wow! This is pretty good but expensive.\",\r\n    \"Wow! I want more cubes 2.\",\r\n    \"Wow! I want building power to be useful 1.\",\r\n    \"Wow! I want opened cubes to give more tributes 1.\",\r\n    \"Wow! I want Iris Tribute bonuses to scale better 1.\",\r\n    \"Wow! I want Ares Tribute bonuses to scale better 1.\",\r\n    \"Wow! I want more rune levels 1.\",\r\n    \"Wow! I want just a little bit more crystal power.\",\r\n    \"Wow! I want to accelerate time!\",\r\n    \"Wow! I want to unlock a couple more coin upgrades.\",\r\n    \"Wow! I want to improve automatic rune tools.\",\r\n    \"Wow! I want more cubes 3.\",\r\n    \"Wow! I wish my Artemis was a little better 1\",\r\n    \"Wow! I want opened cubes to give more tributes 2.\",\r\n    \"Wow! I want Plutus Tribute bonuses to scale better 1\",\r\n    \"Wow! I want Moloch Tribute bonuses to scale better 1\",\r\n    \"Wow! I want to start Ascensions with rune levels.\",\r\n    \"Wow! I want to start Ascensions with one of each reincarnation building.\",\r\n    \"Wow! I want to finally render Reincarnating obsolete.\",\r\n    \"Wow! I want to increase maximum Reincarnation Challenge completions.\",\r\n    \"Wow! I want to arbitrarily increase my cube and tesseract gain.\",\r\n    \"Wow! I want more cubes 4.\",\r\n    \"Wow! I want runes to be easier to level up over time.\",\r\n    \"Wow! I want opened cubes to give more tributes 3.\",\r\n    \"Wow! I want Chronos Tribute bonuses to scale better 1\",\r\n    \"Wow! I want Aphrodite Tribute bonuses to scale better 1\",\r\n    \"Wow! I want building power to be useful 2.\",\r\n    \"Wow! I want more rune levels 2.\",\r\n    \"Wow! I want more tesseracts while corrupted!\",\r\n    \"Wow! I want more score from challenge 10 completions.\",\r\n    \"Wow! I want Athena Tribute bonuses to scale better 1.\",\r\n    \"Wow! I want more cubes 5.\",\r\n    \"Wow! I want some Uncorruptable Obtainium.\",\r\n    \"Wow! I want even more Uncorruptable Obtainium!\",\r\n    \"Wow! I want Midas Tribute bonus to scale better 1.\",\r\n    \"Wow! I want Hermes Tribute bonus to scale better 1.\",\r\n    \"Wow! I want even MORE offerings!\",\r\n    \"Wow! I want even MORE obtainium!\",\r\n    \"Wow! I want to start ascension with an ant.\",\r\n    \"Wow! I want to start ascension with a challenge 6-8 completion.\",\r\n    \"Wow! I want to be enlightened by the power of a thousand suns.\"\r\n];\r\nconst cubeBaseCost = [\r\n    200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\r\n    5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\r\n    5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\r\n    5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\r\n    5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8\r\n];\r\nconst cubeMaxLevel = [\r\n    2, 10, 5, 1, 1, 1, 1, 1, 1, 1,\r\n    2, 10, 1, 10, 10, 10, 5, 1, 1, 1,\r\n    2, 10, 1, 10, 10, 10, 1, 1, 5, 1,\r\n    2, 1, 1, 10, 10, 10, 10, 1, 1, 10,\r\n    2, 10, 10, 10, 10, 20, 20, 1, 1, 100000\r\n];\r\nconst cubeUpgradeDescriptions = [\r\n    \"[1x1] You got it! +14% cubes from Ascending per level.\",\r\n    \"[1x2] Plutus grants you +1 Offering per second, no matter what, per level. Also a +0.5% Recycling chance!\",\r\n    \"[1x3] Athena grants you +10% more Obtainium, and +80% Auto Obtainium per level.\",\r\n    \"[1x4] You keep those 5 useful automation upgrades in the upgrades tab!\",\r\n    \"[1x5] You keep the mythos upgrade automation upgrade in the upgrades tab!\",\r\n    \"[1x6] You keep the automatic mythos gain upgrade in the upgrades tab!\",\r\n    \"[1x7] Automatically buy each Particle Building whenever possible.\",\r\n    \"[1x8] Automatically buy Particle Upgrades.\",\r\n    \"[1x9] The research automator in shop now automatically buys cheapest when enabled. It's like a roomba kinda!\",\r\n    \"[1x10] Unlock some tools to automate Ascensions or whatever. Kinda expensive but cool.\",\r\n    \"[2x1] You got it again! +7% cubes from Ascending per level.\",\r\n    \"[2x2] Raise building power to the power of (1 + level * 0.09).\",\r\n    \"[2x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\r\n    \"[2x4] Iris shines her light on you. The effect power is now increased by +0.01 (+0.005 if >1000 tributes) per level.\",\r\n    \"[2x5] Ares teaches you the art of war. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\r\n    \"[2x6] You got it buster! +20 ALL max rune levels per level.\",\r\n    \"[2x7] Yep. +5 Exponent per level to crystals.\",\r\n    \"[2x8] Quantum tunnelling ftw. +20% global game speed.\",\r\n    \"[2x9] Unlocks new coin upgrades ranging from start of ascend to post c10 and beyond.\",\r\n    \"[2x10] The rune automator in shop now spends all offerings automatically, 'splitting' them into each of the 5 runes equally.\",\r\n    \"[3x1] You got it once more! +7% cubes from Ascending per level.\",\r\n    \"[3x2] The exponent of the bonus of Artemis is increased by 0.05 per level.\",\r\n    \"[3x3] For each 20 cubes opened at once, you get 1 additional tribute at random.\",\r\n    \"[3x4] Plutus teaches you the Art of the Deal. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\r\n    \"[3x5] Moloch lends you a hand in communicating with Ant God. The effect power is now increased by +0.01 (+0.0033 if >1000 tributes) per level.\",\r\n    \"[3x6] Start ascensions with 3 additional rune levels [Does not decrease EXP requirement] per level.\",\r\n    \"[3x7] Upon an ascension, you will start with 1 of each reincarnation building to speed up Ascensions.\",\r\n    \"[3x8] Well, I think you got it? Gain +1% of particles on Reincarnation per second.\",\r\n    \"[3x9] Add +5 to Reincarnation Challenge cap per level. Completions after 25 scale faster in requirement!\",\r\n    \"[3x10] You now get +25% Cubes and Tesseracts forever!\",\r\n    \"[4x1] You again? +7% cubes from Ascending per level.\",\r\n    \"[4x2] Gain +0.1% Rune EXP per second you have spent in an Ascension. This has no cap!\",\r\n    \"[4x3] For each 20 cubes opened at once, you get yet another additional tribute at random.\",\r\n    \"[4x4] Chronos overclocks the universe for your personal benefit. (Rewards the same as others)\",\r\n    \"[4x5] Aphrodite increases the fertility of your coins. (Rewards the same as others)\",\r\n    \"[4x6] Raise building power to (1 + 0.05 * Level) once more.\",\r\n    \"[4x7] Adds +20 to ALL rune caps again per level.\",\r\n    \"[4x8] Gain +0.5% more tesseracts on ascension for each additional level in a corruption you enable.\",\r\n    \"[4x9] Instead of the multiplier being 1.03^(C10 completions), it is now 1.035^(C10 completions)!\",\r\n    \"[4x10] Athena is very smart (Rewards the same as others).\",\r\n    \"[5x1] Yeah yeah yeah, +7% cubes from Ascending per level. Isn't it enough?\",\r\n    \"[5x2] You now gain +4% Obtainium per level, which is not dependent on corruptions!\",\r\n    \"[5x3] Gain another +3% corruption-independent Obtainium per level.\",\r\n    \"[5x4] Blah blah blah Midas works harder (same rewards as before)\",\r\n    \"[5x5] Blah blah blah Hermes works harder (same rewards as before)\",\r\n    \"[5x6] Gain +5% more offerings per level!\",\r\n    \"[5x7] Gain +10% more obtainium per level!\",\r\n    \"[5x8] When you ascend, start with 1 worker ant (this is a lot better than it sounds!)\",\r\n    \"[5x9] When you ascend, gain 1 of each challenge 6-8 completion.\",\r\n    \"[5x10] What doesn't this boost? +0.01% Accelerators, Multipliers, Accelerator Boosts, +0.02% Obtainium, +0.02% Offerings, +0.1 Max Rune Levels, +1 Effective ELO, +0.001 Talisman bonuses per level.\"\r\n];\r\nconst getCubeCost = (i, linGrowth = 0) => {\r\n    let amountToBuy = G['buyMaxCubeUpgrades'] ? 1e5 : 1;\r\n    amountToBuy = Math.min(cubeMaxLevel[i - 1] - player.cubeUpgrades[i], amountToBuy);\r\n    const metaData = calculateSummationNonLinear(player.cubeUpgrades[i], cubeBaseCost[i - 1], player.wowCubes, linGrowth, amountToBuy);\r\n    return ([metaData[0], metaData[1]]);\r\n};\r\nexport const cubeUpgradeDesc = (i, linGrowth = 0) => {\r\n    const metaData = getCubeCost(i, linGrowth);\r\n    const a = document.getElementById(\"cubeUpgradeName\");\r\n    const b = document.getElementById(\"cubeUpgradeDescription\");\r\n    const c = document.getElementById(\"cubeUpgradeCost\");\r\n    const d = document.getElementById(\"cubeUpgradeLevel\");\r\n    a.textContent = cubeUpgradeName[i - 1];\r\n    b.textContent = cubeUpgradeDescriptions[i - 1];\r\n    c.textContent = \"Cost: \" + format(metaData[1], 0, true) + \" Wow! Cubes [+\" + format(metaData[0] - player.cubeUpgrades[i], 0, true) + \" Levels]\";\r\n    c.style.color = \"green\";\r\n    d.textContent = \"Level: \" + format(player.cubeUpgrades[i], 0, true) + \"/\" + format(cubeMaxLevel[i - 1], 0, true);\r\n    d.style.color = \"white\";\r\n    if (player.wowCubes < cubeBaseCost[i - 1]) {\r\n        c.style.color = \"crimson\";\r\n    }\r\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\r\n        c.style.color = \"gold\";\r\n        d.style.color = \"plum\";\r\n    }\r\n};\r\nexport const updateCubeUpgradeBG = (i) => {\r\n    const a = document.getElementById(\"cubeUpg\" + i);\r\n    if (player.cubeUpgrades[i] > cubeMaxLevel[i - 1]) {\r\n        console.log(\"Refunded \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) + \" levels of Cube Upgrade \" + i + \", adding \" + (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1] + \" Wow! Cubes to balance.\");\r\n        player.wowCubes += (player.cubeUpgrades[i] - cubeMaxLevel[i - 1]) * cubeBaseCost[i - 1];\r\n        player.cubeUpgrades[i] = cubeMaxLevel[i - 1];\r\n    }\r\n    if (player.cubeUpgrades[i] === 0) {\r\n        a.style.backgroundColor = \"black\";\r\n    }\r\n    if (player.cubeUpgrades[i] > 0 && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\r\n        a.style.backgroundColor = \"purple\";\r\n    }\r\n    if (player.cubeUpgrades[i] === cubeMaxLevel[i - 1]) {\r\n        a.style.backgroundColor = \"green\";\r\n    }\r\n};\r\nexport const buyCubeUpgrades = (i, linGrowth = 0) => {\r\n    const metaData = getCubeCost(i, linGrowth);\r\n    if (player.wowCubes >= metaData[1] && player.cubeUpgrades[i] < cubeMaxLevel[i - 1]) {\r\n        player.wowCubes -= 100 / 100 * metaData[1];\r\n        player.cubeUpgrades[i] = metaData[0];\r\n    }\r\n    if (i === 4 && player.cubeUpgrades[4] > 0) {\r\n        for (let j = 94; j <= 98; j++) {\r\n            player.upgrades[j] = 1;\r\n            upgradeupdate(j, true);\r\n        }\r\n    }\r\n    if (i === 5 && player.cubeUpgrades[5] > 0) {\r\n        player.upgrades[99] = 1;\r\n        upgradeupdate(99, true);\r\n    }\r\n    if (i === 6 && player.cubeUpgrades[6] > 0) {\r\n        player.upgrades[100] = 1;\r\n        upgradeupdate(100, true);\r\n    }\r\n    cubeUpgradeDesc(i, linGrowth);\r\n    updateCubeUpgradeBG(i);\r\n    revealStuff();\r\n    calculateCubeBlessings();\r\n};\r\n","import EventEmitter from 'eventemitter3';\r\nexport const Synergism = new EventEmitter();\r\n","import { upgradeupdate } from \"./Upgrades\";\r\nimport player from \"./Synergism\";\r\nimport Decimal from \"break_infinity.js\";\r\nimport { achievementaward } from \"./Achievements\";\r\nimport { revealStuff } from \"./UpdateHTML\";\r\nimport { Globals as G } from './Variables';\r\nexport const buyGenerator = (i, state) => {\r\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\r\n        player.unlocks.generation = true;\r\n    }\r\n    const q = 100 + i;\r\n    let type = \"transcendPoints\";\r\n    if (q <= 110 && q >= 106) {\r\n        type = \"coins\";\r\n    }\r\n    else if (q <= 115) {\r\n        type = \"prestigePoints\";\r\n    }\r\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\r\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105]);\r\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\r\n        if (achievementCheck === 0) {\r\n            if ([102, 103, 104, 105].includes(q)) {\r\n                achievementaward(q - 31);\r\n            }\r\n        }\r\n        player[type] = player[type].sub(cost);\r\n        player.upgrades[q] = 1;\r\n        upgradeupdate(q, state);\r\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\r\n    }\r\n    revealStuff();\r\n};\r\n","import { player } from './Synergism';\r\nimport { openTesseract } from './Tesseracts';\r\nimport { Globals as G } from './Variables';\r\nexport const openHypercube = (value, max = false) => {\r\n    const toSpend = max ? player.wowHypercubes : Math.min(player.wowHypercubes, value);\r\n    player.wowHypercubes -= toSpend;\r\n    player.hypercubeOpenedDaily += toSpend;\r\n    if (player.hypercubeQuarkDaily < 25 + 75 * +player.shopUpgrades.hypercubeToQuarkBought) {\r\n        while (player.hypercubeOpenedDaily >= 5 * Math.pow(1 + player.hypercubeQuarkDaily, 2) && player.hypercubeQuarkDaily < 25 + 75 * +player.shopUpgrades.hypercubeToQuarkBought) {\r\n            player.hypercubeQuarkDaily += 1;\r\n            player.worlds += 1;\r\n        }\r\n    }\r\n    const toSpendModulo = toSpend % 20;\r\n    const toSpendDiv20 = Math.floor(toSpend / 20);\r\n    const blessings = {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    };\r\n    for (const key in player.hypercubeBlessings) {\r\n        player.hypercubeBlessings[key] += blessings[key].weight * toSpendDiv20;\r\n    }\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n        const num = 100 * Math.random();\r\n        for (const key in player.hypercubeBlessings) {\r\n            if (blessings[key].pdf(num))\r\n                player.hypercubeBlessings[key] += 1;\r\n        }\r\n    }\r\n    calculateHypercubeBlessings();\r\n    const extraTesseractBlessings = Math.floor(toSpend * 100 * player.researches[183]);\r\n    player.wowTesseracts += extraTesseractBlessings;\r\n    openTesseract(extraTesseractBlessings, false);\r\n};\r\nexport const calculateHypercubeBlessings = () => {\r\n    const keys = Object.keys(player.hypercubeBlessings);\r\n    for (const key of keys) {\r\n        const obj = player.hypercubeBlessings[key];\r\n        const idx = keys.indexOf(key) + 1;\r\n        let power = 1;\r\n        let mult = 1;\r\n        if (obj >= 1000) {\r\n            power = G['benedictionDRPower'][idx];\r\n            mult *= Math.pow(1000, (1 - G['benedictionDRPower'][idx]));\r\n        }\r\n        G['hypercubeBonusMultiplier'][idx] = 1 + mult * G['benedictionbase'][idx] * Math.pow(obj, power) * G['platonicBonusMultiplier'][4];\r\n    }\r\n};\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { player, saveSynergy, blankSave, clearInt, format, intervalHold, constantIntervals, createTimer, loadSynergy, isTesting } from './Synergism';\r\nimport { getElementById } from './Utility';\r\nimport LZString from 'lz-string';\r\nimport { achievementaward } from './Achievements';\r\nimport { Globals as G } from './Variables';\r\nimport { Synergism } from './Events';\r\nconst format24 = new Intl.DateTimeFormat(\"EN-GB\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    hour12: false,\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\"\r\n});\r\nconst format12 = new Intl.DateTimeFormat(\"EN-GB\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n    hour: \"2-digit\",\r\n    hour12: true,\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\"\r\n});\r\nconst getRealTime = (use12 = false) => {\r\n    const format = use12 ? format12 : format24;\r\n    const dateParts = Object.assign({}, ...format\r\n        .formatToParts(new Date())\r\n        .filter((x) => x.type !== \"literal\")\r\n        .map(p => ({ [p.type]: p.value })));\r\n    const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : '';\r\n    return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`;\r\n};\r\nexport const updateSaveString = () => {\r\n    player.saveString = getElementById(\"saveStringInput\").value;\r\n};\r\nconst saveFilename = () => {\r\n    const s = player.saveString;\r\n    const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\r\n        switch (b) {\r\n            case 'VERSION': return `v${player.version}`;\r\n            case 'TIME': return getRealTime();\r\n            case 'TIME12': return getRealTime(true);\r\n        }\r\n    });\r\n    return t;\r\n};\r\nexport const exportSynergism = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    player.offlinetick = Date.now();\r\n    if (player.quarkstimer >= 3600) {\r\n        player.worlds += (Math.floor(player.quarkstimer / 3600) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\r\n        player.quarkstimer = (player.quarkstimer % 3600);\r\n    }\r\n    document.getElementById('settingstab').setAttribute('full', '0');\r\n    saveSynergy();\r\n    const toClipboard = getElementById('saveType').checked;\r\n    const save = localStorage.getItem('Synergysave2');\r\n    if ('clipboard' in navigator && toClipboard) {\r\n        yield navigator.clipboard.writeText(save)\r\n            .catch(e => console.error(e));\r\n    }\r\n    else if (toClipboard) {\r\n        const textArea = document.createElement('textarea');\r\n        textArea.value = save;\r\n        textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;');\r\n        document.body.appendChild(textArea);\r\n        textArea.focus();\r\n        textArea.select();\r\n        try {\r\n            document.execCommand('copy');\r\n        }\r\n        catch (_) {\r\n        }\r\n        document.body.removeChild(textArea);\r\n    }\r\n    else {\r\n        const a = document.createElement('a');\r\n        a.setAttribute('href', 'data:text/plain;charset=utf-8,' + save);\r\n        a.setAttribute('download', saveFilename());\r\n        a.setAttribute('id', 'downloadSave');\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n    document.getElementById(\"exportinfo\").textContent = toClipboard\r\n        ? 'Copied save to your clipboard!'\r\n        : 'Savefile copied to file!';\r\n});\r\nexport const resetGame = () => {\r\n    const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\r\n    const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\r\n    if (+prompt(`Answer the question to confirm you'd like to reset: what is ${a}+${b}? (Hint: ${a + b})`) !== a + b) {\r\n        return;\r\n    }\r\n    const hold = Object.assign({}, blankSave, {\r\n        codes: Array.from(blankSave.codes)\r\n    });\r\n    importSynergism(btoa(JSON.stringify(hold)));\r\n};\r\nexport const importSynergism = (input) => {\r\n    const d = LZString.decompressFromBase64(input);\r\n    const f = d ? JSON.parse(d) : JSON.parse(atob(input));\r\n    if ((f.exporttest === \"YES!\" || f.exporttest === true) ||\r\n        (f.exporttest === false && isTesting)) {\r\n        intervalHold.forEach(clearInt);\r\n        intervalHold.length = 0;\r\n        localStorage.setItem('Synergysave2', btoa(JSON.stringify(f)));\r\n        constantIntervals();\r\n        createTimer();\r\n        loadSynergy();\r\n    }\r\n};\r\nexport const promocodes = () => {\r\n    const input = prompt(\"Got a code? Great! Enter it in (CaSe SeNsItIvE).\");\r\n    const el = document.getElementById(\"promocodeinfo\");\r\n    if (input === \"synergism2020\" && !player.codes.get(1)) {\r\n        player.codes.set(1, true);\r\n        player.runeshards += 25;\r\n        player.worlds += 50;\r\n        el.textContent = \"Promo Code 'synergism2020' Applied! +25 Offerings, +50 Quarks\";\r\n    }\r\n    else if (input === \":unsmith:\" && player.achievements[243] < 1) {\r\n        achievementaward(243);\r\n        el.textContent = \"It's Spaghetti Time! [Awarded an achievement!!!]\";\r\n    }\r\n    else if (input === \":antismith:\" && player.achievements[244] < 1) {\r\n        achievementaward(244);\r\n        el.textContent = \"Hey, isn't this just a reference to Antimatter Dimensions? Shh. [Awarded an achievement!!!]\";\r\n    }\r\n    else if (input === 'Khafra' && !player.codes.get(26)) {\r\n        player.codes.set(26, true);\r\n        const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100);\r\n        player.worlds += quarks;\r\n        el.textContent = 'Khafra has blessed you with ' + quarks + ' quarks!';\r\n    }\r\n    else if (input === 'november13' && !player.codes.get(27)) {\r\n        player.codes.set(27, true);\r\n        player.worlds += 300;\r\n        el.textContent = 'Be careful, on friday the thirteenth! [+300 Quarks]';\r\n    }\r\n    else if (input === '2million' && !player.codes.get(28)) {\r\n        player.codes.set(28, true);\r\n        player.worlds += 700;\r\n        el.textContent = 'Thank you for 2 million plays on kongregate!';\r\n    }\r\n    else if (input === 'version2.1.0' && !player.codes.get(29)) {\r\n        player.codes.set(29, true);\r\n        let quarkCounter = 250;\r\n        if (player.challengecompletions[11] > 0 || player.highestchallengecompletions[11] > 0) {\r\n            quarkCounter += 250;\r\n        }\r\n        if (player.challengecompletions[12] > 0 || player.highestchallengecompletions[12] > 0) {\r\n            quarkCounter += 250;\r\n        }\r\n        if (player.challengecompletions[13] > 0 || player.highestchallengecompletions[13] > 0) {\r\n            quarkCounter += 500;\r\n        }\r\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\r\n            quarkCounter += 500;\r\n        }\r\n        if (player.challengecompletions[13] >= 18 || player.highestchallengecompletions[13] >= 18) {\r\n            quarkCounter += 750;\r\n        }\r\n        if (player.challengecompletions[13] >= 22 || player.highestchallengecompletions[13] >= 22) {\r\n            quarkCounter += 1;\r\n        }\r\n        player.worlds += quarkCounter;\r\n        el.textContent = 'Welcome to the Abyss! Based on your progress, you gained ' + format(quarkCounter) + \" Quarks.\";\r\n    }\r\n    else if (input === 'add') {\r\n        if (player.rngCode >= (Date.now() - 3600000)) {\r\n            el.textContent = `You already used this promocode in the last hour!`;\r\n            return;\r\n        }\r\n        const amount = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\r\n        const first = window.crypto.getRandomValues(new Uint8Array(1))[0];\r\n        const second = window.crypto.getRandomValues(new Uint8Array(1))[0];\r\n        const addPrompt = prompt(`What is ${first} + ${second}?`);\r\n        if (first + second === +addPrompt) {\r\n            player.worlds += amount;\r\n            el.textContent = `You were awarded ${amount} quarks! Wait an hour to use this code again!`;\r\n        }\r\n        else {\r\n            el.textContent = `You guessed ${addPrompt}, but the answer was ${first + second}. Try again in an hour!`;\r\n        }\r\n        player.rngCode = Date.now();\r\n    }\r\n    else if (input === 'holiday' && !player.codes.get(31)) {\r\n        player.codes.set(31, true);\r\n        let quarkCounter = 2500;\r\n        if (player.platonicUpgrades[5] > 0) {\r\n            quarkCounter += 1;\r\n        }\r\n        player.worlds += quarkCounter;\r\n        el.textContent = 'Happy holidays from Platonic, to you and yours! A gift of ' + format(quarkCounter) + \" Quarks, just for you.\";\r\n    }\r\n    else {\r\n        el.textContent = \"Your code is either invalid or already used. Try again!\";\r\n    }\r\n    saveSynergy();\r\n    Synergism.emit('promocode', input);\r\n    setTimeout(function () {\r\n        el.textContent = '';\r\n    }, 15000);\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { Synergism } from './Events';\r\nconst platonicUpgradeDesc = {\r\n    1: '+0.0075% cubes per corruption level per level!',\r\n    2: '+0.015% tesseracts per corruption level per level!',\r\n    3: '+0.045% hypercubes per corruption level per level!',\r\n    4: 'Gain +2% platonic cubes per level if >2.5 Trillion Score!',\r\n    5: 'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster constant production, +5/+3 Challenge caps, +100% Obtainium/Offerings, ^1.10 coin gain in C15!',\r\n    6: 'Raises corruption 1 and 2 exponent ^(1 + level/30), capacity of ^1 on Mult/Accel.',\r\n    7: 'Raises speed below 1x to the power of ^(1 - level/30).',\r\n    8: 'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x challenge req. multiplier!',\r\n    9: 'Gain more obtainium with the illiteracy corruption, up until 1e100 obtainium!',\r\n    10: 'C10 Exponent: 1.0375 --> 1.04, Const. tax exponent +0.20 and 10x faster constant production, +5/+3 Challenge caps, +250% Obtainium and Offerings, +100% Cubes/Tesseracts/Hypercubes/Platonics for 5T/7.5T/10T/20T score. ^1.25 ant exponent in C15!',\r\n    11: 'With this upgrade, you will gain diamonds equal to particle gain!',\r\n    12: 'Gain (1 + lvl/100)x ant multiplier per challenge completion, ignoring corruptions to ants.',\r\n    13: 'Effect of Drought is raised to the power of 0.5.',\r\n    14: 'Gain a small coin exponent dependent on your coins, up until 1e4T coins.',\r\n    15: 'I suppose that, after all, we all are Everywhere at the End of Time.'\r\n};\r\nexport const platUpgradeBaseCosts = {\r\n    1: {\r\n        obtainium: 1e70,\r\n        offerings: 1e45,\r\n        cubes: 1e13,\r\n        tesseracts: 1e6,\r\n        hypercubes: 1e5,\r\n        platonics: 1e4,\r\n        abyssals: 0,\r\n        maxLevel: 100\r\n    },\r\n    2: {\r\n        obtainium: 3e70,\r\n        offerings: 2e45,\r\n        cubes: 1e11,\r\n        tesseracts: 1e8,\r\n        hypercubes: 1e5,\r\n        platonics: 1e4,\r\n        abyssals: 0,\r\n        maxLevel: 100\r\n    },\r\n    3: {\r\n        obtainium: 1e71,\r\n        offerings: 4e45,\r\n        cubes: 1e11,\r\n        tesseracts: 1e6,\r\n        hypercubes: 1e7,\r\n        platonics: 1e4,\r\n        abyssals: 0,\r\n        maxLevel: 100\r\n    },\r\n    4: {\r\n        obtainium: 4e71,\r\n        offerings: 1e46,\r\n        cubes: 1e12,\r\n        tesseracts: 1e7,\r\n        hypercubes: 1e6,\r\n        platonics: 1e6,\r\n        abyssals: 0,\r\n        maxLevel: 100\r\n    },\r\n    5: {\r\n        obtainium: 1e80,\r\n        offerings: 1e60,\r\n        cubes: 1e14,\r\n        tesseracts: 1e9,\r\n        hypercubes: 1e8,\r\n        platonics: 1e7,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    6: {\r\n        obtainium: 1e82,\r\n        offerings: 1e61,\r\n        cubes: 1e15,\r\n        tesseracts: 1e9,\r\n        hypercubes: 1e8,\r\n        platonics: 1e7,\r\n        abyssals: 0,\r\n        maxLevel: 10\r\n    },\r\n    7: {\r\n        obtainium: 1e84,\r\n        offerings: 3e62,\r\n        cubes: 2e15,\r\n        tesseracts: 2e9,\r\n        hypercubes: 2e8,\r\n        platonics: 1.5e7,\r\n        abyssals: 0,\r\n        maxLevel: 15\r\n    },\r\n    8: {\r\n        obtainium: 1e87,\r\n        offerings: 1e64,\r\n        cubes: 4e15,\r\n        tesseracts: 4e9,\r\n        hypercubes: 4e8,\r\n        platonics: 3e7,\r\n        abyssals: 0,\r\n        maxLevel: 5\r\n    },\r\n    9: {\r\n        obtainium: 1e90,\r\n        offerings: 1e66,\r\n        cubes: 1e16,\r\n        tesseracts: 1e10,\r\n        hypercubes: 1e9,\r\n        platonics: 5e7,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    10: {\r\n        obtainium: 1e93,\r\n        offerings: 1e68,\r\n        cubes: 1e18,\r\n        tesseracts: 1e12,\r\n        hypercubes: 1e11,\r\n        platonics: 1e9,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    11: {\r\n        obtainium: 2e96,\r\n        offerings: 1e70,\r\n        cubes: 2e17,\r\n        tesseracts: 2e11,\r\n        hypercubes: 2e10,\r\n        platonics: 2e8,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    12: {\r\n        obtainium: 1e100,\r\n        offerings: 1e72,\r\n        cubes: 1e18,\r\n        tesseracts: 1e12,\r\n        hypercubes: 1e11,\r\n        platonics: 1e9,\r\n        abyssals: 0,\r\n        maxLevel: 10\r\n    },\r\n    13: {\r\n        obtainium: 2e104,\r\n        offerings: 1e74,\r\n        cubes: 2e19,\r\n        tesseracts: 4e12,\r\n        hypercubes: 4e11,\r\n        platonics: 4e9,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    14: {\r\n        obtainium: 1e108,\r\n        offerings: 1e77,\r\n        cubes: 4e20,\r\n        tesseracts: 1e13,\r\n        hypercubes: 1e12,\r\n        platonics: 1e10,\r\n        abyssals: 0,\r\n        maxLevel: 1\r\n    },\r\n    15: {\r\n        obtainium: 1e115,\r\n        offerings: 1e80,\r\n        cubes: 1e23,\r\n        tesseracts: 1e15,\r\n        hypercubes: 1e14,\r\n        platonics: 1e12,\r\n        abyssals: 1,\r\n        maxLevel: 1\r\n    }\r\n};\r\nconst checkPlatonicUpgrade = (index) => {\r\n    let checksum = 0;\r\n    const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'];\r\n    const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'];\r\n    const checks = {\r\n        obtainium: false,\r\n        offerings: false,\r\n        cubes: false,\r\n        tesseracts: false,\r\n        hypercubes: false,\r\n        platonics: false,\r\n        abyssals: false,\r\n        canBuy: false,\r\n    };\r\n    for (let i = 0; i < resources.length; i++) {\r\n        if (platUpgradeBaseCosts[index][resources[i]] <= player[resourceNames[i]]) {\r\n            checksum++;\r\n            checks[resources[i]] = true;\r\n        }\r\n    }\r\n    if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n        checks.canBuy = true;\r\n    }\r\n    return checks;\r\n};\r\nexport const createPlatonicDescription = (index) => {\r\n    let maxLevelAppend = \"\";\r\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n        maxLevelAppend = \" [MAX]\";\r\n    }\r\n    const resourceCheck = checkPlatonicUpgrade(index);\r\n    document.getElementById('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index];\r\n    document.getElementById('platonicUpgradeLevel').textContent = \"Level: \" + format(player.platonicUpgrades[index]) + \"/\" + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend;\r\n    document.getElementById('platonicOfferingCost').textContent = format(player.runeshards) + \"/\" + format(platUpgradeBaseCosts[index].offerings) + \" Offerings\";\r\n    document.getElementById('platonicObtainiumCost').textContent = format(player.researchPoints) + \"/\" + format(platUpgradeBaseCosts[index].obtainium) + \" Obtainium\";\r\n    document.getElementById('platonicCubeCost').textContent = format(player.wowCubes) + \"/\" + format(platUpgradeBaseCosts[index].cubes) + \" Wow! Cubes\";\r\n    document.getElementById('platonicTesseractCost').textContent = format(player.wowTesseracts) + \"/\" + format(platUpgradeBaseCosts[index].tesseracts) + \" Wow! Tesseracts\";\r\n    document.getElementById('platonicHypercubeCost').textContent = format(player.wowHypercubes) + \"/\" + format(platUpgradeBaseCosts[index].hypercubes) + \" Wow! Hypercubes\";\r\n    document.getElementById('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + \"/\" + format(platUpgradeBaseCosts[index].platonics) + \" Platonic! Cubes\";\r\n    document.getElementById('platonicHepteractCost').textContent = format(player.wowAbyssals) + \"/\" + format(platUpgradeBaseCosts[index].abyssals) + \" Hepteracts of the Abyss\";\r\n    resourceCheck.offerings ?\r\n        document.getElementById('platonicOfferingCost').style.color = \"lime\" :\r\n        document.getElementById('platonicOfferingCost').style.color = \"crimson\";\r\n    resourceCheck.obtainium ?\r\n        document.getElementById('platonicObtainiumCost').style.color = \"lime\" :\r\n        document.getElementById('platonicObtainiumCost').style.color = \"crimson\";\r\n    resourceCheck.cubes ?\r\n        document.getElementById('platonicCubeCost').style.color = \"lime\" :\r\n        document.getElementById('platonicCubeCost').style.color = \"crimson\";\r\n    resourceCheck.tesseracts ?\r\n        document.getElementById('platonicTesseractCost').style.color = \"lime\" :\r\n        document.getElementById('platonicTesseractCost').style.color = \"crimson\";\r\n    resourceCheck.hypercubes ?\r\n        document.getElementById('platonicHypercubeCost').style.color = \"lime\" :\r\n        document.getElementById('platonicHypercubeCost').style.color = \"crimson\";\r\n    resourceCheck.platonics ?\r\n        document.getElementById('platonicPlatonicCost').style.color = \"lime\" :\r\n        document.getElementById('platonicPlatonicCost').style.color = \"crimson\";\r\n    resourceCheck.abyssals ?\r\n        document.getElementById('platonicHepteractCost').style.color = \"lime\" :\r\n        document.getElementById('platonicHepteractCost').style.color = \"crimson\";\r\n    if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\r\n        document.getElementById('platonicUpgradeLevel').style.color = 'cyan';\r\n        resourceCheck.canBuy ?\r\n            (document.getElementById('platonicCanBuy').style.color = \"gold\", document.getElementById('platonicCanBuy').textContent = \"===Affordable! Click to buy!===\") :\r\n            (document.getElementById('platonicCanBuy').style.color = \"crimson\", document.getElementById('platonicCanBuy').textContent = \"===You cannot afford this!===\");\r\n    }\r\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\r\n        document.getElementById('platonicUpgradeLevel').style.color = 'gold';\r\n        document.getElementById('platonicCanBuy').style.color = \"orchid\";\r\n        document.getElementById('platonicCanBuy').textContent = \"===Maxed===\";\r\n    }\r\n};\r\nexport const buyPlatonicUpgrades = (index) => {\r\n    const resourceCheck = checkPlatonicUpgrade(index);\r\n    if (resourceCheck.canBuy) {\r\n        player.platonicUpgrades[index] += 1;\r\n        player.researchPoints -= platUpgradeBaseCosts[index].obtainium;\r\n        player.runeshards -= platUpgradeBaseCosts[index].offerings;\r\n        player.wowCubes -= platUpgradeBaseCosts[index].cubes;\r\n        player.wowTesseracts -= platUpgradeBaseCosts[index].tesseracts;\r\n        player.wowHypercubes -= platUpgradeBaseCosts[index].hypercubes;\r\n        player.wowPlatonicCubes -= platUpgradeBaseCosts[index].platonics;\r\n        player.wowAbyssals -= platUpgradeBaseCosts[index].abyssals;\r\n        Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index]);\r\n    }\r\n    createPlatonicDescription(index);\r\n};\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst RegisteredPlugins = [\r\n    ['Example Plugin', 'Example.ts'],\r\n    ['Synergism Dashboard', 'Dashboard.ts']\r\n];\r\nexport const loadPlugins = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    for (const [name, fileName] of RegisteredPlugins) {\r\n        const file = (yield import(`./${fileName}`));\r\n        if (Object.prototype.toString.call(file.main) === '[object AsyncFunction]') {\r\n            yield file.main();\r\n        }\r\n        else {\r\n            file.main();\r\n        }\r\n        console.log(`Loaded plugin ${name}!`);\r\n    }\r\n});\r\n","import { player, format } from './Synergism';\r\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { Globals as G } from './Variables';\r\nconst getResearchCost = (index, buyAmount = 1, linGrowth = 0) => {\r\n    buyAmount = Math.min(G['researchMaxLevels'][index] - player.researches[index], buyAmount);\r\n    const metaData = calculateSummationNonLinear(player.researches[index], G['researchBaseCosts'][index], player.researchPoints, linGrowth, buyAmount);\r\n    return [metaData[0], metaData[1]];\r\n};\r\nexport const buyResearch = (index, auto = false, linGrowth = 0) => {\r\n    if (player.autoResearchToggle && player.autoResearch > 0 && !auto) {\r\n        const p = player.autoResearch;\r\n        if (player.researches[p] === G['researchMaxLevels'][p]) {\r\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"green\";\r\n        }\r\n        else if (player.researches[p] >= 1) {\r\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"purple\";\r\n        }\r\n        else {\r\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"black\";\r\n        }\r\n    }\r\n    if (!auto && player.autoResearchToggle && player.shopUpgrades.obtainiumAutoLevel >= 1 && player.cubeUpgrades[9] < 1) {\r\n        player.autoResearch = index;\r\n        document.getElementById(\"res\" + index).style.backgroundColor = \"orange\";\r\n    }\r\n    const buyamount = (G['maxbuyresearch'] || auto) ? 1e5 : 1;\r\n    const metaData = getResearchCost(index, buyamount, linGrowth);\r\n    if ((auto || !player.autoResearchToggle) && isResearchUnlocked(index) && !isResearchMaxed(index) && player.researchPoints >= metaData[1]) {\r\n        player.researchPoints -= metaData[1];\r\n        player.researches[index] = metaData[0];\r\n        G['researchfiller2'] = \"Level: \" + player.researches[index] + \"/\" + (G['researchMaxLevels'][index]);\r\n        researchDescriptions(index, auto, linGrowth);\r\n        if (index === 47 && player.unlocks.rrow1 === false) {\r\n            player.unlocks.rrow1 = true;\r\n            revealStuff();\r\n        }\r\n        if (index === 48 && player.unlocks.rrow2 === false) {\r\n            player.unlocks.rrow2 = true;\r\n            revealStuff();\r\n        }\r\n        if (index === 49 && player.unlocks.rrow3 === false) {\r\n            player.unlocks.rrow3 = true;\r\n            revealStuff();\r\n        }\r\n        if (index === 50 && player.unlocks.rrow4 === false) {\r\n            player.unlocks.rrow4 = true;\r\n            revealStuff();\r\n        }\r\n    }\r\n    if (index > 0 && isResearchUnlocked(index)) {\r\n        if (player.researches[index] === (G['researchMaxLevels'][index])) {\r\n            document.getElementById(\"res\" + index).style.backgroundColor = \"green\";\r\n        }\r\n    }\r\n    if (auto && player.cubeUpgrades[9] === 1) {\r\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\r\n        if (isResearchMaxed(player.autoResearch)) {\r\n            player.roombaResearchIndex += 1;\r\n        }\r\n        while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 1) {\r\n            player.roombaResearchIndex += 1;\r\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\r\n        }\r\n        if (isResearchUnlocked(player.autoResearch)) {\r\n            const doc = document.getElementById(\"res\" + G['researchOrderByCost'][player.roombaResearchIndex]);\r\n            if (doc)\r\n                doc.style.backgroundColor = \"orange\";\r\n        }\r\n    }\r\n    calculateRuneLevels();\r\n    calculateAnts();\r\n};\r\nexport const maxRoombaResearchIndex = (p = player) => {\r\n    const base = p.ascensionCount > 0 ? 140 : 125;\r\n    const c11 = p.challengecompletions[11] > 0 ? 15 : 0;\r\n    const c12 = p.challengecompletions[12] > 0 ? 15 : 0;\r\n    const c13 = p.challengecompletions[13] > 0 ? 15 : 0;\r\n    const c14 = p.challengecompletions[14] > 0 ? 15 : 0;\r\n    return base + c11 + c12 + c13 + c14;\r\n};\r\nexport const isResearchUnlocked = (index) => {\r\n    const cumuSum = (sum => (value) => sum += value)(0);\r\n    const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum);\r\n    const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218];\r\n    for (let i = 0; i < indices.length; i++) {\r\n        if (i === 3 && (index === 121 || index === 124 || index === 150)) {\r\n            return player.achievements[chievos[i]] > 0;\r\n        }\r\n        if (index <= indices[i]) {\r\n            return player.achievements[chievos[i]] > 0;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nconst isResearchMaxed = (index) => G['researchMaxLevels'][index] <= player.researches[index];\r\nconst resdesc = [\r\n    \"[1x1] Increase the number of free Accelerators gained by 20% from all sources.\",\r\n    \"[1x2] Increase the number of free Multipliers gained by 20% from all sources.\",\r\n    \"[1x3] Increase the number of free Accelerator Boosts gained by 20% from all sources.\",\r\n    \"[1x4] Increase most rune effects by 10%. (Excludes any recycle chance bonus)\",\r\n    \"[1x5] Multiply the production of all crystal producers by 1e4.\",\r\n    \"[1x6] Gain +5% free accelerators per level.\",\r\n    \"[1x7] Gain +4% free accelerators per level.\",\r\n    \"[1x8] Gain +3% free accelerators per level.\",\r\n    \"[1x9] Gain +2% free accelerators per level.\",\r\n    \"[1x10] Gain +2% free accelerators per level.\",\r\n    \"[1x11] Gain +5% free multipliers per level.\",\r\n    \"[1x12] Gain +4% free multipliers per level.\",\r\n    \"[1x13] Gain +2.5% free multipliers per level.\",\r\n    \"[1x14] Gain +1.5% free multipliers per level.\",\r\n    \"[1x15] Gain +0.5% free multipliers per level.\",\r\n    \"[1x16] Gain +5% free accelerator boosts per level.\",\r\n    \"[1x17] Gain +5% free accelerator boosts per level.\",\r\n    \"[1x18] Gain +2 free accelerator per accelerator boost.\",\r\n    \"[1x19] Gain +2 free accelerator per accelerator boost.\",\r\n    \"[1x20] Gain +3 free accelerator per accelerator boost!\",\r\n    \"[1x21] Most rune effects are increased by 1% per level. (Excludes any recycle chance bonus)\",\r\n    \"[1x22] Each Offering used increases Rune EXP by 0.6 per level.\",\r\n    \"[1x23] Each Offering used increases Rune EXP by another 0.3 per level!\",\r\n    \"[1x24] Prestige and Transcensions base Offering is increased by 0.2 per level.\",\r\n    \"[1x25] Reincarnations base Offering is increased by 0.6 per level.\",\r\n    \"[2x1] Multiply all crystal producer production by 150% per level (multiplicative).\",\r\n    \"[2x2] Multiply all crystal producer production by 150% per level (multiplicative).\",\r\n    \"[2x3] Coin Exponent is increased by 0.08 per level.\",\r\n    \"[2x4] Coin Exponent is increased by another 0.08 per level.\",\r\n    \"[2x5] Coin Exponent is increased by ANOTHER 0.04 per level.\",\r\n    \"[2x6] Want to bake cookies instead? You can go offline for 2 additional hours per level (base 24hr).\",\r\n    \"[2x7] Want to bake a lot of cookies instead? Extend the offline maximum timer by another 2 hours per level!\",\r\n    \"[2x8] Gain +11% more multiplier boosts from Mythos Shards per level.\",\r\n    \"[2x9] Gain another +11% more multiplier boosts from Mythos Shards per level.\",\r\n    \"[2x10] Gain ANOTHER +11% more multiplier boosts from Mythos Shards per level.\",\r\n    \"[2x11] Building power scales 5% faster per level.\",\r\n    \"[2x12] Building power scales 2.5% faster per level.\",\r\n    \"[2x13] Building power scales 2.5% faster per level.\",\r\n    \"[2x14] Building power affects crystal production at a reduced rate.\",\r\n    \"[2x15] Building power affects mythos shard production at a reduced rate.\",\r\n    \"[2x16] Start Reincarnations with automatic A.Boosts unlocked. Note: this research doesn't affect earning achievements.\",\r\n    \"[2x17] Start Reincarnations with automatic Generators unlocked.\",\r\n    \"[2x18] Start Reincarnations with automatic C.Upgrades unlocked.\",\r\n    \"[2x19] Start Reincarnations with automatic D.Upgrades unlocked.\",\r\n    \"[2x20] Start Reincarnations with automatic Diamond production unlocked.\",\r\n    \"[2x21] Unlock the ability to automatically Reincarnate!\",\r\n    \"[2x22] Unlock Reincarnation upgrades 1-5. [Upgrades cost between 1 and 1,000 Particles]\",\r\n    \"[2x23] Unlock Reincarnation upgrades 6-10. [Upgrades cost between 100,000 and 1e22 Particles]\",\r\n    \"[2x24] Unlock Reincarnation upgrades 11-15. [Upgrades cost between 1e30 and 1e60 Particles]\",\r\n    \"[2x25] Unlock Reincarnation upgrades 16-20. [You might want to wait until challenge 8 is doable!]\",\r\n    \"[3x1] Taxation scales 5.0% slower per level. [Up to -50%]\",\r\n    \"[3x2] Taxation scales 2.5% slower per level. [Up to -75%]\",\r\n    \"[3x3] Taxation scales 1.25% slower per level. [Up to -87.5%]\",\r\n    \"[3x4] Taxation scales 0.625% slower per level. [Up to -93.75%]\",\r\n    \"[3x5] Taxation scales 0.3125% slower per level. [Up to -96.875%]\",\r\n    \"[3x6] Building Cost Scale is delayed by 0.5% per level.\",\r\n    \"[3x7] Building Cost Scale is delayed by 0.5% per level.\",\r\n    \"[3x8] Building Cost Scale is delayed by 0.5% per level.\",\r\n    \"[3x9] Building Cost Scale is delayed by 0.5% per level.\",\r\n    \"[3x10] Building Cost Scale is delayed by 0.5% per level.\",\r\n    \"[3x11] Gain +50% of your best obtainium per second AUTOMATICALLY!\",\r\n    \"[3x12] Gain an additional +10% of your best obtainium per second automatically.\",\r\n    \"[3x13] If your Reincarnation lasts at least 2 seconds you gain +1 obtainium per level.\",\r\n    \"[3x14] If your Reincarnation lasts at least 5 seconds you gain +2 obtainium per level.\",\r\n    \"[3x15] Increase the rate of gaining obtainium through reincarnations by 20% per level.\",\r\n    \"[3x16] Increase the maximum number of [No Multipliers] completions by 5 per level.\",\r\n    \"[3x17] Increase the maximum number of [No Accelerators] completions by 5 per level.\",\r\n    \"[3x18] Increase the maximum number of [No Shards] completions by 5 per level.\",\r\n    \"[3x19] Increase the maximum number of [Cost+] completions by 5 per level.\",\r\n    \"[3x20] Increase the maximum number of [Reduced Diamonds] completions by 5 per level.\",\r\n    \"[3x21] Automatically gain completions for Challenge 1, even without running it!\",\r\n    \"[3x22] Automatically gain completions for Challenge 2, even without running it!\",\r\n    \"[3x23] Automatically gain completions for Challenge 3, even without running it!\",\r\n    \"[3x24] Automatically gain completions for Challenge 4, even without running it!\",\r\n    \"[3x25] Automatically gain completions for Challenge 5, even without running it!\",\r\n    \"[4x1] Welcome to the land of expensive researches. Here's +10% obtainium per level to help you out!\",\r\n    \"[4x2] Increase the level cap of Thrift rune by 10 per level, and +2% exp for that rune in particular.\",\r\n    \"[4x3] Increase the level cap of Speed rune by 10 per level, and +2% exp for that rune in particular.\",\r\n    \"[4x4] Increase the level cap of Prism rune by 10 per level, and +2% exp for that rune in particular.\",\r\n    \"[4x5] Increase the level cap of Duplication rune by 10 per level, and +2% exp for that rune in particular.\",\r\n    \"[4x6] You thought the previous researches are expensive? You're going to need this! [+10% Obtainium/level]\",\r\n    \"[4x7] Permanently UNLOCK the Rune of Superior Intellect! [+%Ob / +Ant Speed / +Base Offerings.]\",\r\n    \"[4x8] Taking forever to level up that SI Rune? Here's +5% SI Rune EXP per level.\",\r\n    \"[4x9] Does the new rune kinda suck? Power it up! +0.5% level effectiveness for SI rune per level!\",\r\n    \"[4x10] Gain +0.01% more offerings per level per challenge completion!\",\r\n    \"[4x11] Yeah, going back to basics. +5% Accelerators/Level.\",\r\n    \"[4x12] 0/5 Multipliers SUCK: +5% Multipliers/Level.\",\r\n    \"[4x13] -1/5 A.Boosts SUCK: +5% Accelerator Boosts/Level.\",\r\n    \"[4x14] -5/5 MULTIPLIERS STILL SUCK: +20% Multiplier Boosts/Level\",\r\n    \"[4x15] Runes don't suck at all, but why not make them even BETTER? +1% Rune Effect/level!\",\r\n    \"[4x16] A simple +5% Rune EXP for all runes!\",\r\n    \"[4x17] Another simple +5% Rune EXP for all runes!\",\r\n    \"[4x18] +1 Accelerator Boost per 20 Summative Rune Levels, per level.\",\r\n    \"[4x19] +20 Multiplier per 8 Summative Rune Levels, per level.\",\r\n    \"[4x20] Gain +4 base Offerings from Reincarnations by purchasing this. Math Nerds will love this!\",\r\n    \"[4x21] Ants slow? Add +0.0002 to ant efficiency increase per ant purchased per level.\",\r\n    \"[4x22] Add +4 level to the first six upgradable ants per level!\",\r\n    \"[4x23] Add +4 level to the next five upgradable ants per level!\",\r\n    \"[4x24] Is the Quark Shop too hot to resist? Get +1 Quark per hour from Exporting for each level (Up to +75)!\",\r\n    \"[4x25] Alright, Platonic is off his rocker. I don't expect you to get this but this will give +1 MORE Quark per hour from Exporting (Up to +100)!\",\r\n    \"[5x1] Alright, you're past the big wall. How about adding +.001 to Inceptus Ant efficiency per level?\",\r\n    \"[5x2] Gain +1 bonus level to ALL ants per level! A rainbow attack!\",\r\n    \"[5x3] Pray to Ant God for +5% sacrifice rewards per level!\",\r\n    \"[5x4] You're beginning to feel like an ant god (ant god): +5% sacrifice reward per level!\",\r\n    \"[5x5] Buy this and be able to run the first five challenges infinitely! (Note that requirements scale a LOT faster after 75)\",\r\n    \"[5x6] Engrave your talismans with obtainium to get +0.03 Rune Levels per talisman level per level.\",\r\n    \"[5x7] Refine your talismans with the powder of Obtainium to get +0.03 Rune Levels per talisman level per level again.\",\r\n    \"[5x8] A simple trick makes your base ant ELO increase by 25 per level!\",\r\n    \"[5x9] A more convoluted trick makes your base ant ELO increase by 25 per level again!\",\r\n    \"[5x10] Gain +1% more ELO from ant sources per level because why not?\",\r\n    \"[5x11] Gotta go fast [+10 max Speed Rune Level per level, +1% EXP to that rune]\",\r\n    \"[5x12] Double Trouble [+10 max Duplication Rune level per level, +1% EXP to that rune]\",\r\n    \"[5x13] Newton's Delight [+10 max Prism Rune Level per level, +1% EXP to that rune]\",\r\n    \"[5x14] Five-Finger discounts [+10 max Thrift Rune Level per level, +1% EXP to that rune]\",\r\n    \"[5x15] Scientific Breakthrough [+10 max SI Rune Level per level +1% EXP to that rune]\",\r\n    \"[5x16] Talismans have +0.015 Rune levels per talisman level per level. Levelception!\",\r\n    \"[5x17] Talismans have another +0.015 Rune levels per talisman level per level!\",\r\n    \"[5x18] For 'neutral' talisman effects, increase by +0.06 per level!\",\r\n    \"[5x19] Gain +0.25% Wow! Cubes per level upon Ascension.\",\r\n    \"[5x20] Gain another +0.25% Wow! per level upon Ascension.\",\r\n    \"[5x21] Bend time to your will, making all ticks 2% faster each level.\",\r\n    \"[5x22] Adds +2% ant sacrifice reward per level.\",\r\n    \"[5x23] Adds +40 base ant ELO per level.\",\r\n    \"[5x24] Unlock the automator for Ant Sacrifice! [Good luck buying this.]\",\r\n    \"[5x25] Good luck, buddy. [+1 Export Quark/hour]\",\r\n    \"[6x1] 6 rows? That can't be... You've angered ant god (+1% Accelerators / level)\",\r\n    \"[6x2] Ant God gets angrier (+1% Accelerator Boosts / level)\",\r\n    \"[6x3] Ant God cannot believe your bravery (+1% Multipliers / level)\",\r\n    \"[6x4] Add +1 extra level to Crystal upgrade caps multiplied by Level * Log4(Common Fragments + 1)\",\r\n    \"[6x5] Unlock automation for Fortifying talismans! Activates every 2 real life seconds.\",\r\n    \"[6x6] Turn some Ant Disciples against Ant God, giving +0.5% Rune Effectiveness per level.\",\r\n    \"[6x7] Recruit a couple other ants towards your side as well, giving +2 free ant levels per level.\",\r\n    \"[6x8] Using some coalesced Obtainium, you can make Ant Sacrifice 3% better per level.\",\r\n    \"[6x9 lol] The funny number. Gain a +6.9% bonus to blessing level.\",\r\n    \"[6x10] Unlock automation for Enhancing talismans! Activates every 2 real life seconds.\",\r\n    \"[6x11] It may be time to look back. Makes all ticks 1.5% faster each level.\",\r\n    \"[6x12] Paying off Wow! Industries, they'll sponsor +1% cubes per level towards your Ascension bank.\",\r\n    \"[6x13] When you open Wow! Cubes you will get +0.1% tributes per level!\",\r\n    \"[6x14] Make all Tesseract buildings produce 2% faster per level.\",\r\n    \"[6x15] The first of a Tetralogy, this tome reduces the base requirements of Challenge 10 by dividing it by 1e100M! A must-read!\",\r\n    \"[6x16] The Ant God has infiltrated your mind. Run away from your conscience! (+0.8% Accelerators / level)\",\r\n    \"[6x17] Run... RUN FASTER from your nightmares! (+0.8% Accelerator Boosts / level)\",\r\n    \"[6x18] Your resilience somehow gives you +0.8% Multipliers / level!\",\r\n    \"[6x19] Your obtainium gain is increased by 3 * Log4(Uncommon Fragments + 1) * level%! Why is this? I don't know.\",\r\n    \"[6x20] Your knowledge from the ant war will help you automatically gain Mortuus Est Ant levels.\",\r\n    \"[6x21] Feed your Disciples pure Obtainium to make your runes +0.4% more effective per level.\",\r\n    \"[6x22] Feed your ants their own crumbs to make them Log(Crumbs + 10)x faster!\",\r\n    \"[6x23] Increase your base Ant ELO by 2.5% per level!\",\r\n    \"[6x24] You will gain +0.03% more Offerings per level per level in the Midas Talisman!\",\r\n    \"[6x25] Auto Challenge. Enough said. (Lets you automatically run and complete challenges!)\",\r\n    \"[7x1] A new row, old upgrade. Makes all ticks 1.2% faster each level.\",\r\n    \"[7x2] Wow! Industries sponsors another +0.9% cubes per level towards your Ascension bank!\",\r\n    \"[7x3] Hey, I totally didn't steal this idea. You gain 12 tributes of Wow! Cube tier for every Tesseract opened.\",\r\n    \"[7x4] Make all Tesseract buildings produce 3% faster per level. Hey, isn't that more than the last research tier?\",\r\n    \"[7x5] Tome 2 of 4: How to win over the Ant universe. Another e100M Divider to Challenge 10 Base Requirement on purchase.\",\r\n    \"[7x6] What, again? Alright. +0.6% Accelerators / level.\",\r\n    \"[7x7] Gas, gas, gas. +0.6% Accelerator Boosts / level.\",\r\n    \"[7x8] Dupe DUPE DUPE. +0.6% Multipliers / level.\",\r\n    \"[7x9] Somehow, I can't explain why, you reduce your taxes by 2% multiplicative, based on 3/5 * log10(Rare Fragments)!\",\r\n    \"[7x10] Want a permanent blessing boost? I know you do. A permanent +25% effect to all blessings.\",\r\n    \"[7x11] SIGMA KAPPA: +0.3% Rune Effectiveness each level!\",\r\n    \"[7x12] More exponentiation! +0.0001% more inceptus power per level!\",\r\n    \"[7x13] Ant God's wanting blood: +2% Ant Sacrifice rewards / level\",\r\n    \"[7x14] Spirit power still sucks, so add +8% power per level!\",\r\n    \"[7x15] Gain 2x the Spirit buffs in challenges!\",\r\n    \"[7x16] < T I M E >: +0.9% faster ticks / level \",\r\n    \"[7x17] Because of sponsorships, Wow! Industries is raising cubes gained in Ascension by 0.8% per level.\",\r\n    \"[7x18] Gain +0.08% tributes from cubes per level. You know, you should expect it at this point.\",\r\n    \"[7x19] +4% faster Tesseract Buildings / level. It's GROWING.\",\r\n    \"[7x20] Tome 3 of 4: How to totally ROCK challenge 10. e100m divisor!\",\r\n    \"[7x21] You should know how this goes. +0.4% Accelerator Boosts / level\",\r\n    \"[7x22] Accelerator Boosts += 0.004 * Accelerator Boosts\",\r\n    \"[7x23] A lot of a small +0.4% Multipliers per level\",\r\n    \"[7x24] Epic Fragments boost Blessing power by 10% * Log10(Epic Shards + 1)\",\r\n    \"[7x25] Automatically buy Constant Upgrades, if they are affordable! They also no longer subtract from your constant.\",\r\n    \"[8x1] Row 8 baby! +0.2% Rune Effectiveness / level.\",\r\n    \"[8x2] +Log10(Crumbs)% to ant production per level. Pretty cool buff ain't it?\",\r\n    \"[8x3] +666 Base ELO per level! Spooky number of the devil.\",\r\n    \"[8x4] +0.04% more offerings per level per midas level!\",\r\n    \"[8x5] +1 Export Quark per hour, yet again.\",\r\n    \"[8x6] +0.6% faster ticks / level because why not? You're already the speed of light.\",\r\n    \"[8x7] +0.7% cubes in ascension bank / level, from dividends in Wow! Stock.\",\r\n    \"[8x8] When you open a Hypercube, you also open 100 Tesseracts! (This works with 7x3, if you were curious.)\",\r\n    \"[8x9] +5% faster Tesseract Buildings / level. ASCENDED.\",\r\n    \"[8x10] Tome 4 of 4: You need to prepare for your ascent. e100m divisor!\",\r\n    \"[8x11] Something something +0.2% Accelerators pretty cool!\",\r\n    \"[8x12] Something somewhere, +0.2% Accelerator Boosts!\",\r\n    \"[8x13] You are DUPLICATED. +0.2% Multipliers/level\",\r\n    \"[8x14] Legendary Fragments increase Spirit power by +15% multiplied by Log10(Legendary Fragments + 1)\",\r\n    \"[8x15] Unlock Automations for all 5 of the Tesseract buildings.\",\r\n    \"[8x16] +0.1% Rune Effectiveness / level. Does this even do anything at this point?\",\r\n    \"[8x17] Each purchased level of Mortuus Est also increases Ascension Cube reward by +0.03%\",\r\n    \"[8x18] +1% Ant Sacrifice Reward per level. Singularity HYPE.\",\r\n    \"[8x19] Increases both Spirit AND Blessing power by 2% per level.\",\r\n    \"[8x20] Gain +1 export Quark per level, and increases the max timer to redeem quarks by 12.5 hours each!\",\r\n    \"[8x21] +0.3% faster ticks / level, because you just can't wait to become the singularity.\",\r\n    \"[8x22] +0.6% cubes in Ascension Bank / level. No one knows how. Bank error perhaps.\",\r\n    \"[8x23] +0.06% tributes from cubes / level!. Wow! Cubes really has a lot of manufacturing errors in your favor.\",\r\n    \"[8x24] +10% faster Tesseract Buildings / level. THE ARISEN. WITH THE PRAISE OF THE SINGULARITY.\",\r\n    \"[8x25] Gain the power of a thousand suns! +0.01% Accelerators, A. Boosts, Multipliers, Offerings, and +0.004% Cubes, +0.04 Max Rune level, + Floor(level/400) max Talisman Level, +Floor(level/200) free ants.\"\r\n];\r\nexport const researchDescriptions = (i, auto = false, linGrowth = 0) => {\r\n    const buyAmount = (G['maxbuyresearch'] || auto) ? 100000 : 1;\r\n    const y = resdesc[i - 1];\r\n    let z = \"\";\r\n    const p = \"res\" + i;\r\n    const metaData = getResearchCost(i, buyAmount, linGrowth);\r\n    z = \" Cost: \" + (format(metaData[1], 0, false)) + \" Obtainium [+\" + format(metaData[0] - player.researches[i], 0, true) + \" Levels]\";\r\n    if (player.researches[i] === (G['researchMaxLevels'][i])) {\r\n        document.getElementById(\"researchcost\").style.color = \"Gold\";\r\n        document.getElementById(\"researchinfo3\").style.color = \"plum\";\r\n        z = z + \" || MAXED!\";\r\n    }\r\n    else {\r\n        document.getElementById(\"researchcost\").style.color = \"limegreen\";\r\n        document.getElementById(\"researchinfo3\").style.color = \"white\";\r\n    }\r\n    if (player.researchPoints < G['researchBaseCosts'][i] && player.researches[i] < (G['researchMaxLevels'][i])) {\r\n        document.getElementById(\"researchcost\").style.color = \"crimson\";\r\n    }\r\n    if (!auto && !player.autoResearchToggle) {\r\n        if (player.researches[i] > 0.5 && player.researches[i] < (G['researchMaxLevels'][i])) {\r\n            document.getElementById(p).style.backgroundColor = \"purple\";\r\n        }\r\n    }\r\n    if (player.researches[i] > 0.5 && player.researches[i] >= (G['researchMaxLevels'][i])) {\r\n        document.getElementById(p).style.backgroundColor = \"green\";\r\n    }\r\n    document.getElementById(\"researchinfo2\").textContent = y;\r\n    document.getElementById(\"researchcost\").textContent = z;\r\n    document.getElementById(\"researchinfo3\").textContent = \"Level \" + player.researches[i] + \"/\" + (G['researchMaxLevels'][i]);\r\n};\r\nexport const updateResearchBG = (j) => {\r\n    if (player.researches[j] > G['researchMaxLevels'][j]) {\r\n        player.researchPoints += (player.researches[j] - G['researchMaxLevels'][j]) * G['researchBaseCosts'][j];\r\n        player.researches[j] = G['researchMaxLevels'][j];\r\n    }\r\n    const k = \"res\" + j;\r\n    if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\r\n        document.getElementById(k).style.backgroundColor = \"purple\";\r\n    }\r\n    else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\r\n        document.getElementById(k).style.backgroundColor = \"green\";\r\n    }\r\n    else {\r\n        document.getElementById(k).style.backgroundColor = \"black\";\r\n    }\r\n};\r\n","import { player, clearInt, interval, format } from './Synergism';\r\nimport { calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels, calculateAnts, calculateCubeMultiplier, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO } from './Calculate';\r\nimport { resetofferings } from './Runes';\r\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans';\r\nimport { calculateTesseractBlessings } from './Tesseracts';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { upgradeupdate } from './Upgrades';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nimport { getElementById } from './Utility';\r\nimport { ascensionAchievementCheck } from './Achievements';\r\nimport { buyResearch } from './Research';\r\nimport { calculateHypercubeBlessings } from './Hypercubes';\r\nimport { challengeRequirement } from './Challenges';\r\nimport { Synergism } from './Events';\r\nlet repeatreset;\r\nexport const resetrepeat = (input) => {\r\n    clearInt(repeatreset);\r\n    repeatreset = interval(() => resetdetails(input), 50);\r\n};\r\nexport const resetdetails = (input) => {\r\n    getElementById('resetofferings1').src = \"Pictures/Offering.png\";\r\n    const transcensionChallenge = player.currentChallenge.transcension;\r\n    const reincarnationChallenge = player.currentChallenge.reincarnation;\r\n    const offering = calculateOfferings(input);\r\n    const offeringImage = getElementById(\"resetofferings1\");\r\n    const offeringText = document.getElementById(\"resetofferings2\");\r\n    const currencyImage1 = getElementById(\"resetcurrency1\");\r\n    const resetObtainiumImage = getElementById(\"resetobtainium\");\r\n    const resetobtainiumText = document.getElementById(\"resetobtainium2\");\r\n    const resetInfo = document.getElementById('resetinfo');\r\n    const resetCurrencyGain = document.getElementById(\"resetcurrency2\");\r\n    (input == \"reincarnation\") ?\r\n        (resetObtainiumImage.src = \"Pictures/Obtainium.png\", resetobtainiumText.textContent = format(Math.floor(G['obtainiumGain']))) :\r\n        (resetObtainiumImage.src = \"\", resetobtainiumText.textContent = \"\");\r\n    (input == \"ascensionChallenge\" || input == \"ascension\") ?\r\n        offeringImage.style.display = offeringText.style.display = \"none\" :\r\n        offeringImage.style.display = offeringText.style.display = \"block\";\r\n    switch (input) {\r\n        case \"prestige\":\r\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\r\n                currencyImage1.src = \"Pictures/Diamond.png\";\r\n            }\r\n            resetCurrencyGain.textContent = \"+\" + format(G['prestigePointGain']);\r\n            resetInfo.textContent = \"Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few offerings. Required: \" + format(player.coinsThisPrestige) + \"/1e16 Coins || TIME SPENT: \" + format(player.prestigecounter) + \" seconds.\";\r\n            resetInfo.style.color = \"turquoise\";\r\n            break;\r\n        case \"transcension\":\r\n            if (currencyImage1.src !== \"Pictures/Mythos.png\") {\r\n                currencyImage1.src = \"Pictures/Mythos.png\";\r\n            }\r\n            resetCurrencyGain.textContent = \"+\" + format(G['transcendPointGain']);\r\n            resetInfo.textContent = \"Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: \" + format(player.coinsThisTranscension) + \"/1e100 Coins || TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\";\r\n            resetInfo.style.color = \"orchid\";\r\n            break;\r\n        case \"reincarnation\":\r\n            if (currencyImage1.src !== \"Pictures/Particle.png\") {\r\n                currencyImage1.src = \"Pictures/Particle.png\";\r\n            }\r\n            resetCurrencyGain.textContent = \"+\" + format(G['reincarnationPointGain']);\r\n            resetInfo.textContent = \"Reset ALL previous reset tiers, but gain Particles, Obtainium and Offerings! Required: \" + format(player.transcendShards) + \"/1e300 Mythos Shards || TIME SPENT: \" + format(player.reincarnationcounter) + \" seconds.\";\r\n            resetInfo.style.color = \"limegreen\";\r\n            break;\r\n        case \"acceleratorBoost\":\r\n            if (currencyImage1.src !== \"Pictures/Diamond.png\") {\r\n                currencyImage1.src = \"Pictures/Diamond.png\";\r\n            }\r\n            resetCurrencyGain.textContent = \"-\" + format(player.acceleratorBoostCost);\r\n            resetInfo.textContent = \"Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: \" + format(player.prestigePoints) + \"/\" + format(player.acceleratorBoostCost) + \" Diamonds.\";\r\n            resetInfo.style.color = \"cyan\";\r\n            break;\r\n        case \"transcensionChallenge\":\r\n            currencyImage1.src = \"\";\r\n            resetCurrencyGain.textContent = \"\";\r\n            (transcensionChallenge !== 0) ?\r\n                (resetInfo.style.color = \"aquamarine\", resetInfo.textContent = \"Are you tired of being in your challenge or stuck? Click to leave challenge \" + transcensionChallenge + \". Progress: \" + format(player.coinsThisTranscension) + \"/\" + format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge])) + \" Coins. TIME SPENT: \" + format(player.transcendcounter) + \" seconds.\") :\r\n                (resetInfo.style.color = \"crimson\", resetInfo.textContent = \"You're not in a Transcension Challenge right now. Get in one before you can leave it, duh!\");\r\n            break;\r\n        case \"reincarnationChallenge\":\r\n            let goal;\r\n            let goaldesc;\r\n            (reincarnationChallenge >= 9) ?\r\n                (goal = \"coins\", goaldesc = \" Coins\") :\r\n                (goal = \"transcendShards\", goaldesc = \" Mythos Shards\");\r\n            currencyImage1.src = \"\";\r\n            resetCurrencyGain.textContent = \"\";\r\n            (reincarnationChallenge !== 0) ?\r\n                (resetInfo.style.color = \"silver\", resetInfo.textContent = \"Are you done or tired of being in your challenge? Click to leave challenge \" + reincarnationChallenge + \". Progress: \" + format(player[goal]) + \"/\" + format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge)) + goaldesc + \". TIME SPENT: \" + format(player.reincarnationcounter) + \" Seconds.\") :\r\n                (resetInfo.style.color = \"crimson\", resetInfo.textContent = \"You're not in a Reincarnation Challenge right now. How could you leave what you are not in?\");\r\n            break;\r\n        case \"ascensionChallenge\":\r\n            currencyImage1.src = \"\";\r\n            resetCurrencyGain.textContent = \"\";\r\n            resetInfo.textContent = \"Click this if you're in an Ascension Challenge and want to leave. You get it already!\";\r\n            resetInfo.style.color = \"gold\";\r\n            break;\r\n        case \"ascension\":\r\n            currencyImage1.src = \"\";\r\n            resetCurrencyGain.textContent = \"\";\r\n            resetInfo.textContent = \"Ascend. 10x1 is required! +\" + format(CalcCorruptionStuff()[4], 0, true) + \" Wow! Cubes for doing it! Time: \" + format(player.ascensionCounter, 0, false) + \" Seconds.\";\r\n            resetInfo.style.color = \"gold\";\r\n            break;\r\n    }\r\n    document.getElementById(\"resetofferings2\").textContent = \"+\" + format(offering);\r\n};\r\nexport const updateAutoReset = (i) => {\r\n    if (i === 1) {\r\n        const t = +getElementById(\"prestigeamount\").value;\r\n        if (t >= 0) {\r\n            player.prestigeamount = t;\r\n        }\r\n        else {\r\n            player.prestigeamount = 0;\r\n        }\r\n    }\r\n    else if (i === 2) {\r\n        const u = +getElementById(\"transcendamount\").value;\r\n        if (u >= 0) {\r\n            player.transcendamount = u;\r\n        }\r\n        else {\r\n            player.transcendamount = 0;\r\n        }\r\n    }\r\n    else if (i === 3) {\r\n        const v = +getElementById(\"reincarnationamount\").value;\r\n        if (v >= 0) {\r\n            player.reincarnationamount = v;\r\n        }\r\n        else {\r\n            player.reincarnationamount = 0;\r\n        }\r\n    }\r\n    else if (i === 4) {\r\n        let v = parseFloat(getElementById(\"ascensionAmount\").value);\r\n        v = Math.floor(v);\r\n        if (v >= 1) {\r\n            player.autoAscendThreshold = v;\r\n        }\r\n        else {\r\n            player.autoAscendThreshold = 1;\r\n        }\r\n    }\r\n    else if (i === 5) {\r\n        const v = parseFloat(getElementById(\"autoAntSacrificeAmount\").value);\r\n        player.autoAntSacTimer = Math.max(0, v);\r\n    }\r\n};\r\nexport const updateTesseractAutoBuyAmount = () => {\r\n    let v = parseFloat(getElementById(\"tesseractAmount\").value);\r\n    v = Math.floor(v);\r\n    if (v >= 0) {\r\n        player.tesseractAutoBuyerAmount = v;\r\n    }\r\n    else {\r\n        player.tesseractAutoBuyerAmount = 0;\r\n    }\r\n};\r\nexport const reset = (input, fast = false, from = 'unknown') => {\r\n    const historyEntry = {};\r\n    let historyKind = \"prestige\";\r\n    const historyCategory = (input === 'ascension' || input === 'ascensionChallenge') ? 'ascend' : 'reset';\r\n    let historyUse = from !== \"enterChallenge\" && from !== \"leaveChallenge\";\r\n    historyEntry.offerings = calculateOfferings(input);\r\n    historyEntry.seconds = player.prestigecounter;\r\n    historyEntry.diamonds = G['prestigePointGain'];\r\n    resetofferings(input);\r\n    resetUpgrades(1);\r\n    player.coins = new Decimal(\"102\");\r\n    player.coinsThisPrestige = new Decimal(\"100\");\r\n    player.firstOwnedCoin = 0;\r\n    player.firstGeneratedCoin = new Decimal(\"0\");\r\n    player.firstCostCoin = new Decimal(\"100\");\r\n    player.secondOwnedCoin = 0;\r\n    player.secondGeneratedCoin = new Decimal(\"0\");\r\n    player.secondCostCoin = new Decimal(\"2e3\");\r\n    player.thirdOwnedCoin = 0;\r\n    player.thirdGeneratedCoin = new Decimal(\"0\");\r\n    player.thirdCostCoin = new Decimal(\"4e4\");\r\n    player.fourthOwnedCoin = 0;\r\n    player.fourthGeneratedCoin = new Decimal(\"0\");\r\n    player.fourthCostCoin = new Decimal(\"8e5\");\r\n    player.fifthOwnedCoin = 0;\r\n    player.fifthGeneratedCoin = new Decimal(\"0\");\r\n    player.fifthCostCoin = new Decimal(\"1.6e7\");\r\n    player.firstGeneratedDiamonds = new Decimal(\"0\");\r\n    player.secondGeneratedDiamonds = new Decimal(\"0\");\r\n    player.thirdGeneratedDiamonds = new Decimal(\"0\");\r\n    player.fourthGeneratedDiamonds = new Decimal(\"0\");\r\n    player.fifthGeneratedDiamonds = new Decimal(\"0\");\r\n    player.multiplierCost = new Decimal(\"1e5\");\r\n    player.multiplierBought = 0;\r\n    player.acceleratorCost = new Decimal(\"500\");\r\n    player.acceleratorBought = 0;\r\n    player.prestigeCount += 1;\r\n    player.prestigePoints = player.prestigePoints.add(G['prestigePointGain']);\r\n    player.prestigeShards = new Decimal(\"0\");\r\n    player.prestigenoaccelerator = true;\r\n    player.prestigenomultiplier = true;\r\n    player.prestigenocoinupgrades = true;\r\n    player.unlocks.prestige = true;\r\n    if (player.prestigecounter < player.fastestprestige) {\r\n        player.fastestprestige = player.prestigecounter;\r\n    }\r\n    G['prestigePointGain'] = new Decimal('0');\r\n    player.prestigecounter = 0;\r\n    G['autoResetTimers'].prestige = 0;\r\n    if (input === \"transcension\" || input === \"transcensionChallenge\" || input == \"reincarnation\" || input == \"reincarnationChallenge\"\r\n        || input === \"ascension\" || input === \"ascensionChallenge\") {\r\n        historyKind = \"transcend\";\r\n        historyEntry.seconds = player.transcendcounter;\r\n        historyEntry.mythos = G['transcendPointGain'];\r\n        delete historyEntry.diamonds;\r\n        resetUpgrades(2);\r\n        player.coinsThisTranscension = new Decimal(\"100\");\r\n        player.firstOwnedDiamonds = 0;\r\n        player.firstCostDiamonds = new Decimal(\"100\");\r\n        player.secondOwnedDiamonds = 0;\r\n        player.secondCostDiamonds = new Decimal(\"1e5\");\r\n        player.thirdOwnedDiamonds = 0;\r\n        player.thirdCostDiamonds = new Decimal(\"1e15\");\r\n        player.fourthOwnedDiamonds = 0;\r\n        player.fourthCostDiamonds = new Decimal(\"1e40\");\r\n        player.fifthOwnedDiamonds = 0;\r\n        player.fifthCostDiamonds = new Decimal(\"1e100\");\r\n        player.firstGeneratedMythos = new Decimal(\"0\");\r\n        player.secondGeneratedMythos = new Decimal(\"0\");\r\n        player.thirdGeneratedMythos = new Decimal(\"0\");\r\n        player.fourthGeneratedMythos = new Decimal(\"0\");\r\n        player.fifthGeneratedMythos = new Decimal(\"0\");\r\n        player.acceleratorBoostBought = 0;\r\n        player.acceleratorBoostCost = new Decimal(\"1e3\");\r\n        player.transcendCount += 1;\r\n        player.prestigePoints = new Decimal(\"0\");\r\n        player.transcendPoints = player.transcendPoints.add(G['transcendPointGain']);\r\n        player.transcendShards = new Decimal(\"0\");\r\n        player.transcendnocoinupgrades = true;\r\n        player.transcendnocoinorprestigeupgrades = true;\r\n        player.transcendnoaccelerator = true;\r\n        player.transcendnomultiplier = true;\r\n        G['transcendPointGain'] = new Decimal('0');\r\n        if (player.achievements[78] > 0.5) {\r\n            player.firstOwnedDiamonds += 1;\r\n        }\r\n        if (player.achievements[85] > 0.5) {\r\n            player.secondOwnedDiamonds += 1;\r\n        }\r\n        if (player.achievements[92] > 0.5) {\r\n            player.thirdOwnedDiamonds += 1;\r\n        }\r\n        if (player.achievements[99] > 0.5) {\r\n            player.fourthOwnedDiamonds += 1;\r\n        }\r\n        if (player.achievements[106] > 0.5) {\r\n            player.fifthOwnedDiamonds += 1;\r\n        }\r\n        if (player.achievements[4] > 0.5) {\r\n            player.upgrades[81] = 1;\r\n        }\r\n        if (player.achievements[11] > 0.5) {\r\n            player.upgrades[82] = 1;\r\n        }\r\n        if (player.achievements[18] > 0.5) {\r\n            player.upgrades[83] = 1;\r\n        }\r\n        if (player.achievements[25] > 0.5) {\r\n            player.upgrades[84] = 1;\r\n        }\r\n        if (player.achievements[32] > 0.5) {\r\n            player.upgrades[85] = 1;\r\n        }\r\n        if (player.achievements[80] > 0.5) {\r\n            player.upgrades[87] = 1;\r\n        }\r\n        if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\r\n            player.fastesttranscend = player.transcendcounter;\r\n        }\r\n        player.transcendcounter = 0;\r\n        G['autoResetTimers'].transcension = 0;\r\n    }\r\n    if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge') {\r\n        if (player.ascensionCount > 0 && player.achievements[183] < 1) {\r\n            ascensionAchievementCheck(1);\r\n        }\r\n        historyKind = \"reincarnate\";\r\n        historyEntry.obtainium = G['obtainiumGain'];\r\n        historyEntry.particles = G['reincarnationPointGain'];\r\n        historyEntry.seconds = player.reincarnationcounter;\r\n        delete historyEntry.mythos;\r\n        if (!historyUse) {\r\n            if (G['reincarnationPointGain'].gte(player.reincarnationPoints.div(10))) {\r\n                historyUse = true;\r\n            }\r\n        }\r\n        player.researchPoints += Math.floor(G['obtainiumGain']);\r\n        const opscheck = G['obtainiumGain'] / (1 + player.reincarnationcounter);\r\n        if (opscheck > player.obtainiumpersecond) {\r\n            player.obtainiumpersecond = opscheck;\r\n        }\r\n        player.currentChallenge.transcension = 0;\r\n        resetUpgrades(3);\r\n        player.coinsThisReincarnation = new Decimal(\"100\");\r\n        player.firstOwnedMythos = 0;\r\n        player.firstCostMythos = new Decimal(\"1\");\r\n        player.secondOwnedMythos = 0;\r\n        player.secondCostMythos = new Decimal(\"1e2\");\r\n        player.thirdOwnedMythos = 0;\r\n        player.thirdCostMythos = new Decimal(\"1e4\");\r\n        player.fourthOwnedMythos = 0;\r\n        player.fourthCostMythos = new Decimal(\"1e8\");\r\n        player.fifthOwnedMythos = 0;\r\n        player.fifthCostMythos = new Decimal(\"1e16\");\r\n        player.firstGeneratedParticles = new Decimal(\"0\");\r\n        player.secondGeneratedParticles = new Decimal(\"0\");\r\n        player.thirdGeneratedParticles = new Decimal(\"0\");\r\n        player.fourthGeneratedParticles = new Decimal(\"0\");\r\n        player.fifthGeneratedParticles = new Decimal(\"0\");\r\n        player.reincarnationCount += 1;\r\n        player.transcendPoints = new Decimal(\"0\");\r\n        player.reincarnationPoints = player.reincarnationPoints.add(G['reincarnationPointGain']);\r\n        if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\r\n            player.prestigePoints = player.prestigePoints.add(G['reincarnationPointGain']);\r\n        }\r\n        player.reincarnationShards = new Decimal(\"0\");\r\n        player.challengecompletions[1] = 0;\r\n        player.challengecompletions[2] = 0;\r\n        player.challengecompletions[3] = 0;\r\n        player.challengecompletions[4] = 0;\r\n        player.challengecompletions[5] = 0;\r\n        G['reincarnationPointGain'] = new Decimal('0');\r\n        if (player.shopUpgrades.instantChallengeBought && player.currentChallenge.reincarnation === 0) {\r\n            player.challengecompletions[1] = player.highestchallengecompletions[1];\r\n            player.challengecompletions[2] = player.highestchallengecompletions[2];\r\n            player.challengecompletions[3] = player.highestchallengecompletions[3];\r\n            player.challengecompletions[4] = player.highestchallengecompletions[4];\r\n            player.challengecompletions[5] = player.highestchallengecompletions[5];\r\n        }\r\n        player.reincarnatenocoinupgrades = true;\r\n        player.reincarnatenocoinorprestigeupgrades = true;\r\n        player.reincarnatenocoinprestigeortranscendupgrades = true;\r\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true;\r\n        player.reincarnatenoaccelerator = true;\r\n        player.reincarnatenomultiplier = true;\r\n        if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\r\n            player.fastestreincarnate = player.reincarnationcounter;\r\n        }\r\n        calculateCubeBlessings();\r\n        player.reincarnationcounter = 0;\r\n        G['autoResetTimers'].reincarnation = 0;\r\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\r\n            const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\r\n            buyResearch(player.autoResearch, true, linGrowth);\r\n        }\r\n        calculateRuneLevels();\r\n        calculateAnts();\r\n    }\r\n    if (input === 'ascension' || input === 'ascensionChallenge') {\r\n        const metaData = CalcCorruptionStuff();\r\n        ascensionAchievementCheck(3, metaData[3]);\r\n        historyKind = \"ascend\";\r\n        historyUse = player.challengecompletions[10] > 0;\r\n        delete historyEntry.offerings;\r\n        delete historyEntry.obtainium;\r\n        delete historyEntry.particles;\r\n        historyEntry.seconds = player.ascensionCounter;\r\n        historyEntry.c10Completions = player.challengecompletions[10];\r\n        historyEntry.usedCorruptions = player.usedCorruptions.slice(0);\r\n        historyEntry.corruptionScore = metaData[3];\r\n        historyEntry.wowCubes = metaData[4];\r\n        historyEntry.wowTesseracts = metaData[5];\r\n        historyEntry.wowHypercubes = metaData[6];\r\n        historyEntry.wowPlatonicCubes = metaData[7];\r\n        if (player.currentChallenge.ascension && from !== \"enterChallenge\") {\r\n            historyEntry.currentChallenge = player.currentChallenge.ascension;\r\n        }\r\n        player.currentChallenge.transcension = 0;\r\n        player.currentChallenge.reincarnation = 0;\r\n        player.autoChallengeIndex = 1;\r\n        G['autoChallengeTimerIncrement'] = 0;\r\n        resetResearches();\r\n        resetAnts();\r\n        resetTalismans();\r\n        player.reincarnationPoints = new Decimal(\"0\");\r\n        player.reincarnationShards = new Decimal(\"0\");\r\n        player.obtainiumpersecond = 0;\r\n        player.maxobtainiumpersecond = 0;\r\n        player.offeringpersecond = 0;\r\n        player.antSacrificePoints = 0;\r\n        player.antSacrificeTimer = 0;\r\n        player.antSacrificeTimerReal = 0;\r\n        player.antUpgrades[12 - 1] = 0;\r\n        for (let j = 61; j <= 80; j++) {\r\n            player.upgrades[j] = 0;\r\n        }\r\n        for (let j = 94; j <= 100; j++) {\r\n            player.upgrades[j] = 0;\r\n        }\r\n        player.firstOwnedParticles = 0;\r\n        player.secondOwnedParticles = 0;\r\n        player.thirdOwnedParticles = 0;\r\n        player.fourthOwnedParticles = 0;\r\n        player.fifthOwnedParticles = 0;\r\n        player.firstCostParticles = new Decimal(\"1\");\r\n        player.secondCostParticles = new Decimal(\"100\");\r\n        player.thirdCostParticles = new Decimal(\"1e4\");\r\n        player.fourthCostParticles = new Decimal(\"1e8\");\r\n        player.fifthCostParticles = new Decimal(\"1e16\");\r\n        player.runeexp = [0, 0, 0, 0, 0];\r\n        player.runelevels = [0, 0, 0, 0, 0];\r\n        player.runeshards = 0;\r\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\r\n        player.runelevels[0] = 3 * player.cubeUpgrades[26];\r\n        player.runelevels[1] = 3 * player.cubeUpgrades[26];\r\n        player.runelevels[2] = 3 * player.cubeUpgrades[26];\r\n        player.runelevels[3] = 3 * player.cubeUpgrades[26];\r\n        player.runelevels[4] = 3 * player.cubeUpgrades[26];\r\n        if (player.cubeUpgrades[27] === 1) {\r\n            player.firstOwnedParticles = 1;\r\n            player.secondOwnedParticles = 1;\r\n            player.thirdOwnedParticles = 1;\r\n            player.fourthOwnedParticles = 1;\r\n            player.fifthOwnedParticles = 1;\r\n        }\r\n        if (player.cubeUpgrades[48] > 0) {\r\n            player.firstOwnedAnts += 1;\r\n        }\r\n        if (player.challengecompletions[10] > 0) {\r\n            let ascCount = 1;\r\n            if (player.ascensionCounter >= 10) {\r\n                if (player.achievements[188] > 0) {\r\n                    ascCount += 99;\r\n                }\r\n                ascCount *= 1 + (Math.min(24 * 3600, player.ascensionCounter) / 10 - 1) * 0.2 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223]);\r\n            }\r\n            if (player.achievements[187] > 0 && metaData[3] > 1e8) {\r\n                ascCount *= (Math.log(metaData[3]) / Math.log(10) - 1);\r\n            }\r\n            ascCount *= G['challenge15Rewards'].ascensions;\r\n            ascCount = Math.floor(ascCount);\r\n            player.ascensionCount += ascCount;\r\n            player.wowCubes += metaData[4];\r\n            player.wowTesseracts += metaData[5];\r\n            player.wowHypercubes += metaData[6];\r\n            player.wowPlatonicCubes += metaData[7];\r\n        }\r\n        for (let j = 1; j <= 10; j++) {\r\n            player.challengecompletions[j] = 0;\r\n            player.highestchallengecompletions[j] = 0;\r\n        }\r\n        player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49];\r\n        player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49];\r\n        player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49];\r\n        player.roombaResearchIndex = 0;\r\n        player.autoResearch = 1;\r\n        for (let j = 1; j <= (200); j++) {\r\n            const k = \"res\" + j;\r\n            if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\r\n                document.getElementById(k).style.backgroundColor = \"purple\";\r\n            }\r\n            else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\r\n                document.getElementById(k).style.backgroundColor = \"green\";\r\n            }\r\n            else {\r\n                document.getElementById(k).style.backgroundColor = \"black\";\r\n            }\r\n        }\r\n        calculateAnts();\r\n        calculateRuneLevels();\r\n        calculateAntSacrificeELO();\r\n        calculateTalismanEffects();\r\n        calculateObtainium();\r\n        ascensionAchievementCheck(1);\r\n        player.cubesThisAscension.challenges = 0;\r\n        player.cubesThisAscension.reincarnation = 0;\r\n        player.cubesThisAscension.maxCubesPerSec = 0;\r\n        player.cubesThisAscension.tesseracts = 0;\r\n        player.cubesThisAscension.hypercubes = 0;\r\n        player.cubesThisAscension.ascension = 100 / 100 * calculateCubeMultiplier() * 250;\r\n        player.ascensionCounter = 0;\r\n        updateTalismanInventory();\r\n        updateTalismanAppearance(1);\r\n        updateTalismanAppearance(2);\r\n        updateTalismanAppearance(3);\r\n        updateTalismanAppearance(4);\r\n        updateTalismanAppearance(5);\r\n        updateTalismanAppearance(6);\r\n        updateTalismanAppearance(7);\r\n        calculateCubeBlessings();\r\n        calculateTesseractBlessings();\r\n        calculateHypercubeBlessings();\r\n        if (player.cubeUpgrades[4] === 1) {\r\n            player.upgrades[94] = 1;\r\n            player.upgrades[95] = 1;\r\n            player.upgrades[96] = 1;\r\n            player.upgrades[97] = 1;\r\n            player.upgrades[98] = 1;\r\n        }\r\n        if (player.cubeUpgrades[5] === 1) {\r\n            player.upgrades[99] = 1;\r\n        }\r\n        if (player.cubeUpgrades[6] === 1) {\r\n            player.upgrades[100] = 1;\r\n        }\r\n        for (let j = 61; j <= 80; j++) {\r\n            document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\r\n        }\r\n        for (let j = 94; j <= 100; j++) {\r\n            if (player.upgrades[j] === 0) {\r\n                document.getElementById(\"upg\" + j).style.backgroundColor = \"black\";\r\n            }\r\n        }\r\n        player.usedCorruptions = Array.from(player.prototypeCorruptions);\r\n    }\r\n    player.unlocks.prestige = true;\r\n    if (input == \"transcension\" || input == \"transcensionChallenge\") {\r\n        player.unlocks.transcend = true;\r\n    }\r\n    if (input == \"reincarnation\" || input == \"reincarnationChallenge\") {\r\n        player.unlocks.reincarnate = true;\r\n    }\r\n    if (!fast) {\r\n        revealStuff();\r\n    }\r\n    if (historyUse) {\r\n        Synergism.emit('historyAdd', historyCategory, historyKind, historyEntry);\r\n    }\r\n};\r\nconst resetUpgrades = (i) => {\r\n    if (i > 2.5) {\r\n        for (let i = 41; i < 61; i++) {\r\n            if (i !== 46) {\r\n                player.upgrades[i] = 0;\r\n            }\r\n        }\r\n        if (player.researches[41] === 0) {\r\n            player.upgrades[46] = 0;\r\n        }\r\n        player.keepUpgrades.autobuyers = false;\r\n        if (player.researches[41] < 0.5) {\r\n            player.upgrades[88] = 0;\r\n        }\r\n        if (player.achievements[50] === 0) {\r\n            player.upgrades[89] = 0;\r\n        }\r\n        if (player.researches[42] < 0.5) {\r\n            player.upgrades[90] = 0;\r\n            player.keepUpgrades.generators = false;\r\n        }\r\n        if (player.researches[43] < 0.5) {\r\n            player.upgrades[91] = 0;\r\n            player.keepUpgrades.coinUpgrades = false;\r\n        }\r\n        if (player.researches[44] < 0.5) {\r\n            player.upgrades[92] = 0;\r\n            player.keepUpgrades.prestigeUpgrades = false;\r\n        }\r\n        if (player.researches[45] < 0.5) {\r\n            player.upgrades[93] = 0;\r\n            player.resourceGenerators.diamonds = false;\r\n        }\r\n        player.upgrades[116] = 0;\r\n        player.upgrades[117] = 0;\r\n        player.upgrades[118] = 0;\r\n        player.upgrades[119] = 0;\r\n        player.upgrades[120] = 0;\r\n    }\r\n    for (let j = 1; j <= 20; j++) {\r\n        player.upgrades[j] = 0;\r\n    }\r\n    for (let j = 121, k = 106; j <= 125; j++, k++) {\r\n        player.upgrades[j] = 0;\r\n        player.upgrades[k] = 0;\r\n    }\r\n    if (i > 1.5) {\r\n        if (player.achievements[4] < 0.5) {\r\n            player.upgrades[81] = 0;\r\n        }\r\n        if (player.achievements[11] < 0.5) {\r\n            player.upgrades[82] = 0;\r\n        }\r\n        if (player.achievements[18] < 0.5) {\r\n            player.upgrades[83] = 0;\r\n        }\r\n        if (player.achievements[25] < 0.5) {\r\n            player.upgrades[84] = 0;\r\n        }\r\n        if (player.achievements[32] < 0.5) {\r\n            player.upgrades[85] = 0;\r\n        }\r\n        if (player.achievements[87] < 0.5) {\r\n            player.upgrades[86] = 0;\r\n        }\r\n        if (player.achievements[80] < 0.5) {\r\n            player.upgrades[87] = 0;\r\n        }\r\n        player.upgrades[101] = 0;\r\n        player.upgrades[102] = 0;\r\n        player.upgrades[103] = 0;\r\n        player.upgrades[104] = 0;\r\n        player.upgrades[105] = 0;\r\n    }\r\n    if (i > 1.5) {\r\n        for (let k = 21; k < 41; k++) {\r\n            player.upgrades[k] = 0;\r\n        }\r\n        player.upgrades[111] = 0;\r\n        player.upgrades[112] = 0;\r\n        player.upgrades[113] = 0;\r\n        player.upgrades[114] = 0;\r\n        player.upgrades[115] = 0;\r\n    }\r\n    if (i > 1.5) {\r\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\r\n        player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000];\r\n        let m = 0;\r\n        m += Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100;\r\n        if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n            m += 10;\r\n        }\r\n        player.crystalUpgrades = [m, m, m, m, m, m, m, m];\r\n    }\r\n    for (let x = 1; x <= 125; x++) {\r\n        upgradeupdate(x, true);\r\n    }\r\n    if (player.achievements[87] > 0.5) {\r\n        player.upgrades[86] = 1;\r\n    }\r\n};\r\nexport const resetAnts = () => {\r\n    player.firstOwnedAnts = 0;\r\n    if (player.cubeUpgrades[48] > 0) {\r\n        player.firstOwnedAnts = 1;\r\n    }\r\n    player.secondOwnedAnts = 0;\r\n    player.thirdOwnedAnts = 0;\r\n    player.fourthOwnedAnts = 0;\r\n    player.fifthOwnedAnts = 0;\r\n    player.sixthOwnedAnts = 0;\r\n    player.seventhOwnedAnts = 0;\r\n    player.eighthOwnedAnts = 0;\r\n    player.firstGeneratedAnts = new Decimal(\"0\");\r\n    player.secondGeneratedAnts = new Decimal(\"0\");\r\n    player.thirdGeneratedAnts = new Decimal(\"0\");\r\n    player.fourthGeneratedAnts = new Decimal(\"0\");\r\n    player.fifthGeneratedAnts = new Decimal(\"0\");\r\n    player.sixthGeneratedAnts = new Decimal(\"0\");\r\n    player.seventhGeneratedAnts = new Decimal(\"0\");\r\n    player.eighthGeneratedAnts = new Decimal(\"0\");\r\n    player.firstCostAnts = new Decimal(\"1e800\");\r\n    player.secondCostAnts = new Decimal(\"3\");\r\n    player.thirdCostAnts = new Decimal(\"100\");\r\n    player.fourthCostAnts = new Decimal(\"1e4\");\r\n    player.fifthCostAnts = new Decimal(\"1e12\");\r\n    player.sixthCostAnts = new Decimal(\"1e36\");\r\n    player.seventhCostAnts = new Decimal(\"1e100\");\r\n    player.eighthCostAnts = new Decimal(\"1e300\");\r\n    const ant12 = player.antUpgrades[12 - 1];\r\n    player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12];\r\n    player.antPoints = new Decimal(\"1\");\r\n    if (player.currentChallenge.ascension === 12) {\r\n        player.antPoints = new Decimal(\"7\");\r\n    }\r\n    calculateAnts();\r\n    calculateRuneLevels();\r\n};\r\nconst resetResearches = () => {\r\n    player.researchPoints = 0;\r\n    const destroy = [\r\n        6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\r\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\r\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\r\n        76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\r\n        101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\r\n        126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149,\r\n        151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174,\r\n        176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199\r\n    ];\r\n    for (const item of destroy) {\r\n        player.researches[item] = 0;\r\n    }\r\n};\r\nconst resetTalismans = () => {\r\n    player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\r\n    player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\r\n    player.talismanShards = 0;\r\n    player.commonFragments = 0;\r\n    player.uncommonFragments = 0;\r\n    player.rareFragments = 0;\r\n    player.epicFragments = 0;\r\n    player.legendaryFragments = 0;\r\n    player.mythicalFragments = 0;\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels } from './Calculate';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nexport const displayRuneInformation = (i, updatelevelup = true) => {\r\n    const m = G['effectiveLevelMult'];\r\n    const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400));\r\n    const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1]);\r\n    if (i === 1) {\r\n        if (updatelevelup) {\r\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/4)^1.25 Accelerator, +0.25% Accelerators per level. +1 Accelerator Boost every 20 levels!\";\r\n        }\r\n        document.getElementById(\"runeshowpower1\").textContent = \"Speed Rune Bonus: \" + \"+\" + format(Math.floor(Math.pow(G['rune1level'] * m / 4, 1.25))) + \" Accelerators, +\" + format((G['rune1level'] / 4 * m), 2, true) + \"% Accelerators, +\" + format(Math.floor(G['rune1level'] / 20 * m)) + \" Accelerator Boosts.\";\r\n    }\r\n    if (i === 2) {\r\n        if (updatelevelup) {\r\n            document.getElementById(\"runeshowlevelup\").textContent = \"+(Level/10) Multipliers every 10th level, +0.25% Multipliers per level. Tax growth is delayed more for each level!\";\r\n        }\r\n        document.getElementById(\"runeshowpower2\").textContent = \"Duplication Rune Bonus: \" + \"+\" + format(Math.floor(G['rune2level'] * m / 10) * Math.floor(1 + G['rune2level'] * m / 10) / 2) + \" Multipliers, +\" + format(m * G['rune2level'] / 4, 1, true) + \"% Multipliers, -\" + (99.9 * (1 - Math.pow(6, -(G['rune2level'] * m) / 1000))).toPrecision(4) + \"% Tax Growth.\";\r\n    }\r\n    if (i === 3) {\r\n        if (updatelevelup) {\r\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + (Level/2)^2 * 2^(Level/2) / 256)x Crystal Production. +1 free level for each Crystal upgrade per 16 levels!\";\r\n        }\r\n        document.getElementById(\"runeshowpower3\").textContent = \"Prism Rune Bonus: \" + \"All Crystal Producer production multiplied by \" + format(Decimal.pow(G['rune3level'] * m / 2, 2).times(Decimal.pow(2, G['rune3level'] * m / 2 - 8)).add(1), 3) + \", gain +\" + format(Math.floor(G['rune3level'] / 16 * m)) + \" free crystal levels.\";\r\n    }\r\n    if (i === 4) {\r\n        if (updatelevelup) {\r\n            document.getElementById(\"runeshowlevelup\").textContent = \"+0.125% building cost growth delay per level, +0.0625% offering recycle chance per level [MAX: 25%], 2^((1000 - Level)/1100) Tax growth multiplier AFTER level 400\";\r\n        }\r\n        document.getElementById(\"runeshowpower4\").textContent = \"Thrift Rune Bonus: \" + \"Delay all producer cost increases by \" + (G['rune4level'] / 8 * m).toPrecision(3) + \"%. Offering recycle chance: +\" + Math.min(25, G['rune4level'] / 16) + \"%. -\" + (99 * (1 - Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100)))).toPrecision(4) + \"% Tax Growth\";\r\n    }\r\n    if (i === 5) {\r\n        if (updatelevelup) {\r\n            document.getElementById(\"runeshowlevelup\").textContent = \"~(1 + level/200)x Obtainium, (1 + Level^2/2500)x Ant Hatch Speed, +0.005 base offerings for each tier per level\";\r\n        }\r\n        document.getElementById(\"runeshowpower5\").textContent = \"S. Intellect Rune Bonus: \" + \"Obtainium gain x\" + format((1 + G['rune5level'] / 200 * m * SILevelMult), 2, true) + \". Ant Speed: x\" + format(1 + Math.pow(G['rune5level'] * m * SILevelMult, 2) / 2500) + \". Base Offerings: +\" + format((G['rune5level'] * m * SILevelMult * 0.005), 3, true);\r\n    }\r\n    if (updatelevelup) {\r\n        const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount);\r\n        let offerings = 0;\r\n        let j = 0;\r\n        while (offerings < player.runeshards && j < arr.length) {\r\n            offerings += arr[j];\r\n            j++;\r\n        }\r\n        const check = player.offeringbuyamount === j && offerings <= player.runeshards;\r\n        const s = player.offeringbuyamount === 1 ? \"once\" : `${check ? j : Math.max(j - 1, 0)} times`;\r\n        document.getElementById(\"runeDisplayInfo\").textContent = `+${format(amountPerOffering)} EXP per offering. ${format(offerings)} Offerings to level up ${s}.`;\r\n    }\r\n};\r\nexport const resetofferings = (input) => {\r\n    player.runeshards += calculateOfferings(input);\r\n};\r\nexport const redeemShards = (runeIndexPlusOne, auto = false, cubeUpgraded = 0) => {\r\n    const runeIndex = runeIndexPlusOne - 1;\r\n    const unlockedRune = [\r\n        true,\r\n        player.achievements[38] > 0.5,\r\n        player.achievements[44] > 0.5,\r\n        player.achievements[102] > 0.5,\r\n        player.researches[82] > 0.5\r\n    ];\r\n    let levelsToAdd = player.offeringbuyamount;\r\n    if (auto) {\r\n        levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAutoLevel);\r\n    }\r\n    if (auto && cubeUpgraded > 0) {\r\n        levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1));\r\n    }\r\n    let levelsAdded = 0;\r\n    if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune[runeIndex]) {\r\n        let all = 0;\r\n        const maxLevel = calculateMaxRunes(runeIndex + 1);\r\n        const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd);\r\n        let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0));\r\n        if (cubeUpgraded > 0) {\r\n            toSpendTotal = Math.min(player.runeshards, cubeUpgraded);\r\n        }\r\n        const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true);\r\n        const a = player.upgrades[71] / 25;\r\n        const add = fact[0] - a * player.runelevels[runeIndex];\r\n        const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\r\n        while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\r\n            const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex];\r\n            const expPerOff = (add + a * player.runelevels[runeIndex]) * mult;\r\n            let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff));\r\n            if (toSpend === undefined || isNaN(toSpend)) {\r\n                toSpend = toSpendTotal;\r\n            }\r\n            toSpendTotal -= toSpend;\r\n            player.runeshards -= toSpend;\r\n            player.runeexp[runeIndex] += toSpend * expPerOff;\r\n            all += toSpend;\r\n            while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\r\n                player.runelevels[runeIndex] += 1;\r\n                levelsAdded++;\r\n            }\r\n        }\r\n        for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\r\n            if (unlockedRune[runeToUpdate]) {\r\n                if (runeToUpdate !== runeIndex) {\r\n                    player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true);\r\n                }\r\n                while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\r\n                    player.runelevels[runeToUpdate] += 1;\r\n                }\r\n            }\r\n        }\r\n        displayRuneInformation(runeIndexPlusOne);\r\n    }\r\n    calculateRuneLevels();\r\n    if (player.runeshards < 0 || player.runeshards === undefined) {\r\n        player.runeshards = 0;\r\n    }\r\n};\r\nexport const calculateOfferingsToLevelXTimes = (runeIndex, runeLevel, levels) => {\r\n    let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex];\r\n    const maxLevel = calculateMaxRunes(runeIndex + 1);\r\n    const arr = [];\r\n    let sum = 0;\r\n    const off = player.runeshards;\r\n    let levelsAdded = 0;\r\n    const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true);\r\n    const a = player.upgrades[71] / 25;\r\n    const add = fact[0] - a * runeLevel;\r\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1);\r\n    while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\r\n        const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult;\r\n        const amount = Math.ceil(exp / expPerOff);\r\n        sum += amount;\r\n        arr.push(amount);\r\n        levelsAdded += 1;\r\n        exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\r\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1);\r\n    }\r\n    return arr;\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings } from './Calculate';\r\nexport const loadStatisticsAccelerator = () => {\r\n    document.getElementById(\"sA1\").textContent = \"+\" + format(G['freeUpgradeAccelerator'], 0, false);\r\n    document.getElementById(\"sA2\").textContent = \"+\" + format(G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]), 0, false);\r\n    document.getElementById(\"sA3\").textContent = \"+\" + format(Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 10, 1.1)), 0, true);\r\n    document.getElementById(\"sA4\").textContent = \"x\" + format(1 + G['rune1level'] * 1 / 200 * G['effectiveLevelMult'], 3, true);\r\n    document.getElementById(\"sA5\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true);\r\n    document.getElementById(\"sA6\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true);\r\n    document.getElementById(\"sA7\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[1], 3, true);\r\n    document.getElementById(\"sA8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true);\r\n    document.getElementById(\"sA9\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[86], 3, true);\r\n    document.getElementById(\"sA10\").textContent = \"x\" + format(1.25, 3, true);\r\n    document.getElementById(\"sA11\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\r\n    document.getElementById(\"sA12\").textContent = format(G['freeAccelerator'], 0, true);\r\n};\r\nexport const loadStatisticsMultiplier = () => {\r\n    document.getElementById(\"sM1\").textContent = \"+\" + format(G['freeUpgradeMultiplier'], 0, true);\r\n    document.getElementById(\"sM2\").textContent = \"+\" + format(Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) * Math.floor(10 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100, 0, true);\r\n    document.getElementById(\"sM3\").textContent = \"x\" + format(1 + G['rune2level'] / 200 * G['effectiveLevelMult'], 3, true);\r\n    document.getElementById(\"sM4\").textContent = \"x\" + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true);\r\n    document.getElementById(\"sM5\").textContent = \"x\" + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true);\r\n    document.getElementById(\"sM6\").textContent = \"x\" + format(1 + 1 / 5 * player.researches[2], 3, true);\r\n    document.getElementById(\"sM7\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true);\r\n    document.getElementById(\"sM8\").textContent = \"x\" + format(1 + 1 / 20 * player.researches[87], 3, true);\r\n    document.getElementById(\"sM9\").textContent = \"x\" + format(calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39), 2, true);\r\n    document.getElementById(\"sM10\").textContent = \"x\" + format(G['cubeBonusMultiplier'][2], 3, true);\r\n    document.getElementById(\"sM11\").textContent = \"x\" + format(1.25, 3, true);\r\n    document.getElementById(\"sM12\").textContent = \"^\" + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))), 3, true);\r\n    document.getElementById(\"sM13\").textContent = format(G['freeMultiplier'], 3, true);\r\n};\r\nexport const loadStatisticsCubeMultipliers = () => {\r\n    const arr = calculateCubeMultiplier(false);\r\n    const map = {\r\n        1: { acc: 4, desc: \"Ascension Timer Multiplier\" },\r\n        2: { acc: 2, desc: \"Season pass:\" },\r\n        3: { acc: 4, desc: \"Research 5x19:\" },\r\n        4: { acc: 4, desc: \"Research 5x20:\" },\r\n        5: { acc: 2, desc: \"Cube upgrade 1x1:\" },\r\n        6: { acc: 2, desc: \"Cube upgrade 2x1:\" },\r\n        7: { acc: 2, desc: \"Cube upgrade 3x1:\" },\r\n        8: { acc: 2, desc: \"Cube upgrade 4x1:\" },\r\n        9: { acc: 2, desc: \"Cube upgrade 5x1:\" },\r\n        10: { acc: 2, desc: \"Research 6x12:\" },\r\n        11: { acc: 3, desc: \"Research 7x2:\" },\r\n        12: { acc: 3, desc: \"Research 7x17:\" },\r\n        13: { acc: 3, desc: \"Research 8x7:\" },\r\n        14: { acc: 3, desc: \"Research 8x22:\" },\r\n        15: { acc: 3, desc: \"Ascension Count Achievement:\" },\r\n        16: { acc: 4, desc: \"Bought Mortuus Est ants (R8x17):\" },\r\n        17: { acc: 4, desc: \"Duplication Spirit Power:\" },\r\n        18: { acc: 5, desc: \"Research 8x25:\" },\r\n        19: { acc: 4, desc: \"Constant upgrade 10:\" },\r\n        20: { acc: 2, desc: \"Cube upgrade 3x10:\" },\r\n        21: { acc: 2, desc: \"Number Achievement 4 Bonus:\" },\r\n        22: { acc: 2, desc: \"Number Achievement 6 Bonus:\" },\r\n        23: { acc: 2, desc: \"Challenge 11 Ach:\" },\r\n        24: { acc: 4, desc: \"ASCENDED Achievement:\" },\r\n        25: { acc: 2, desc: \"Sun & Moon Achievements:\" },\r\n        26: { acc: 4, desc: \"Cube Shards:\" },\r\n        27: { acc: 4, desc: \"Challenge 15 Reward:\" },\r\n    };\r\n    for (let i = 0; i < arr.length; i++) {\r\n        const statCMi = document.getElementById(`statCM${i + 1}`);\r\n        statCMi.childNodes[0].textContent = map[i + 1].desc;\r\n        document.getElementById(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\r\n    }\r\n    document.getElementById(\"sCMT\").textContent = `x${format(calculateCubeMultiplier(), 3)}`;\r\n};\r\nexport const loadStatisticsOfferingMultipliers = () => {\r\n    const arr = calculateOfferings(\"prestige\", false);\r\n    const map = {\r\n        1: { acc: 3, desc: \"Alchemy Achievement 5:\" },\r\n        2: { acc: 3, desc: \"Alchemy Achievement 6:\" },\r\n        3: { acc: 3, desc: \"Alchemy Achievement 7:\" },\r\n        4: { acc: 3, desc: \"Diamond Upgrade 4x3:\" },\r\n        5: { acc: 3, desc: \"Particle Upgrade 3x5:\" },\r\n        6: { acc: 3, desc: \"Auto Offering Shop Upgrade:\" },\r\n        7: { acc: 3, desc: \"Offering EX Shop Upgrade:\" },\r\n        8: { acc: 3, desc: \"Cash Grab Shop Upgrade:\" },\r\n        9: { acc: 3, desc: \"Research 4x10:\" },\r\n        10: { acc: 3, desc: \"Sacrificium Formicidae:\" },\r\n        11: { acc: 3, desc: \"Plutus Cube Tribute:\" },\r\n        12: { acc: 3, desc: \"Constant Upgrade 3:\" },\r\n        13: { acc: 3, desc: \"Research 6x24,8x4:\" },\r\n        14: { acc: 3, desc: \"Challenge 12:\" },\r\n        15: { acc: 3, desc: \"Research 8x25:\" },\r\n        16: { acc: 3, desc: \"Ascension Count Achievement:\" },\r\n        17: { acc: 3, desc: \"Sun and Moon Achievements:\" },\r\n        18: { acc: 3, desc: \"Cube Upgrade 5x6:\" },\r\n        19: { acc: 3, desc: \"Cube Upgrade 5x10:\" },\r\n        20: { acc: 3, desc: \"Platonic ALPHA:\" },\r\n        21: { acc: 3, desc: \"Platonic BETA:\" },\r\n        22: { acc: 3, desc: \"Platonic OMEGA:\" },\r\n        23: { acc: 3, desc: \"Challenge 15:\" },\r\n    };\r\n    for (let i = 0; i < arr.length; i++) {\r\n        const statOffi = document.getElementById(`statOff${i + 1}`);\r\n        statOffi.childNodes[0].textContent = map[i + 1].desc;\r\n        document.getElementById(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\r\n    }\r\n    document.getElementById(\"sOffT\").textContent = `x${format(calculateOfferings(\"prestige\", true, true), 3)}`;\r\n};\r\nexport const c15RewardUpdate = () => {\r\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10];\r\n    const keys = Object.keys(G['challenge15Rewards']);\r\n    const e = player.challenge15Exponent;\r\n    for (const obj in G['challenge15Rewards']) {\r\n        G['challenge15Rewards'][obj] = 1;\r\n    }\r\n    if (e >= exponentRequirements[0]) {\r\n        G['challenge15Rewards'][keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[1]) {\r\n        G['challenge15Rewards'][keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[2]) {\r\n        G['challenge15Rewards'][keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[3]) {\r\n        G['challenge15Rewards'][keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2));\r\n    }\r\n    if (e >= exponentRequirements[4]) {\r\n        G['challenge15Rewards'][keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\r\n    }\r\n    if (e >= exponentRequirements[5]) {\r\n        G['challenge15Rewards'][keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75);\r\n    }\r\n    if (e >= exponentRequirements[6]) {\r\n        G['challenge15Rewards'][keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[7]) {\r\n        G['challenge15Rewards'][keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[8]) {\r\n        G['challenge15Rewards'][keys[8]] = 1 + Math.pow(e / 2e4, 1.5);\r\n    }\r\n    if (e >= exponentRequirements[9]) {\r\n        G['challenge15Rewards'][keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[10]) {\r\n        G['challenge15Rewards'][keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[11]) {\r\n        G['challenge15Rewards'][keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\r\n    }\r\n    if (e >= exponentRequirements[12]) {\r\n        G['challenge15Rewards'][keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2));\r\n    }\r\n    if (e >= exponentRequirements[13]) {\r\n        G['challenge15Rewards'][keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4);\r\n    }\r\n    if (e >= exponentRequirements[14]) {\r\n        G['challenge15Rewards'][keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[15]) {\r\n        G['challenge15Rewards'][keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[16]) {\r\n        G['challenge15Rewards'][keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[17]) {\r\n        G['challenge15Rewards'][keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[18]) {\r\n        G['challenge15Rewards'][keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4);\r\n    }\r\n    if (e >= exponentRequirements[19]) {\r\n        G['challenge15Rewards'][keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3);\r\n    }\r\n    if (e >= exponentRequirements[20]) {\r\n        G['challenge15Rewards'][keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2);\r\n    }\r\n    if (e >= exponentRequirements[21]) {\r\n        G['challenge15Rewards'][keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4);\r\n    }\r\n    if (e >= exponentRequirements[22]) {\r\n        G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 4);\r\n    }\r\n    updateDisplayC15Rewards();\r\n};\r\nconst updateDisplayC15Rewards = () => {\r\n    document.getElementById('c15Reward0Num').textContent = format(player.challenge15Exponent, 0, true);\r\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10];\r\n    const values = Object.values(G['challenge15Rewards']);\r\n    let keepExponent = 'None';\r\n    for (let i = 0; i < exponentRequirements.length; i++) {\r\n        if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]) {\r\n            keepExponent = exponentRequirements[i];\r\n        }\r\n        if (player.challenge15Exponent >= exponentRequirements[i]) {\r\n            document.getElementById('c15Reward' + (i + 1) + 'Num').textContent = format(100 * values[i] - 100, 2, true);\r\n        }\r\n        document.getElementById('c15Reward' + (i + 1)).style.display = (player.challenge15Exponent >= exponentRequirements[i]) ? 'block' : 'none';\r\n        document.getElementById('c15RewardList').textContent = typeof keepExponent === 'string'\r\n            ? 'You have unlocked all reward types from Challenge 15!'\r\n            : 'Next reward type requires ' + format(keepExponent, 0, true) + ' exponent.';\r\n    }\r\n};\r\n","import { player, format, formatTimeShort } from './Synergism';\r\nimport Decimal from 'break_infinity.js';\r\nimport { isDecimal } from './Utility';\r\nimport { antSacrificePointsToMultiplier } from './Ants';\r\nimport { Synergism } from './Events';\r\nconst formatPlain = (str) => format(str);\r\nconst formatDecimalString = (str) => format(new Decimal(str));\r\nconst conditionalFormatPerSecond = (numOrStr, data) => {\r\n    if (typeof (numOrStr) === \"number\" && player.historyShowPerSecond) {\r\n        if (numOrStr === 0) {\r\n            return \"0.000/s\";\r\n        }\r\n        return format(numOrStr / ((data.seconds && data.seconds > 0) ? data.seconds : 1), 3, true) + \"/s\";\r\n    }\r\n    return format(numOrStr);\r\n};\r\nconst historyGains = {\r\n    offerings: {\r\n        img: \"Pictures/Offering.png\",\r\n        formatter: formatPlain,\r\n        imgTitle: \"Offerings\"\r\n    },\r\n    obtainium: {\r\n        img: \"Pictures/Obtainium.png\",\r\n        formatter: formatPlain,\r\n        imgTitle: \"Obtainium\"\r\n    },\r\n    antMulti: {\r\n        img: \"Pictures/AntSacrifice.png\",\r\n        formatter: formatPlain,\r\n        imgTitle: \"Ant Multiplier gains\"\r\n    },\r\n    particles: {\r\n        img: \"Pictures/Particle.png\",\r\n        formatter: (s) => extractStringExponent(formatDecimalString(s)),\r\n        imgTitle: \"Particles\"\r\n    },\r\n    diamonds: {\r\n        img: \"Pictures/Diamond.png\",\r\n        formatter: (s) => extractStringExponent(formatDecimalString(s)),\r\n        imgTitle: \"Diamonds\"\r\n    },\r\n    mythos: {\r\n        img: \"Pictures/Mythos.png\",\r\n        formatter: (s) => extractStringExponent(formatDecimalString(s)),\r\n        imgTitle: \"Mythos\"\r\n    },\r\n    wowTesseracts: {\r\n        img: \"Pictures/WowTessaract.png\",\r\n        formatter: conditionalFormatPerSecond,\r\n        imgTitle: \"Wow! Tesseracts\"\r\n    },\r\n    wowHypercubes: {\r\n        img: \"Pictures/WowHypercube.png\",\r\n        formatter: conditionalFormatPerSecond,\r\n        imgTitle: \"Wow! Hypercubes\",\r\n        onlyif: () => player.challengecompletions[13] > 0\r\n    },\r\n    wowCubes: {\r\n        img: \"Pictures/WowCube.png\",\r\n        formatter: conditionalFormatPerSecond,\r\n        imgTitle: \"Wow! Cubes\"\r\n    },\r\n    wowPlatonicCubes: {\r\n        img: \"Pictures/Platonic Cube.png\",\r\n        formatter: conditionalFormatPerSecond,\r\n        imgTitle: \"Platonic Cubes\",\r\n        onlyif: () => player.challengecompletions[14] > 0,\r\n    },\r\n};\r\nconst historyGainsOrder = [\r\n    \"offerings\", \"obtainium\",\r\n    \"antMulti\",\r\n    \"particles\", \"diamonds\", \"mythos\",\r\n    \"wowCubes\", \"wowTesseracts\", \"wowHypercubes\", \"wowPlatonicCubes\",\r\n];\r\nconst historyKinds = {\r\n    \"antsacrifice\": { img: \"Pictures/AntSacrifice.png\" },\r\n    \"prestige\": { img: \"Pictures/Transparent Pics/Prestige.png\" },\r\n    \"transcend\": { img: \"Pictures/Transparent Pics/Transcend.png\" },\r\n    \"reincarnate\": { img: \"Pictures/Transparent Pics/Reincarnate.png\" },\r\n    \"ascend\": { img: \"Pictures/questionable.png\" },\r\n};\r\nconst resetHistoryTableMapping = {\r\n    \"ants\": \"historyAntsTable\",\r\n    \"reset\": \"historyResetTable\",\r\n    \"ascend\": \"historyAscendTable\",\r\n};\r\nconst resetHistoryCorruptionImages = [\r\n    \"Pictures/Divisiveness Level 7.png\",\r\n    \"Pictures/Maladaption Lvl 7.png\",\r\n    \"Pictures/Laziness Lvl 7.png\",\r\n    \"Pictures/Hyperchallenged Lvl 7.png\",\r\n    \"Pictures/Scientific Illiteracy Lvl 7.png\",\r\n    \"Pictures/Deflation Lvl 7.png\",\r\n    \"Pictures/Extinction Lvl 7.png\",\r\n    \"Pictures/Drought Lvl 7.png\",\r\n    \"Pictures/Financial Collapse Lvl 7.png\"\r\n];\r\nconst resetHistoryCorruptionTitles = [\r\n    \"Divisiveness [Multipliers]\",\r\n    \"Maladaption [Accelerators]\",\r\n    \"Spacial Dilation [Time]\",\r\n    \"Hyperchallenged [Challenge Requirements]\",\r\n    \"Scientific Illiteracy [Obtainium]\",\r\n    \"Market Deflation [Diamonds]\",\r\n    \"Extinction [Ants]\",\r\n    \"Drought [Offering EXP]\",\r\n    \"Financial Recession [Coins]\"\r\n];\r\nconst extractStringExponent = (str) => {\r\n    let m = null;\r\n    return (m = str.match(/e\\+?(.+)/)) !== null ? `e${m[1]}` : str;\r\n};\r\nconst resetHistoryAdd = (category, kind, data) => {\r\n    data.date = Date.now();\r\n    data.kind = kind;\r\n    if (player.history[category] === undefined) {\r\n        player.history[category] = [];\r\n    }\r\n    while (player.history[category].length > (player.historyCountMax - 1)) {\r\n        player.history[category].shift();\r\n    }\r\n    for (const k in data) {\r\n        if (isDecimal(data[k])) {\r\n            data[k] = data[k].toString();\r\n        }\r\n    }\r\n    player.history[category].push(data);\r\n    resetHistoryPushNewRow(category, data);\r\n};\r\nSynergism.on('historyAdd', resetHistoryAdd);\r\nconst resetHistoryPushNewRow = (category, data) => {\r\n    const row = resetHistoryRenderRow(category, data);\r\n    const table = document.getElementById(resetHistoryTableMapping[category]);\r\n    const tbody = table.querySelector(\"tbody\");\r\n    tbody.insertBefore(row, tbody.childNodes[0]);\r\n    while (tbody.childNodes.length > player.historyCountMax) {\r\n        tbody.removeChild(tbody.lastChild);\r\n    }\r\n};\r\nconst resetHistoryRenderRow = (_category, data) => {\r\n    let colsUsed = 1;\r\n    const row = document.createElement(\"tr\");\r\n    let rowContentHtml = \"\";\r\n    const kindMeta = historyKinds[data.kind];\r\n    const localDate = new Date(data.date).toLocaleString();\r\n    rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img src=\"${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`;\r\n    const gains = [];\r\n    for (let gainIdx = 0; gainIdx < historyGainsOrder.length; ++gainIdx) {\r\n        const showing = historyGainsOrder[gainIdx];\r\n        if (data.hasOwnProperty(showing)) {\r\n            const gainInfo = historyGains[showing];\r\n            if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\r\n                continue;\r\n            }\r\n            const formatter = gainInfo.formatter || (() => { });\r\n            const str = `<img src=\"${gainInfo.img}\" title=\"${gainInfo.imgTitle || ''}\">${formatter(data[showing], data)}`;\r\n            gains.push(str);\r\n        }\r\n    }\r\n    const extra = [];\r\n    if (data.kind === \"antsacrifice\") {\r\n        const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore);\r\n        const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter);\r\n        const diff = newMulti - oldMulti;\r\n        extra.push(`<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`, `<span title=\"+${formatDecimalString(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/GalacticCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalString(data.crumbs))}</span>`, `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/Transparent Pics/ELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`);\r\n    }\r\n    else if (data.kind === \"ascend\") {\r\n        extra.push(`<img src=\"Pictures/Transparent Pics/ChallengeTen.png\" title=\"Challenge 10 completions\">${data.c10Completions}`);\r\n        const corruptions = resetHistoryFormatCorruptions(data);\r\n        if (corruptions !== null) {\r\n            extra.push(corruptions[0]);\r\n            extra.push(corruptions[1]);\r\n        }\r\n    }\r\n    colsUsed += gains.length;\r\n    rowContentHtml += gains.reduce((acc, value) => {\r\n        return `${acc}<td class=\"history-gain\">${value}</td>`;\r\n    }, \"\");\r\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${6 - colsUsed}\"></td>`;\r\n    rowContentHtml += extra.reduce((acc, value) => {\r\n        return `${acc}<td class=\"history-extra\">${value}</td>`;\r\n    }, \"\");\r\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`;\r\n    row.innerHTML = rowContentHtml;\r\n    return row;\r\n};\r\nconst resetHistoryRenderFullTable = (categoryToRender, targetTable) => {\r\n    const tbody = targetTable.querySelector(\"tbody\");\r\n    tbody.innerHTML = \"\";\r\n    if (!player.history[categoryToRender]) {\r\n        return;\r\n    }\r\n    if (player.history[categoryToRender].length > 0) {\r\n        for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\r\n            const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i]);\r\n            tbody.appendChild(row);\r\n        }\r\n    }\r\n};\r\nexport const resetHistoryClearAll = () => {\r\n    Object.keys(player.history).forEach(key => {\r\n        if (Array.isArray(player.history[key])) {\r\n            delete player.history[key];\r\n        }\r\n    });\r\n    resetHistoryRenderAllTables();\r\n};\r\nexport const resetHistoryRenderAllTables = () => {\r\n    Object.keys(resetHistoryTableMapping).forEach(key => resetHistoryRenderFullTable(key, document.getElementById(resetHistoryTableMapping[key])));\r\n};\r\nexport const resetHistoryTogglePerSecond = () => {\r\n    player.historyShowPerSecond = !player.historyShowPerSecond;\r\n    resetHistoryRenderAllTables();\r\n    const button = document.getElementById(\"historyTogglePerSecondButton\");\r\n    button.textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\r\n    button.style.borderColor = player.historyShowPerSecond ? \"green\" : \"red\";\r\n};\r\nconst resetHistoryFormatCorruptions = (data) => {\r\n    let score = \"Score: \" + format(data.corruptionScore, 0, true);\r\n    let corruptions = \"\";\r\n    for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\r\n        const corruptionIdx = i + 1;\r\n        if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\r\n            corruptions += ` <img src=\"${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`;\r\n        }\r\n    }\r\n    if (data.currentChallenge !== undefined) {\r\n        score += ` / C${data.currentChallenge}`;\r\n    }\r\n    return [score, corruptions];\r\n};\r\n","import { player } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { Synergism } from './Events';\r\nexport const openPlatonic = (value, max = false) => {\r\n    const toSpend = max\r\n        ? player.wowPlatonicCubes\r\n        : Math.min(player.wowPlatonicCubes, value);\r\n    player.wowPlatonicCubes -= toSpend;\r\n    let toSpendModulo = toSpend % 40000;\r\n    const toSpendDiv40000 = Math.floor(toSpend / 40000);\r\n    const blessings = {\r\n        cubes: { weight: 13200, pdf: (x) => 0 <= x && x <= 33.000 },\r\n        tesseracts: { weight: 13200, pdf: (x) => 33.000 < x && x <= 66.000 },\r\n        hypercubes: { weight: 13200, pdf: (x) => 66.000 < x && x <= 99.000 },\r\n        platonics: { weight: 396, pdf: (x) => 99.000 < x && x <= 99.990 },\r\n        hypercubeBonus: { weight: 1, pdf: (x) => 99.990 < x && x <= 99.9925 },\r\n        taxes: { weight: 1, pdf: (x) => 99.9925 < x && x <= 99.995 },\r\n        scoreBonus: { weight: 1, pdf: (x) => 99.995 < x && x <= 99.9975 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 99.9975 < x && x <= 100 },\r\n    };\r\n    for (const key in player.platonicBlessings) {\r\n        player.platonicBlessings[key] += blessings[key].weight * toSpendDiv40000;\r\n    }\r\n    const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed'];\r\n    for (let i = 0; i < RNGesus.length; i++) {\r\n        const num = Math.random();\r\n        if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\r\n            player.platonicBlessings[RNGesus[i]] += 1;\r\n            toSpendModulo -= 1;\r\n        }\r\n    }\r\n    const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)];\r\n    const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'];\r\n    for (let i = 0; i < commonDrops.length; i++) {\r\n        player.platonicBlessings[commonDrops[i]] += gainValues[i];\r\n        toSpendModulo -= gainValues[i];\r\n    }\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n        const num = 100 * Math.random();\r\n        for (const key in player.platonicBlessings) {\r\n            if (blessings[key].pdf(num))\r\n                player.platonicBlessings[key] += 1;\r\n        }\r\n    }\r\n    calculatePlatonicBlessings();\r\n    Synergism.emit('openPlatonic', toSpend);\r\n};\r\nexport const calculatePlatonicBlessings = () => {\r\n    const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed];\r\n    const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\r\n    for (let i = 0; i < platonicArray.length; i++) {\r\n        let power = 1;\r\n        let mult = 1;\r\n        if (platonicArray[i] >= DRThreshold[i]) {\r\n            power = G['platonicDRPower'][i];\r\n            mult *= Math.pow(DRThreshold[i], (1 - G['platonicDRPower'][i]));\r\n        }\r\n        G['platonicBonusMultiplier'][i] = 1 + mult * G['platonicCubeBase'][i] * Math.pow(platonicArray[i], power);\r\n    }\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { revealStuff } from './UpdateHTML';\r\nimport { calculateTimeAcceleration } from './Calculate';\r\nconst offerconsumedesc = \"Instantly gain 2 real life hours of Offerings, based on your all time best Offerings/sec and speed acceleration!\";\r\nconst obtainiumconsumedesc = \"Instantly gain 2 real life hours of Obtainium, based on your all time best Obtainium/sec and speed acceleration!\";\r\nconst offertimerdesc = \"Gain +4% more offerings from all sources!\";\r\nconst offerautodesc = \"Automatically pour Offerings into a rune. 1st level unlocks feature, and each level increases Offering gain by 2%. Every second, 2^(Level) levels worth of offerings are spent. [First Level Cannot be refunded!]\";\r\nconst obtainiumtimerdesc = \"Gain +4% more obtainium from all sources!\";\r\nconst obtainiumautodesc = \"Automatically pour Obtainium into a research. 1st level unlocks feature, and each level increases Obtainium gain by 2%. Every reincarnation, dump all Obtainium into research until maxed. [First Level Cannot be Refunded!]\";\r\nconst instantchallengedesc = \"T and R challenges don't cause resets if retry is enabled and gain up to 10 completions per tick. Addtionally, instantly gain T challenge completions up to highest completed when exiting R challenges. [Cannot be Refunded!]\";\r\nconst cashgrabdesc = \"This is a cash grab but it gives a couple cool stats. +1% production per level to Offerings and Obtainium.\";\r\nconst antspeeddesc = \"Each level gives a 1.125x speed multiplier to all Ant tiers' production! Short and simple.\";\r\nconst shoptalismandesc = \"Permanently unlock a Shop talisman! [Warning: you can't refund this and this is VERY expensive to level. Be sure you want to buy it!]\";\r\nconst challengeExtDesc = \"Using some amazing trick, you manage to increase your Reincarnation Challenge cap by 2 for each level! [Cannot be Refunded!]\";\r\nconst challenge10TomeDesc = \"The extended cut: This fifth forgotten tome gives you an additional 20 Million exponent reduction on the Challenge 10 requirement per level.\";\r\nconst seasonPassDesc = \"Wow! Cubes is giving you a deal: Buy this totally fair Season Pass and gain +1.5% cubes and tesseracts per level when you ascend!\";\r\nconst cubeToQuarkDesc = \"Instead of a daily cap of 25 Quarks by opening Wow! Cubes, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\";\r\nconst tesseractToQuarkDesc = \"Instead of a daily cap of 25 Quarks by opening Wow! Tesseracts, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\";\r\nconst hypercubeToQuarkDesc = \"Instead of a daily cap of 25 Quarks by opening Wow! Hypercubes, how about 100? This adds 75 to the daily cap! [Cannot be Refunded!]\";\r\nexport const shopDescriptions = (input) => {\r\n    const rofl = document.getElementById(\"quarkdescription\");\r\n    const lmao = document.getElementById(\"quarkcost\");\r\n    const lol = document.getElementById(\"quarkeffect\");\r\n    switch (input) {\r\n        case \"offeringPotion\":\r\n            rofl.textContent = offerconsumedesc;\r\n            lmao.textContent = \"Cost: \" + G['shopBaseCosts'].offerPotion + \" Quarks.\";\r\n            lol.textContent = \"Gain \" + format((7200 * player.offeringpersecond * calculateTimeAcceleration()), 0, true) + \" Offerings.\";\r\n            break;\r\n        case \"obtainiumPotion\":\r\n            rofl.textContent = obtainiumconsumedesc;\r\n            lmao.textContent = \"Cost: \" + G['shopBaseCosts'].obtainiumPotion + \" Quarks.\";\r\n            lol.textContent = \"Gain \" + format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration()), 0, true) + \" Obtainium.\";\r\n            break;\r\n        case \"offeringEX\":\r\n            rofl.textContent = offertimerdesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].offerTimer + 10 * player.shopUpgrades.offeringTimerLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.offeringTimerLevel, 2, true) + \"% more Offerings!\";\r\n            break;\r\n        case \"offeringAuto\":\r\n            rofl.textContent = offerautodesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].offerAuto + 10 * player.shopUpgrades.offeringAutoLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Per 10 seconds, pour \" + format(Math.pow(2, 1 + player.shopUpgrades.offeringAutoLevel)) + \" Offerings. +\" + format(2 * player.shopUpgrades.offeringAutoLevel, 2) + \"% Offerings.\";\r\n            break;\r\n        case \"obtainiumEX\":\r\n            rofl.textContent = obtainiumtimerdesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].obtainiumTimer + 10 * player.shopUpgrades.obtainiumTimerLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(4 * player.shopUpgrades.obtainiumTimerLevel, 2, true) + \"% more Obtainium!\";\r\n            break;\r\n        case \"obtainiumAuto\":\r\n            rofl.textContent = obtainiumautodesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].obtainiumAuto + 10 * player.shopUpgrades.obtainiumAutoLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Try to upgrade research each reincarnation, and gain \" + format(player.shopUpgrades.obtainiumAutoLevel * 2, 2) + \"% more Obtainium.\";\r\n            break;\r\n        case \"instantChallenge\":\r\n            rofl.textContent = instantchallengedesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].instantChallenge) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\r\n            break;\r\n        case \"antSpeed\":\r\n            rofl.textContent = antspeeddesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].antSpeed + 25 * player.shopUpgrades.antSpeedLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: All Ants' Speed x\" + format(Math.pow(1.125, player.shopUpgrades.antSpeedLevel), 2);\r\n            break;\r\n        case \"cashGrab\":\r\n            rofl.textContent = cashgrabdesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].cashGrab + 40 * player.shopUpgrades.cashGrabLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: You will gain \" + format(player.shopUpgrades.cashGrabLevel, 2) + \"% more Obtainium and Offerings!\";\r\n            break;\r\n        case \"shopTalisman\":\r\n            rofl.textContent = shoptalismandesc;\r\n            lmao.textContent = \"Cost: \" + (1500) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\r\n            break;\r\n        case \"seasonPass\":\r\n            rofl.textContent = seasonPassDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].seasonPass + 75 * player.shopUpgrades.seasonPassLevel) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Ascensions give \" + format(3 / 2 * player.shopUpgrades.seasonPassLevel) + \"% more Wow! Cubes and Tesseracts.\";\r\n            break;\r\n        case \"challengeExtension\":\r\n            rofl.textContent = challengeExtDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].challengeExtension + 250 * player.shopUpgrades.challengeExtension) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Reincarnation Challenges may be completed an additional \" + format(2 * player.shopUpgrades.challengeExtension) + \" times.\";\r\n            break;\r\n        case \"challengeTome\":\r\n            rofl.textContent = challenge10TomeDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].challenge10Upgrade + 250 * player.shopUpgrades.challenge10Tomes) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Challenge 10 Exponent Requirement reduced by \" + format(20 * player.shopUpgrades.challenge10Tomes) + \" Million.\";\r\n            break;\r\n        case \"cubeToQuark\":\r\n            rofl.textContent = cubeToQuarkDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].cubeToQuark) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\r\n            break;\r\n        case \"tesseractToQuark\":\r\n            rofl.textContent = tesseractToQuarkDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].tesseractToQuark) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\r\n            break;\r\n        case \"hypercubeToQuark\":\r\n            rofl.textContent = hypercubeToQuarkDesc;\r\n            lmao.textContent = \"Cost: \" + (G['shopBaseCosts'].hypercubeToQuark) + \" Quarks.\";\r\n            lol.textContent = \"CURRENT Effect: Even in a premium shop it's kinda obvious, right?\";\r\n            break;\r\n    }\r\n};\r\nexport const buyShopUpgrades = (input) => {\r\n    let p = true;\r\n    if (G['shopConfirmation']) {\r\n        p = confirm(\"Are you sure of your purchase?\");\r\n    }\r\n    if (p) {\r\n        switch (input) {\r\n            case \"offeringPotion\":\r\n                if (player.worlds >= G['shopBaseCosts'].offerPotion) {\r\n                    player.worlds -= 100;\r\n                    player.shopUpgrades.offeringPotion += 1;\r\n                }\r\n                break;\r\n            case \"obtainiumPotion\":\r\n                if (player.worlds >= G['shopBaseCosts'].obtainiumPotion) {\r\n                    player.worlds -= 100;\r\n                    player.shopUpgrades.obtainiumPotion += 1;\r\n                }\r\n                break;\r\n            case \"offeringEX\":\r\n                if (player.worlds >= (G['shopBaseCosts'].offerTimer + 10 * player.shopUpgrades.offeringTimerLevel) && player.shopUpgrades.offeringTimerLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].offerTimer + 10 * player.shopUpgrades.offeringTimerLevel);\r\n                    player.shopUpgrades.offeringTimerLevel += 1;\r\n                }\r\n                break;\r\n            case \"offeringAuto\":\r\n                if (player.worlds >= (G['shopBaseCosts'].offerAuto + 10 * player.shopUpgrades.offeringAutoLevel) && player.shopUpgrades.offeringAutoLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].offerAuto + 10 * player.shopUpgrades.offeringAutoLevel);\r\n                    player.shopUpgrades.offeringAutoLevel += 1;\r\n                }\r\n                break;\r\n            case \"obtainiumEX\":\r\n                if (player.worlds >= (G['shopBaseCosts'].obtainiumTimer + 10 * player.shopUpgrades.obtainiumTimerLevel) && player.shopUpgrades.obtainiumTimerLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].obtainiumTimer + 10 * player.shopUpgrades.obtainiumTimerLevel);\r\n                    player.shopUpgrades.obtainiumTimerLevel += 1;\r\n                }\r\n                break;\r\n            case \"obtainiumAuto\":\r\n                if (player.worlds >= (G['shopBaseCosts'].obtainiumAuto + 10 * player.shopUpgrades.obtainiumAutoLevel) && player.shopUpgrades.obtainiumAutoLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].obtainiumAuto + 10 * player.shopUpgrades.obtainiumAutoLevel);\r\n                    player.shopUpgrades.obtainiumAutoLevel += 1;\r\n                }\r\n                break;\r\n            case \"instantChallenge\":\r\n                if (player.worlds >= G['shopBaseCosts'].instantChallenge && !player.shopUpgrades.instantChallengeBought) {\r\n                    player.worlds -= 300;\r\n                    player.shopUpgrades.instantChallengeBought = true;\r\n                }\r\n                break;\r\n            case \"antSpeed\":\r\n                if (player.worlds >= (G['shopBaseCosts'].antSpeed + 25 * player.shopUpgrades.antSpeedLevel) && player.shopUpgrades.antSpeedLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].antSpeed + 25 * player.shopUpgrades.antSpeedLevel);\r\n                    player.shopUpgrades.antSpeedLevel += 1;\r\n                }\r\n                break;\r\n            case \"cashGrab\":\r\n                if (player.worlds >= (G['shopBaseCosts'].cashGrab + 40 * player.shopUpgrades.cashGrabLevel) && player.shopUpgrades.cashGrabLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].cashGrab + 40 * player.shopUpgrades.cashGrabLevel);\r\n                    player.shopUpgrades.cashGrabLevel += 1;\r\n                }\r\n                break;\r\n            case \"shopTalisman\":\r\n                if (player.worlds >= 1500 && !player.shopUpgrades.talismanBought) {\r\n                    player.worlds -= 1500;\r\n                    player.shopUpgrades.talismanBought = true;\r\n                }\r\n                break;\r\n            case \"seasonPass\":\r\n                if (player.worlds >= (G['shopBaseCosts'].seasonPass + 75 * player.shopUpgrades.seasonPassLevel) && player.shopUpgrades.seasonPassLevel < 100) {\r\n                    player.worlds -= (G['shopBaseCosts'].seasonPass + 75 * player.shopUpgrades.seasonPassLevel);\r\n                    player.shopUpgrades.seasonPassLevel += 1;\r\n                }\r\n                break;\r\n            case \"challengeExtension\":\r\n                if (player.worlds >= (G['shopBaseCosts'].challengeExtension + 250 * player.shopUpgrades.challengeExtension) && player.shopUpgrades.challengeExtension < 5) {\r\n                    player.worlds -= (G['shopBaseCosts'].challengeExtension + 250 * player.shopUpgrades.challengeExtension);\r\n                    player.shopUpgrades.challengeExtension += 1;\r\n                }\r\n                break;\r\n            case \"challengeTome\":\r\n                if (player.worlds >= (G['shopBaseCosts'].challenge10Upgrade + 250 * player.shopUpgrades.challenge10Tomes) && player.shopUpgrades.challenge10Tomes < 15) {\r\n                    player.worlds -= (G['shopBaseCosts'].challenge10Upgrade + 250 * player.shopUpgrades.challenge10Tomes);\r\n                    player.shopUpgrades.challenge10Tomes += 1;\r\n                }\r\n                break;\r\n            case \"cubeToQuark\":\r\n                if (player.worlds >= (G['shopBaseCosts'].cubeToQuark) && !player.shopUpgrades.cubeToQuarkBought) {\r\n                    player.worlds -= (G['shopBaseCosts'].cubeToQuark);\r\n                    player.shopUpgrades.cubeToQuarkBought = true;\r\n                }\r\n                break;\r\n            case \"tesseractToQuark\":\r\n                if (player.worlds >= (G['shopBaseCosts'].tesseractToQuark) && !player.shopUpgrades.tesseractToQuarkBought) {\r\n                    player.worlds -= (G['shopBaseCosts'].tesseractToQuark);\r\n                    player.shopUpgrades.tesseractToQuarkBought = true;\r\n                }\r\n                break;\r\n            case \"hypercubeToQuark\":\r\n                if (player.worlds >= (G['shopBaseCosts'].hypercubeToQuark) && !player.shopUpgrades.hypercubeToQuarkBought) {\r\n                    player.worlds -= (G['shopBaseCosts'].hypercubeToQuark);\r\n                    player.shopUpgrades.hypercubeToQuarkBought = true;\r\n                }\r\n                break;\r\n        }\r\n        revealStuff();\r\n    }\r\n};\r\nexport const useConsumable = (input) => {\r\n    const p = G['shopConfirmation']\r\n        ? confirm('Would you like to use this potion?')\r\n        : true;\r\n    if (p) {\r\n        switch (input) {\r\n            case \"offeringPotion\":\r\n                if (player.shopUpgrades.offeringPotion > 0.5) {\r\n                    player.shopUpgrades.offeringPotion -= 1;\r\n                    player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration());\r\n                }\r\n                break;\r\n            case \"obtainiumPotion\":\r\n                if (player.shopUpgrades.obtainiumPotion > 0.5) {\r\n                    player.shopUpgrades.obtainiumPotion -= 1;\r\n                    player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration());\r\n                }\r\n                break;\r\n        }\r\n    }\r\n};\r\nexport const resetShopUpgrades = () => {\r\n    const p = G['shopConfirmation']\r\n        ? confirm(\"This will refund 100% of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?\")\r\n        : true;\r\n    if (p && player.worlds >= 15) {\r\n        player.worlds -= 15;\r\n        for (let i = 0; i < 100; i++) {\r\n            if (player.shopUpgrades.offeringTimerLevel > 0) {\r\n                player.shopUpgrades.offeringTimerLevel -= 1;\r\n                player.worlds += (150 + 10 * i);\r\n            }\r\n            if (player.shopUpgrades.offeringAutoLevel > 1) {\r\n                player.shopUpgrades.offeringAutoLevel -= 1;\r\n                player.worlds += (175 + 10 * i);\r\n            }\r\n            if (player.shopUpgrades.obtainiumTimerLevel > 0) {\r\n                player.shopUpgrades.obtainiumTimerLevel -= 1;\r\n                player.worlds += (150 + 10 * i);\r\n            }\r\n            if (player.shopUpgrades.obtainiumAutoLevel > 1) {\r\n                player.shopUpgrades.obtainiumAutoLevel -= 1;\r\n                player.worlds += (175 + 10 * i);\r\n            }\r\n            if (player.shopUpgrades.antSpeedLevel > 0) {\r\n                player.shopUpgrades.antSpeedLevel -= 1;\r\n                player.worlds += (200 + 25 * i);\r\n            }\r\n            if (player.shopUpgrades.cashGrabLevel > 0) {\r\n                player.shopUpgrades.cashGrabLevel -= 1;\r\n                player.worlds += (100 + 40 * i);\r\n            }\r\n            if (player.shopUpgrades.challenge10Tomes > 0) {\r\n                player.shopUpgrades.challenge10Tomes -= 1;\r\n                player.worlds += (500 + 250 * i);\r\n            }\r\n            if (player.shopUpgrades.seasonPassLevel > 0) {\r\n                player.shopUpgrades.seasonPassLevel -= 1;\r\n                player.worlds += (500 + 75 * i);\r\n            }\r\n        }\r\n        revealStuff();\r\n    }\r\n};\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { toggleAscStatPerSecond, toggleTabs, toggleSubTab, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation } from \"./Toggles\";\r\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount } from \"./Reset\";\r\nimport { resetCheck, saveSynergy } from \"./Synergism\";\r\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyUpgrades, buyRuneBonusLevels } from \"./Buy\";\r\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions } from \"./Upgrades\";\r\nimport { buyAutobuyers } from \"./Automation\";\r\nimport { buyGenerator } from \"./Generators\";\r\nimport { achievementdescriptions } from \"./Achievements\";\r\nimport { displayRuneInformation, redeemShards } from \"./Runes\";\r\nimport { toggleTalismanBuy, buyTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from \"./Talismans\";\r\nimport { challengeDisplay, toggleRetryChallenges } from \"./Challenges\";\r\nimport { buyResearch, researchDescriptions } from \"./Research\";\r\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from \"./Ants\";\r\nimport { buyCubeUpgrades, openCube, cubeUpgradeDesc } from \"./Cubes\";\r\nimport { openTesseract } from \"./Tesseracts\";\r\nimport { openHypercube } from \"./Hypercubes\";\r\nimport { openPlatonic } from \"./PlatonicCubes\";\r\nimport { buyPlatonicUpgrades, createPlatonicDescription } from \"./Platonic\";\r\nimport { corruptionCleanseConfirm, corruptionDisplay } from \"./Corruptions\";\r\nimport { exportSynergism, updateSaveString, promocodes, importSynergism, resetGame } from \"./ImportExport\";\r\nimport { resetHistoryTogglePerSecond } from \"./History\";\r\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable } from \"./Shop\";\r\nimport { Globals as G } from './Variables';\r\nexport const generateEventHandlers = () => {\r\n    const ordinals = ['null', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth'];\r\n    document.getElementById('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1));\r\n    document.getElementById('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2));\r\n    document.getElementById('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3));\r\n    document.getElementById('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4));\r\n    document.getElementById('prestigebtn').addEventListener('mouseover', () => resetrepeat(\"prestige\"));\r\n    document.getElementById('transcendbtn').addEventListener('mouseover', () => resetrepeat(\"transcension\"));\r\n    document.getElementById('reincarnatebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnation\"));\r\n    document.getElementById('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat(\"acceleratorBoost\"));\r\n    document.getElementById('challengebtn').addEventListener('mouseover', () => resetrepeat(\"transcensionChallenge\"));\r\n    document.getElementById('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat(\"reincarnationChallenge\"));\r\n    document.getElementById('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat(\"ascensionChallenge\"));\r\n    document.getElementById('ascendbtn').addEventListener('mouseover', () => resetrepeat(\"ascension\"));\r\n    document.getElementById('prestigebtn').addEventListener('click', () => resetCheck('prestige'));\r\n    document.getElementById('transcendbtn').addEventListener('click', () => resetCheck('transcend'));\r\n    document.getElementById('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnate'));\r\n    document.getElementById('acceleratorboostbtn').addEventListener('click', () => boostAccelerator());\r\n    document.getElementById('challengebtn').addEventListener('click', () => resetCheck('challenge', undefined, true));\r\n    document.getElementById('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationchallenge', undefined, true));\r\n    document.getElementById('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'));\r\n    document.getElementById('ascendbtn').addEventListener('click', () => resetCheck('ascend'));\r\n    document.getElementById('buildingstab').addEventListener('click', () => toggleTabs('buildings'));\r\n    document.getElementById('upgradestab').addEventListener('click', () => toggleTabs('upgrades'));\r\n    document.getElementById('settingstab').addEventListener('click', () => toggleTabs('settings'));\r\n    document.getElementById('achievementstab').addEventListener('click', () => toggleTabs('achievements'));\r\n    document.getElementById('runestab').addEventListener('click', () => toggleTabs('runes'));\r\n    document.getElementById('challengetab').addEventListener('click', () => toggleTabs('challenges'));\r\n    document.getElementById('researchtab').addEventListener('click', () => toggleTabs('researches'));\r\n    document.getElementById('shoptab').addEventListener('click', () => toggleTabs('shop'));\r\n    document.getElementById('anttab').addEventListener('click', () => toggleTabs('ants'));\r\n    document.getElementById('cubetab').addEventListener('click', () => toggleTabs('cubes'));\r\n    document.getElementById('traitstab').addEventListener('click', () => toggleTabs('traits'));\r\n    const buildingTypes = ['Coin', 'Diamond', 'Mythos', 'Particle', 'Tesseract'];\r\n    for (let index = 0; index < buildingTypes.length; index++) {\r\n        document.getElementById(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => toggleSubTab(1, index));\r\n    }\r\n    const buildingTypesAlternate = ['coin', 'crystal', 'mythos', 'particle', 'tesseract', 'offering'];\r\n    const buildingOrds = ['one', 'ten', 'hundred', 'thousand'];\r\n    const buildingOrdsToNum = [1, 10, 100, 1000];\r\n    for (let index = 0; index < buildingOrds.length; index++) {\r\n        for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\r\n            document.getElementById(buildingTypesAlternate[index2] + buildingOrds[index]).addEventListener('click', () => toggleBuyAmount(buildingOrdsToNum[index], buildingTypesAlternate[index2]));\r\n        }\r\n    }\r\n    document.getElementById('buyaccelerator').addEventListener('click', () => buyAccelerator());\r\n    document.getElementById('buymultiplier').addEventListener('click', () => buyMultiplier());\r\n    document.getElementById('buyacceleratorboost').addEventListener('click', () => boostAccelerator());\r\n    const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos'];\r\n    const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'];\r\n    for (let index = 0; index < 3; index++) {\r\n        for (let index2 = 1; index2 <= 5; index2++) {\r\n            document.getElementById(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () => buyProducer(ordinals[index2], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2 + 1) / 2));\r\n        }\r\n    }\r\n    for (let index = 1; index <= 5; index++) {\r\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index));\r\n        document.getElementById(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index));\r\n    }\r\n    const particleBuildingCosts = [1, 100, 1e4, 1e8, 1e16];\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`buyparticles${index + 1}`).addEventListener('click', () => buyParticleBuilding(ordinals[index + 1], particleBuildingCosts[index]));\r\n    }\r\n    const tesseractBuildingCosts = [1, 10, 100, 1000, 10000];\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`buyTesseracts${index + 1}`).addEventListener('click', () => buyTesseractBuilding(tesseractBuildingCosts[index], index + 1));\r\n        document.getElementById(`tesseractAutoToggle${index + 1}`).addEventListener('click', () => toggleAutoTesseracts(index + 1));\r\n    }\r\n    for (let index = 0; index < 10; index++) {\r\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index + 1));\r\n        document.getElementById(`buyConstantUpgrade${index + 1}`).addEventListener('click', () => buyConstantUpgrades(index + 1));\r\n    }\r\n    for (let index = 0; index < 32; index++) {\r\n        document.getElementById(`toggle${index + 1}`).addEventListener('click', () => toggleSettings(index));\r\n    }\r\n    document.getElementById(\"prestigeautotoggle\").addEventListener('click', () => toggleautoreset(1));\r\n    document.getElementById(\"transcendautotoggle\").addEventListener('click', () => toggleautoreset(2));\r\n    document.getElementById(\"reincarnateautotoggle\").addEventListener('click', () => toggleautoreset(3));\r\n    document.getElementById(\"ascensionAutoToggle\").addEventListener('click', () => toggleautoreset(4));\r\n    document.getElementById(\"prestigeamount\").addEventListener('blur', () => updateAutoReset(1));\r\n    document.getElementById(\"transcendamount\").addEventListener('blur', () => updateAutoReset(2));\r\n    document.getElementById(\"reincarnationamount\").addEventListener('blur', () => updateAutoReset(3));\r\n    document.getElementById(\"ascensionAmount\").addEventListener('blur', () => updateAutoReset(4));\r\n    document.getElementById(\"autoAntSacrificeAmount\").addEventListener('blur', () => updateAutoReset(5));\r\n    document.getElementById(\"tesseractautobuytoggle\").addEventListener('click', () => toggleautobuytesseract());\r\n    document.getElementById(\"tesseractAmount\").addEventListener('blur', () => updateTesseractAutoBuyAmount());\r\n    for (let index = 1; index <= 125; index++) {\r\n        document.getElementById(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index));\r\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\r\n    }\r\n    const resourceTypes = ['coin', 'prestige', 'transcend', 'reincarnation'];\r\n    for (let index = 1; index <= 80; index++) {\r\n        const resourceType = resourceTypes[Math.floor((index - 1) / 20)];\r\n        document.getElementById(`upg${index}`).addEventListener('click', () => buyUpgrades(resourceType, index));\r\n        console.log('Successfully added \"Onmouseover\" event to upgrades 1-120!');\r\n    }\r\n    for (let index = 1; index <= 20; index++) {\r\n        document.getElementById(`upg${index + 80}`).addEventListener('click', () => buyAutobuyers(index));\r\n        console.log('Successfully added \"Onclick\" event to Autobuyer upgrade!');\r\n    }\r\n    for (let index = 1; index <= 20; index++) {\r\n        document.getElementById(`upg${index + 100}`).addEventListener('click', () => buyGenerator(index));\r\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\r\n    }\r\n    for (let index = 1; index <= 5; index++) {\r\n        document.getElementById(`upg${index + 120}`).addEventListener('click', () => buyUpgrades('coin', index));\r\n        console.log('Successfully added \"Onclick\" event to Generator upgrade!');\r\n    }\r\n    document.getElementById('shoptogglecoin').addEventListener('click', () => toggleShops(1));\r\n    document.getElementById('shoptoggleprestige').addEventListener('click', () => toggleShops(2));\r\n    document.getElementById('shoptoggletranscend').addEventListener('click', () => toggleShops(3));\r\n    document.getElementById('shoptogglegenerator').addEventListener('click', () => toggleShops(4));\r\n    document.getElementById('particleAutoUpgrade').addEventListener('click', () => toggleShops(5));\r\n    for (let index = 1; index <= 252; index++) {\r\n        document.getElementById(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index));\r\n    }\r\n    document.getElementById('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0));\r\n    for (let index = 0; index < 4; index++) {\r\n        document.getElementById(`toggleRuneSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(4, index));\r\n    }\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`rune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\r\n        document.getElementById(`rune${index + 1}`).addEventListener('click', () => toggleAutoSacrifice(index + 1));\r\n        document.getElementById(`activaterune${index + 1}`).addEventListener('mouseover', () => displayRuneInformation(index + 1));\r\n        document.getElementById(`activaterune${index + 1}`).addEventListener('click', () => redeemShards(index + 1));\r\n    }\r\n    const talismanBuyPercents = [10, 25, 50, 100];\r\n    const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred'];\r\n    for (let index = 0; index < talismanBuyPercents.length; index++) {\r\n        document.getElementById(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(index));\r\n    }\r\n    document.getElementById('toggleautoenhance').addEventListener('click', () => toggleautoenhance());\r\n    document.getElementById('toggleautofortify').addEventListener('click', () => toggleautofortify());\r\n    const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'];\r\n    for (let index = 0; index < talismanItemNames.length; index++) {\r\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]));\r\n        document.getElementById(`buyTalismanItem${index + 1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]));\r\n    }\r\n    for (let index = 0; index < 7; index++) {\r\n        document.getElementById(`talisman${index + 1}`).addEventListener('click', () => showTalismanEffect(index + 1));\r\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('mouseover', () => showTalismanPrices(index + 1));\r\n        document.getElementById(`leveluptalisman${index + 1}`).addEventListener('click', () => buyTalismanLevels(index + 1));\r\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index + 1));\r\n        document.getElementById(`enhancetalisman${index + 1}`).addEventListener('click', () => buyTalismanEnhance(index + 1));\r\n        document.getElementById(`respectalisman${index + 1}`).addEventListener('click', () => showRespecInformation(index + 1));\r\n    }\r\n    document.getElementById('respecAllTalismans').addEventListener('click', () => showRespecInformation(8));\r\n    document.getElementById('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G['talismanRespec']));\r\n    document.getElementById('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G['talismanRespec']));\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`talismanRespecButton${index + 1}`).addEventListener('click', () => changeTalismanModifier(index + 1));\r\n    }\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`runeBlessingPower${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index + 1));\r\n        document.getElementById(`runeSpiritPower${index + 1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index + 1));\r\n    }\r\n    document.getElementById('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1));\r\n    document.getElementById('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2));\r\n    for (let index = 0; index < 15; index++) {\r\n        document.getElementById(`challenge${index + 1}`).addEventListener('click', () => challengeDisplay(index + 1));\r\n    }\r\n    document.getElementById('startChallenge').addEventListener('click', () => toggleChallenges(G['triggerChallenge'], false));\r\n    document.getElementById('retryChallenge').addEventListener('click', () => toggleRetryChallenges());\r\n    document.getElementById('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G['triggerChallenge']));\r\n    document.getElementById('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun());\r\n    document.getElementById('startAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(1));\r\n    document.getElementById('exitAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(2));\r\n    document.getElementById('enterAutoChallengeTimerInput').addEventListener('blur', () => updateAutoChallenge(3));\r\n    for (let index = 1; index < 200; index++) {\r\n        document.getElementById(`res${index}`).addEventListener('click', () => buyResearch(index));\r\n        document.getElementById(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index));\r\n        console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to researches 1-199!');\r\n    }\r\n    document.getElementById(`res200`).addEventListener('click', () => buyResearch(200, false, 0.01));\r\n    document.getElementById(`res200`).addEventListener('mouseover', () => researchDescriptions(200, false, 0.01));\r\n    console.log('Successfully added \"Onmouseover\" and \"Onclick\" events to research 200!');\r\n    document.getElementById('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy());\r\n    document.getElementById('toggleautoresearch').addEventListener('click', () => toggleAutoResearch());\r\n    const antProducerCostVals = ['null', '1e800', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300'];\r\n    for (let index = 1; index <= 8; index++) {\r\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index));\r\n        document.getElementById(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index));\r\n        document.getElementById(`anttier${index}`).addEventListener('click', () => buyAntProducers(ordinals[index], 'Ants', antProducerCostVals[index], index));\r\n    }\r\n    const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100'];\r\n    for (let index = 1; index <= 12; index++) {\r\n        document.getElementById(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index));\r\n        document.getElementById(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index));\r\n    }\r\n    document.getElementById('antSacrifice').addEventListener('click', () => sacrificeAnts());\r\n    document.getElementById('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy());\r\n    document.getElementById('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0));\r\n    document.getElementById('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1));\r\n    for (let index = 0; index < 6; index++) {\r\n        document.getElementById(`switchCubeSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(8, index));\r\n    }\r\n    for (let index = 0; index < 49; index++) {\r\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('mouseover', () => cubeUpgradeDesc(index + 1));\r\n        document.getElementById(`cubeUpg${index + 1}`).addEventListener('click', () => buyCubeUpgrades(index + 1));\r\n    }\r\n    document.getElementById('cubeUpg50').addEventListener('mouseover', () => cubeUpgradeDesc(50, 0.01));\r\n    document.getElementById('cubeUpg50').addEventListener('click', () => buyCubeUpgrades(50, 0.01));\r\n    document.getElementById('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube());\r\n    document.getElementById('open1Cube').addEventListener('click', () => openCube(1, false));\r\n    document.getElementById('open20Cube').addEventListener('click', () => openCube(20, false));\r\n    document.getElementById('open1000Cube').addEventListener('click', () => openCube(1000, false));\r\n    document.getElementById('openMostCube').addEventListener('click', () => openCube(1, true));\r\n    document.getElementById('open1Tesseract').addEventListener('click', () => openTesseract(1, false));\r\n    document.getElementById('open20Tesseract').addEventListener('click', () => openTesseract(20, false));\r\n    document.getElementById('open1000Tesseract').addEventListener('click', () => openTesseract(1000, false));\r\n    document.getElementById('openMostTesseract').addEventListener('click', () => openTesseract(1, true));\r\n    document.getElementById('open1Hypercube').addEventListener('click', () => openHypercube(1, false));\r\n    document.getElementById('open20Hypercube').addEventListener('click', () => openHypercube(20, false));\r\n    document.getElementById('open1000Hypercube').addEventListener('click', () => openHypercube(1000, false));\r\n    document.getElementById('openMostHypercube').addEventListener('click', () => openHypercube(1, true));\r\n    document.getElementById('open1PlatonicCube').addEventListener('click', () => openPlatonic(1, false));\r\n    document.getElementById('open40kPlatonicCube').addEventListener('click', () => openPlatonic(4e4, false));\r\n    document.getElementById('open1mPlatonicCube').addEventListener('click', () => openPlatonic(1e6, false));\r\n    document.getElementById('openMostPlatonicCube').addEventListener('click', () => openPlatonic(1, true));\r\n    const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage');\r\n    for (let index = 0; index < platonicUpgrades.length; index++) {\r\n        platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index + 1));\r\n        platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index + 1));\r\n    }\r\n    document.getElementById('corrStatsBtn').addEventListener('click', () => toggleSubTab(9, 0));\r\n    document.getElementById('corrLoadoutsBtn').addEventListener('click', () => toggleSubTab(9, 1));\r\n    document.getElementById('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10));\r\n    document.getElementById('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm());\r\n    document.getElementById('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999));\r\n    document.getElementById('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend());\r\n    for (let index = 0; index < 5; index++) {\r\n        document.getElementById(`switchSettingSubTab${index + 1}`).addEventListener('click', () => toggleSubTab(-1, index));\r\n    }\r\n    document.getElementById('exportgame').addEventListener('click', () => exportSynergism());\r\n    document.getElementById('saveStringInput').addEventListener('blur', () => updateSaveString());\r\n    document.getElementById('savegame').addEventListener('click', () => saveSynergy(true));\r\n    document.getElementById('deleteGame').addEventListener('click', () => resetGame());\r\n    document.getElementById('promocodes').addEventListener('click', () => promocodes());\r\n    document.getElementById('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond());\r\n    document.getElementById('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades());\r\n    document.getElementById('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation());\r\n    document.getElementById('offeringPotions').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\r\n    document.getElementById('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\r\n    document.getElementById('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\r\n    document.getElementById('useofferingpotion').addEventListener('mouseover', () => shopDescriptions(\"offeringPotion\"));\r\n    document.getElementById('buyofferingpotion').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"));\r\n    document.getElementById('useofferingpotion').addEventListener('click', () => useConsumable(\"offeringPotion\"));\r\n    document.getElementById('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\r\n    document.getElementById('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\r\n    document.getElementById('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\r\n    document.getElementById('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions(\"obtainiumPotion\"));\r\n    document.getElementById('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"));\r\n    document.getElementById('useobtainiumpotion').addEventListener('click', () => useConsumable(\"obtainiumPotion\"));\r\n    document.getElementById('OfferingEX').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\r\n    document.getElementById('OfferingAuto').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\r\n    document.getElementById('ObtainiumEX').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\r\n    document.getElementById('ObtainiumAuto').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\r\n    document.getElementById('InstChallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\r\n    document.getElementById('AntSpd').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\r\n    document.getElementById('CashUpgrade').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\r\n    document.getElementById('CashTalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\r\n    document.getElementById('SeasonPass').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\r\n    document.getElementById('ShopChallenge').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\r\n    document.getElementById('ShopTome').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\r\n    document.getElementById('CubeQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\r\n    document.getElementById('TesseractQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\r\n    document.getElementById('HypercubeQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\r\n    document.getElementById('offeringtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\r\n    document.getElementById('offeringautolevel').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\r\n    document.getElementById('obtainiumtimerlevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\r\n    document.getElementById('obtainiumautolevel').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\r\n    document.getElementById('instantchallenge').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\r\n    document.getElementById('antspeed').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\r\n    document.getElementById('cashgrab').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\r\n    document.getElementById('shoptalisman').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\r\n    document.getElementById('seasonPassLevel').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\r\n    document.getElementById('challengeUpgradeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\r\n    document.getElementById('challenge10TomeLevel').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\r\n    document.getElementById('cubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\r\n    document.getElementById('tesseractToQuark').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\r\n    document.getElementById('hypercubeToQuark').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\r\n    document.getElementById('offeringtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"offeringEX\"));\r\n    document.getElementById('offeringtimerbutton').addEventListener('click', () => buyShopUpgrades(\"offeringEX\"));\r\n    document.getElementById('offeringautobutton').addEventListener('mouseover', () => shopDescriptions(\"offeringAuto\"));\r\n    document.getElementById('offeringautobutton').addEventListener('click', () => buyShopUpgrades(\"offeringAuto\"));\r\n    document.getElementById('obtainiumtimerbutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumEX\"));\r\n    document.getElementById('obtainiumtimerbutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumEX\"));\r\n    document.getElementById('obtainiumautobutton').addEventListener('mouseover', () => shopDescriptions(\"obtainiumAuto\"));\r\n    document.getElementById('obtainiumautobutton').addEventListener('click', () => buyShopUpgrades(\"obtainiumAuto\"));\r\n    document.getElementById('instantchallengebutton').addEventListener('mouseover', () => shopDescriptions(\"instantChallenge\"));\r\n    document.getElementById('instantchallengebutton').addEventListener('click', () => buyShopUpgrades(\"instantChallenge\"));\r\n    document.getElementById('antspeedbutton').addEventListener('mouseover', () => shopDescriptions(\"antSpeed\"));\r\n    document.getElementById('antspeedbutton').addEventListener('click', () => buyShopUpgrades(\"antSpeed\"));\r\n    document.getElementById('cashgrabbutton').addEventListener('mouseover', () => shopDescriptions(\"cashGrab\"));\r\n    document.getElementById('cashgrabbutton').addEventListener('click', () => buyShopUpgrades(\"cashGrab\"));\r\n    document.getElementById('shoptalismanbutton').addEventListener('mouseover', () => shopDescriptions(\"shopTalisman\"));\r\n    document.getElementById('shoptalismanbutton').addEventListener('click', () => buyShopUpgrades(\"shopTalisman\"));\r\n    document.getElementById('seasonPassButton').addEventListener('mouseover', () => shopDescriptions(\"seasonPass\"));\r\n    document.getElementById('seasonPassButton').addEventListener('click', () => buyShopUpgrades(\"seasonPass\"));\r\n    document.getElementById('challengeUpgradeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeExtension\"));\r\n    document.getElementById('challengeUpgradeButton').addEventListener('click', () => buyShopUpgrades(\"challengeExtension\"));\r\n    document.getElementById('challenge10TomeButton').addEventListener('mouseover', () => shopDescriptions(\"challengeTome\"));\r\n    document.getElementById('challenge10TomeButton').addEventListener('click', () => buyShopUpgrades(\"challengeTome\"));\r\n    document.getElementById('cubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"cubeToQuark\"));\r\n    document.getElementById('cubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"cubeToQuark\"));\r\n    document.getElementById('tesseractToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"tesseractToQuark\"));\r\n    document.getElementById('tesseractToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"tesseractToQuark\"));\r\n    document.getElementById('hypercubeToQuarkButton').addEventListener('mouseover', () => shopDescriptions(\"hypercubeToQuark\"));\r\n    document.getElementById('hypercubeToQuarkButton').addEventListener('click', () => buyShopUpgrades(\"hypercubeToQuark\"));\r\n    document.getElementById('importfile').addEventListener('change', (e) => __awaiter(void 0, void 0, void 0, function* () {\r\n        const { files } = e.target;\r\n        const saveItem = files.item(0);\r\n        const save = yield saveItem.text();\r\n        return importSynergism(save);\r\n    }));\r\n};\r\n","import { sacrificeAnts } from \"./Ants\";\r\nimport { calculateAutomaticObtainium, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration } from \"./Calculate\";\r\nimport { redeemShards } from \"./Runes\";\r\nimport player from \"./Synergism\";\r\nimport { Globals as G } from './Variables';\r\nexport const getMaxQuarkTime = () => {\r\n    let time = 90000;\r\n    time += 45000 * player.researches[195];\r\n    return time;\r\n};\r\nexport const addTimers = (input, time) => {\r\n    const timeMultiplier = (input === \"ascension\" || input === \"quarks\") ? 1 : calculateTimeAcceleration();\r\n    switch (input) {\r\n        case \"prestige\":\r\n            player.prestigecounter += time * timeMultiplier;\r\n            break;\r\n        case \"transcension\":\r\n            player.transcendcounter += time * timeMultiplier;\r\n            break;\r\n        case \"reincarnation\":\r\n            player.reincarnationcounter += time * timeMultiplier;\r\n            break;\r\n        case \"ascension\":\r\n            player.ascensionCounter += time * timeMultiplier;\r\n            break;\r\n        case \"quarks\":\r\n            const maxQuarkTimer = getMaxQuarkTime();\r\n            player.quarkstimer += time * timeMultiplier;\r\n            player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer;\r\n            break;\r\n    }\r\n};\r\nexport const checkMaxRunes = () => {\r\n    let maxxed = 0;\r\n    for (let i = 1; i <= 5; i++) {\r\n        if (player.runelevels[i - 1] >= calculateMaxRunes(i))\r\n            maxxed++;\r\n    }\r\n    return maxxed;\r\n};\r\nexport const automaticTools = (input, time) => {\r\n    const timeMultiplier = (input === \"runeSacrifice\" || input === \"addOfferings\") ? 1 : calculateTimeAcceleration();\r\n    switch (input) {\r\n        case \"addObtainium\":\r\n            calculateObtainium();\r\n            const obtainiumGain = calculateAutomaticObtainium();\r\n            player.researchPoints += obtainiumGain * time * timeMultiplier;\r\n            break;\r\n        case \"addOfferings\":\r\n            G['autoOfferingCounter'] += time;\r\n            player.runeshards += Math.floor(G['autoOfferingCounter']);\r\n            G['autoOfferingCounter'] %= 1;\r\n            break;\r\n        case \"runeSacrifice\":\r\n            player.sacrificeTimer += time;\r\n            if (player.sacrificeTimer >= 1) {\r\n                if (player.cubeUpgrades[20] === 1) {\r\n                    const notMaxed = (5 - checkMaxRunes());\r\n                    if (notMaxed > 0) {\r\n                        const baseAmount = Math.floor(player.runeshards / notMaxed);\r\n                        for (let i = 0; i < 5; i++) {\r\n                            redeemShards(i + 1, true, baseAmount);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const rune = player.autoSacrifice;\r\n                    redeemShards(rune, true, 0);\r\n                }\r\n                player.sacrificeTimer %= 1;\r\n            }\r\n            break;\r\n        case \"antSacrifice\":\r\n            player.antSacrificeTimer += time * timeMultiplier;\r\n            player.antSacrificeTimerReal += time;\r\n            const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\r\n                player.antSacrificeTimerReal : player.antSacrificeTimer;\r\n            if (antSacrificeTimer >= player.autoAntSacTimer && player.researches[124] === 1\r\n                && player.autoAntSacrifice && player.antPoints.gte(\"1e40\")) {\r\n                sacrificeAnts(true);\r\n            }\r\n            break;\r\n    }\r\n};\r\n","import Decimal from 'break_infinity.js';\r\nimport LZString from 'lz-string';\r\nimport { isDecimal, getElementById, sortWithIndeces, sumContents } from './Utility';\r\nimport { Globals as G } from './Variables';\r\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep } from './Challenges';\r\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades } from './Upgrades';\r\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research';\r\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, CSSAscend, CSSRuneBlessings, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, hideStuff } from './UpdateHTML';\r\nimport { calculateHypercubeBlessings } from './Hypercubes';\r\nimport { calculateTesseractBlessings } from './Tesseracts';\r\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration } from './Calculate';\r\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels } from './Talismans';\r\nimport { toggleAscStatPerSecond, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleChallenges, keyboardTabChange, toggleauto } from './Toggles';\r\nimport { c15RewardUpdate } from './Statistics';\r\nimport { resetHistoryRenderAllTables } from './History';\r\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\r\nimport { antSacrificePointsToMultiplier, autoBuyAnts, sacrificeAnts, calculateCrumbToCoinExp } from './Ants';\r\nimport { calculatetax } from './Tax';\r\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements';\r\nimport { reset } from './Reset';\r\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, getTesseractCost } from './Buy';\r\nimport { autoUpgrades } from './Automation';\r\nimport { redeemShards } from './Runes';\r\nimport { checkVariablesOnLoad } from './CheckVariables';\r\nimport { updateCubeUpgradeBG } from './Cubes';\r\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate } from './Corruptions';\r\nimport { generateEventHandlers } from './EventListeners';\r\nimport { loadPlugins } from './Plugins/Plugins';\r\nimport { addTimers, automaticTools } from './Helper';\r\nexport const isTesting = true;\r\nexport const intervalHold = [];\r\nexport const interval = new Proxy(setInterval, {\r\n    apply(target, thisArg, args) {\r\n        const set = target.apply(thisArg, args);\r\n        intervalHold.push(set);\r\n        return set;\r\n    }\r\n});\r\nexport const clearInt = new Proxy(clearInterval, {\r\n    apply(target, thisArg, args) {\r\n        const id = args[0];\r\n        intervalHold.splice(intervalHold.indexOf(id), 1);\r\n        return target.apply(thisArg, args);\r\n    }\r\n});\r\nexport const player = {\r\n    worlds: 0,\r\n    coins: new Decimal(\"1e2\"),\r\n    coinsThisPrestige: new Decimal(\"1e2\"),\r\n    coinsThisTranscension: new Decimal(\"1e2\"),\r\n    coinsThisReincarnation: new Decimal(\"1e2\"),\r\n    coinsTotal: new Decimal(\"100\"),\r\n    firstOwnedCoin: 0,\r\n    firstGeneratedCoin: new Decimal(\"0\"),\r\n    firstCostCoin: new Decimal(\"100\"),\r\n    firstProduceCoin: 0.25,\r\n    secondOwnedCoin: 0,\r\n    secondGeneratedCoin: new Decimal(\"0\"),\r\n    secondCostCoin: new Decimal(\"2e3\"),\r\n    secondProduceCoin: 2.5,\r\n    thirdOwnedCoin: 0,\r\n    thirdGeneratedCoin: new Decimal(\"0\"),\r\n    thirdCostCoin: new Decimal(\"4e4\"),\r\n    thirdProduceCoin: 25,\r\n    fourthOwnedCoin: 0,\r\n    fourthGeneratedCoin: new Decimal(\"0\"),\r\n    fourthCostCoin: new Decimal(\"8e5\"),\r\n    fourthProduceCoin: 250,\r\n    fifthOwnedCoin: 0,\r\n    fifthGeneratedCoin: new Decimal(\"0\"),\r\n    fifthCostCoin: new Decimal(\"16e6\"),\r\n    fifthProduceCoin: 2500,\r\n    firstOwnedDiamonds: 0,\r\n    firstGeneratedDiamonds: new Decimal(\"0\"),\r\n    firstCostDiamonds: new Decimal(\"100\"),\r\n    firstProduceDiamonds: 0.05,\r\n    secondOwnedDiamonds: 0,\r\n    secondGeneratedDiamonds: new Decimal(\"0\"),\r\n    secondCostDiamonds: new Decimal(\"1e5\"),\r\n    secondProduceDiamonds: 0.0005,\r\n    thirdOwnedDiamonds: 0,\r\n    thirdGeneratedDiamonds: new Decimal(\"0\"),\r\n    thirdCostDiamonds: new Decimal(\"1e15\"),\r\n    thirdProduceDiamonds: 0.00005,\r\n    fourthOwnedDiamonds: 0,\r\n    fourthGeneratedDiamonds: new Decimal(\"0\"),\r\n    fourthCostDiamonds: new Decimal(\"1e40\"),\r\n    fourthProduceDiamonds: 0.000005,\r\n    fifthOwnedDiamonds: 0,\r\n    fifthGeneratedDiamonds: new Decimal(\"0\"),\r\n    fifthCostDiamonds: new Decimal(\"1e100\"),\r\n    fifthProduceDiamonds: 0.000005,\r\n    firstOwnedMythos: 0,\r\n    firstGeneratedMythos: new Decimal(\"0\"),\r\n    firstCostMythos: new Decimal(\"1\"),\r\n    firstProduceMythos: 1,\r\n    secondOwnedMythos: 0,\r\n    secondGeneratedMythos: new Decimal(\"0\"),\r\n    secondCostMythos: new Decimal(\"100\"),\r\n    secondProduceMythos: 0.01,\r\n    thirdOwnedMythos: 0,\r\n    thirdGeneratedMythos: new Decimal(\"0\"),\r\n    thirdCostMythos: new Decimal(\"1e4\"),\r\n    thirdProduceMythos: 0.001,\r\n    fourthOwnedMythos: 0,\r\n    fourthGeneratedMythos: new Decimal(\"0\"),\r\n    fourthCostMythos: new Decimal(\"1e8\"),\r\n    fourthProduceMythos: 0.0002,\r\n    fifthOwnedMythos: 0,\r\n    fifthGeneratedMythos: new Decimal(\"0\"),\r\n    fifthCostMythos: new Decimal(\"1e16\"),\r\n    fifthProduceMythos: 0.00004,\r\n    firstOwnedParticles: 0,\r\n    firstGeneratedParticles: new Decimal(\"0\"),\r\n    firstCostParticles: new Decimal(\"1\"),\r\n    firstProduceParticles: .25,\r\n    secondOwnedParticles: 0,\r\n    secondGeneratedParticles: new Decimal(\"0\"),\r\n    secondCostParticles: new Decimal(\"100\"),\r\n    secondProduceParticles: .20,\r\n    thirdOwnedParticles: 0,\r\n    thirdGeneratedParticles: new Decimal(\"0\"),\r\n    thirdCostParticles: new Decimal(\"1e4\"),\r\n    thirdProduceParticles: .15,\r\n    fourthOwnedParticles: 0,\r\n    fourthGeneratedParticles: new Decimal(\"0\"),\r\n    fourthCostParticles: new Decimal(\"1e8\"),\r\n    fourthProduceParticles: .10,\r\n    fifthOwnedParticles: 0,\r\n    fifthGeneratedParticles: new Decimal(\"0\"),\r\n    fifthCostParticles: new Decimal(\"1e16\"),\r\n    fifthProduceParticles: .5,\r\n    firstOwnedAnts: 0,\r\n    firstGeneratedAnts: new Decimal(\"0\"),\r\n    firstCostAnts: new Decimal(\"1e800\"),\r\n    firstProduceAnts: .0001,\r\n    secondOwnedAnts: 0,\r\n    secondGeneratedAnts: new Decimal(\"0\"),\r\n    secondCostAnts: new Decimal(\"3\"),\r\n    secondProduceAnts: .00005,\r\n    thirdOwnedAnts: 0,\r\n    thirdGeneratedAnts: new Decimal(\"0\"),\r\n    thirdCostAnts: new Decimal(\"100\"),\r\n    thirdProduceAnts: .00002,\r\n    fourthOwnedAnts: 0,\r\n    fourthGeneratedAnts: new Decimal(\"0\"),\r\n    fourthCostAnts: new Decimal(\"1e4\"),\r\n    fourthProduceAnts: .00001,\r\n    fifthOwnedAnts: 0,\r\n    fifthGeneratedAnts: new Decimal(\"0\"),\r\n    fifthCostAnts: new Decimal(\"1e12\"),\r\n    fifthProduceAnts: .000005,\r\n    sixthOwnedAnts: 0,\r\n    sixthGeneratedAnts: new Decimal(\"0\"),\r\n    sixthCostAnts: new Decimal(\"1e36\"),\r\n    sixthProduceAnts: .000002,\r\n    seventhOwnedAnts: 0,\r\n    seventhGeneratedAnts: new Decimal(\"0\"),\r\n    seventhCostAnts: new Decimal(\"1e100\"),\r\n    seventhProduceAnts: .000001,\r\n    eighthOwnedAnts: 0,\r\n    eighthGeneratedAnts: new Decimal(\"0\"),\r\n    eighthCostAnts: new Decimal(\"1e300\"),\r\n    eighthProduceAnts: .00000001,\r\n    ascendBuilding1: {\r\n        cost: 1,\r\n        owned: 0,\r\n        generated: new Decimal(\"0\"),\r\n        multiplier: 0.01\r\n    },\r\n    ascendBuilding2: {\r\n        cost: 10,\r\n        owned: 0,\r\n        generated: new Decimal(\"0\"),\r\n        multiplier: 0.01\r\n    },\r\n    ascendBuilding3: {\r\n        cost: 100,\r\n        owned: 0,\r\n        generated: new Decimal(\"0\"),\r\n        multiplier: 0.01\r\n    },\r\n    ascendBuilding4: {\r\n        cost: 1000,\r\n        owned: 0,\r\n        generated: new Decimal(\"0\"),\r\n        multiplier: 0.01\r\n    },\r\n    ascendBuilding5: {\r\n        cost: 10000,\r\n        owned: 0,\r\n        generated: new Decimal(\"0\"),\r\n        multiplier: 0.01\r\n    },\r\n    multiplierCost: new Decimal(\"1e5\"),\r\n    multiplierBought: 0,\r\n    acceleratorCost: new Decimal(\"500\"),\r\n    acceleratorBought: 0,\r\n    acceleratorBoostBought: 0,\r\n    acceleratorBoostCost: new Decimal(\"1e3\"),\r\n    upgrades: Array(141).fill(0),\r\n    prestigeCount: 0,\r\n    transcendCount: 0,\r\n    reincarnationCount: 0,\r\n    prestigePoints: new Decimal(\"0\"),\r\n    transcendPoints: new Decimal(\"0\"),\r\n    reincarnationPoints: new Decimal(\"0\"),\r\n    prestigeShards: new Decimal(\"0\"),\r\n    transcendShards: new Decimal(\"0\"),\r\n    reincarnationShards: new Decimal(\"0\"),\r\n    toggles: {\r\n        1: false,\r\n        2: false,\r\n        3: false,\r\n        4: false,\r\n        5: false,\r\n        6: false,\r\n        7: false,\r\n        8: false,\r\n        9: false,\r\n        10: false,\r\n        11: false,\r\n        12: false,\r\n        13: false,\r\n        14: false,\r\n        15: false,\r\n        16: false,\r\n        17: false,\r\n        18: false,\r\n        19: false,\r\n        20: false,\r\n        21: false,\r\n        22: false,\r\n        23: false,\r\n        24: false,\r\n        25: false,\r\n        26: false,\r\n        27: false,\r\n        28: true,\r\n        29: true,\r\n        30: true,\r\n        31: true,\r\n        32: true,\r\n        33: false,\r\n    },\r\n    resourceGenerators: {\r\n        diamonds: false,\r\n        mythos: false,\r\n    },\r\n    keepUpgrades: {\r\n        coinUpgrades: false,\r\n        prestigeUpgrades: false,\r\n        crystalUpgrades: false,\r\n        transcendUpgrades: false,\r\n        autobuyers: false,\r\n        generators: false\r\n    },\r\n    challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    challenge15Exponent: 0,\r\n    highestChallenge15Exponent: 0,\r\n    retrychallenges: false,\r\n    currentChallenge: {\r\n        transcension: 0,\r\n        reincarnation: 0,\r\n        ascension: 0,\r\n    },\r\n    researchPoints: 0,\r\n    obtainiumtimer: 0,\r\n    obtainiumlocktoggle: false,\r\n    obtainiumpersecond: 0,\r\n    maxobtainiumpersecond: 0,\r\n    maxobtainium: 0,\r\n    researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    unlocks: {\r\n        coinone: false,\r\n        cointwo: false,\r\n        cointhree: false,\r\n        coinfour: false,\r\n        prestige: false,\r\n        generation: false,\r\n        transcend: false,\r\n        reincarnate: false,\r\n        rrow1: false,\r\n        rrow2: false,\r\n        rrow3: false,\r\n        rrow4: false\r\n    },\r\n    achievements: Array(253).fill(0),\r\n    achievementPoints: 0,\r\n    prestigenomultiplier: true,\r\n    prestigenoaccelerator: true,\r\n    transcendnomultiplier: true,\r\n    transcendnoaccelerator: true,\r\n    reincarnatenomultiplier: true,\r\n    reincarnatenoaccelerator: true,\r\n    prestigenocoinupgrades: true,\r\n    transcendnocoinupgrades: true,\r\n    transcendnocoinorprestigeupgrades: true,\r\n    reincarnatenocoinupgrades: true,\r\n    reincarnatenocoinorprestigeupgrades: true,\r\n    reincarnatenocoinprestigeortranscendupgrades: true,\r\n    reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\r\n    crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\r\n    runelevels: [1, 1, 1, 1, 1],\r\n    runeexp: [0, 0, 0, 0, 0,],\r\n    runeshards: 0,\r\n    offeringlocktoggle: false,\r\n    maxofferings: 0,\r\n    offeringpersecond: 0,\r\n    prestigecounter: 0,\r\n    transcendcounter: 0,\r\n    reincarnationcounter: 0,\r\n    offlinetick: 0,\r\n    prestigeamount: 0,\r\n    transcendamount: 0,\r\n    reincarnationamount: 0,\r\n    fastestprestige: 9999999999,\r\n    fastesttranscend: 99999999999,\r\n    fastestreincarnate: 999999999999,\r\n    fastestAscend: 999999999999,\r\n    resettoggle1: 1,\r\n    resettoggle2: 1,\r\n    resettoggle3: 1,\r\n    tesseractAutoBuyerToggle: 0,\r\n    tesseractAutoBuyerAmount: 0,\r\n    coinbuyamount: 1,\r\n    crystalbuyamount: 1,\r\n    mythosbuyamount: 1,\r\n    particlebuyamount: 1,\r\n    offeringbuyamount: 1,\r\n    tesseractbuyamount: 1,\r\n    shoptoggles: {\r\n        coin: true,\r\n        prestige: true,\r\n        transcend: true,\r\n        generators: true,\r\n        reincarnate: true,\r\n    },\r\n    tabnumber: 1,\r\n    subtabNumber: 0,\r\n    codes: new Map(Array.from({ length: 30 }, (_, i) => [i + 1, false])),\r\n    loaded1009: true,\r\n    loaded1009hotfix1: true,\r\n    loaded10091: true,\r\n    loaded1010: true,\r\n    loaded10101: true,\r\n    shopUpgrades: {\r\n        offeringPotion: 1,\r\n        obtainiumPotion: 1,\r\n        offeringTimerLevel: 0,\r\n        obtainiumTimerLevel: 0,\r\n        offeringAutoLevel: 0,\r\n        obtainiumAutoLevel: 0,\r\n        instantChallengeBought: false,\r\n        cashGrabLevel: 0,\r\n        antSpeedLevel: 0,\r\n        talismanBought: false,\r\n        challengeExtension: 0,\r\n        challenge10Tomes: 0,\r\n        seasonPassLevel: 0,\r\n        cubeToQuarkBought: false,\r\n        tesseractToQuarkBought: false,\r\n        hypercubeToQuarkBought: false\r\n    },\r\n    autoSacrificeToggle: false,\r\n    autoFortifyToggle: false,\r\n    autoEnhanceToggle: false,\r\n    autoResearchToggle: false,\r\n    autoResearch: 0,\r\n    autoSacrifice: 0,\r\n    sacrificeTimer: 0,\r\n    quarkstimer: 90000,\r\n    antPoints: new Decimal(\"1\"),\r\n    antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    antSacrificePoints: 0,\r\n    antSacrificeTimer: 900,\r\n    antSacrificeTimerReal: 900,\r\n    talismanLevels: [0, 0, 0, 0, 0, 0, 0],\r\n    talismanRarity: [1, 1, 1, 1, 1, 1, 1],\r\n    talismanOne: [null, -1, 1, 1, 1, -1],\r\n    talismanTwo: [null, 1, 1, -1, -1, 1],\r\n    talismanThree: [null, 1, -1, 1, 1, -1],\r\n    talismanFour: [null, -1, -1, 1, 1, 1],\r\n    talismanFive: [null, 1, 1, -1, -1, 1],\r\n    talismanSix: [null, 1, 1, 1, -1, -1],\r\n    talismanSeven: [null, -1, 1, -1, 1, 1],\r\n    talismanShards: 0,\r\n    commonFragments: 0,\r\n    uncommonFragments: 0,\r\n    rareFragments: 0,\r\n    epicFragments: 0,\r\n    legendaryFragments: 0,\r\n    mythicalFragments: 0,\r\n    buyTalismanShardPercent: 10,\r\n    autoAntSacrifice: false,\r\n    autoAntSacTimer: 900,\r\n    autoAntSacrificeMode: 0,\r\n    antMax: false,\r\n    ascensionCount: 0,\r\n    ascensionCounter: 0,\r\n    cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    wowCubes: 0,\r\n    wowTesseracts: 0,\r\n    wowHypercubes: 0,\r\n    wowPlatonicCubes: 0,\r\n    wowAbyssals: 0,\r\n    cubeBlessings: {\r\n        accelerator: 0,\r\n        multiplier: 0,\r\n        offering: 0,\r\n        runeExp: 0,\r\n        obtainium: 0,\r\n        antSpeed: 0,\r\n        antSacrifice: 0,\r\n        antELO: 0,\r\n        talismanBonus: 0,\r\n        globalSpeed: 0\r\n    },\r\n    tesseractBlessings: {\r\n        accelerator: 0,\r\n        multiplier: 0,\r\n        offering: 0,\r\n        runeExp: 0,\r\n        obtainium: 0,\r\n        antSpeed: 0,\r\n        antSacrifice: 0,\r\n        antELO: 0,\r\n        talismanBonus: 0,\r\n        globalSpeed: 0\r\n    },\r\n    hypercubeBlessings: {\r\n        accelerator: 0,\r\n        multiplier: 0,\r\n        offering: 0,\r\n        runeExp: 0,\r\n        obtainium: 0,\r\n        antSpeed: 0,\r\n        antSacrifice: 0,\r\n        antELO: 0,\r\n        talismanBonus: 0,\r\n        globalSpeed: 0\r\n    },\r\n    platonicBlessings: {\r\n        cubes: 0,\r\n        tesseracts: 0,\r\n        hypercubes: 0,\r\n        platonics: 0,\r\n        hypercubeBonus: 0,\r\n        taxes: 0,\r\n        scoreBonus: 0,\r\n        globalSpeed: 0,\r\n    },\r\n    ascendShards: new Decimal(\"0\"),\r\n    autoAscend: false,\r\n    autoAscendMode: \"c10Completions\",\r\n    autoAscendThreshold: 1,\r\n    roombaResearchIndex: 0,\r\n    cubesThisAscension: {\r\n        \"challenges\": 0,\r\n        \"reincarnation\": 0,\r\n        \"ascension\": 0,\r\n        \"maxCubesPerSec\": 0,\r\n        \"maxAllTime\": 0,\r\n        \"cpsOnC10Comp\": 0,\r\n        \"tesseracts\": 0,\r\n        \"hypercubes\": 0\r\n    },\r\n    ascStatToggles: {\r\n        1: false,\r\n        2: false,\r\n        3: false,\r\n        4: false\r\n    },\r\n    prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    corruptionLoadouts: {\r\n        1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    },\r\n    corruptionShowStats: true,\r\n    constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    history: {},\r\n    historyCountMax: 10,\r\n    historyShowPerSecond: false,\r\n    autoChallengeRunning: false,\r\n    autoChallengeIndex: 1,\r\n    autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\r\n    autoChallengeStartExponent: 10,\r\n    autoChallengeTimer: {\r\n        start: 10,\r\n        exit: 2,\r\n        enter: 2\r\n    },\r\n    runeBlessingLevels: [0, 0, 0, 0, 0, 0],\r\n    runeSpiritLevels: [0, 0, 0, 0, 0, 0],\r\n    runeBlessingBuyAmount: 0,\r\n    runeSpiritBuyAmount: 0,\r\n    autoTesseracts: [false, false, false, false, false, false],\r\n    saveString: \"Synergism-$VERSION$-$TIME$.txt\",\r\n    brokenfile1: false,\r\n    exporttest: false,\r\n    kongregatetest: \"NO!\",\r\n    dayCheck: null,\r\n    dayTimer: 0,\r\n    cubeOpenedDaily: 0,\r\n    cubeQuarkDaily: 0,\r\n    tesseractOpenedDaily: 0,\r\n    tesseractQuarkDaily: 0,\r\n    hypercubeOpenedDaily: 0,\r\n    hypercubeQuarkDaily: 0,\r\n    loadedOct4Hotfix: false,\r\n    loadedNov13Vers: true,\r\n    loadedDec16Vers: true,\r\n    version: '2.5.0~alpha-1',\r\n    rngCode: 0\r\n};\r\nexport const blankSave = Object.assign({}, player, {\r\n    codes: new Map(Array.from({ length: 31 }, (_, i) => [i + 1, false]))\r\n});\r\nexport const saveSynergy = (button) => {\r\n    player.offlinetick = Date.now();\r\n    player.loaded1009 = true;\r\n    player.loaded1009hotfix1 = true;\r\n    const p = Object.assign({}, player, {\r\n        codes: Array.from(player.codes)\r\n    });\r\n    localStorage.setItem('Synergysave2', btoa(JSON.stringify(p)));\r\n    if (button) {\r\n        const el = document.getElementById('saveinfo');\r\n        el.textContent = 'Game saved successfully!';\r\n        setTimeout(() => el.textContent = '', 4000);\r\n    }\r\n};\r\nexport const loadSynergy = () => {\r\n    const save = localStorage.getItem(\"Synergysave2\");\r\n    const data = save ? JSON.parse(atob(save)) : null;\r\n    if (isTesting) {\r\n        Object.defineProperty(window, 'player', {\r\n            value: player\r\n        });\r\n    }\r\n    if (data) {\r\n        const hasOwnProperty = {}.hasOwnProperty;\r\n        const oldCodesUsed = Array.from({ length: 24 }, (_, i) => 'offerpromo' + (i + 1) + 'used');\r\n        const size = player.codes.size;\r\n        const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'));\r\n        if (oldPromoKeys.length > 0) {\r\n            oldPromoKeys.forEach(k => {\r\n                const value = data[k];\r\n                const num = +k.replace(/[^\\d]/g, '');\r\n                player.codes.set(num, Boolean(value));\r\n            });\r\n        }\r\n        Object.keys(data).forEach(function (prop) {\r\n            if (!hasOwnProperty.call(player, prop)) {\r\n                return;\r\n            }\r\n            if (isDecimal(player[prop])) {\r\n                return (player[prop] = new Decimal(data[prop]));\r\n            }\r\n            else if (prop === 'codes') {\r\n                return (player.codes = new Map(data[prop]));\r\n            }\r\n            else if (oldCodesUsed.includes(prop)) {\r\n                return;\r\n            }\r\n            else if (Array.isArray(data[prop])) {\r\n                if (player[prop].length < data[prop].length) {\r\n                    return player[prop] = data[prop].slice(data[prop].length - player[prop].length);\r\n                }\r\n            }\r\n            return (player[prop] = data[prop]);\r\n        });\r\n        if (data.offerpromo24used !== undefined) {\r\n            player.codes.set(25, false);\r\n        }\r\n        if (player.codes.size < size) {\r\n            for (let i = player.codes.size + 1; i <= size; i++) {\r\n                if (!player.codes.has(i)) {\r\n                    player.codes.set(i, false);\r\n                }\r\n            }\r\n        }\r\n        if (player.codes.size < size) {\r\n            for (let i = player.codes.size + 1; i <= size; i++) {\r\n                if (!player.codes.has(i)) {\r\n                    player.codes.set(i, false);\r\n                }\r\n            }\r\n        }\r\n        if (!('rngCode' in data)) {\r\n            player.rngCode = 0;\r\n        }\r\n        if (data.loaded1009 === undefined || !data.loaded1009) {\r\n            player.loaded1009 = false;\r\n        }\r\n        if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\r\n            player.loaded1009hotfix1 = false;\r\n        }\r\n        if (data.loaded10091 === undefined) {\r\n            player.loaded10091 = false;\r\n        }\r\n        if (data.loaded1010 === undefined) {\r\n            player.loaded1010 = false;\r\n        }\r\n        if (data.loaded10101 === undefined) {\r\n            player.loaded10101 = false;\r\n        }\r\n        if (player.researches[76] === undefined) {\r\n            player.codes.set(13, false);\r\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            player.maxofferings = player.runeshards;\r\n            player.maxobtainium = player.researchPoints;\r\n            player.researchPoints += 51200 * player.researches[50];\r\n            player.researches[50] = 0;\r\n            player.offeringlocktoggle = false;\r\n            player.obtainiumlocktoggle = false;\r\n        }\r\n        player.maxofferings = player.maxofferings || 0;\r\n        player.maxobtainium = player.maxobtainium || 0;\r\n        player.runeshards = player.runeshards || 0;\r\n        player.researchPoints = player.researchPoints || 0;\r\n        if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades.offeringPotion === undefined) {\r\n            player.firstOwnedParticles = 0;\r\n            player.secondOwnedParticles = 0;\r\n            player.thirdOwnedParticles = 0;\r\n            player.fourthOwnedParticles = 0;\r\n            player.fifthOwnedParticles = 0;\r\n            player.firstCostParticles = new Decimal(\"1\");\r\n            player.secondCostParticles = new Decimal(\"1e2\");\r\n            player.thirdCostParticles = new Decimal(\"1e4\");\r\n            player.fourthCostParticles = new Decimal(\"1e8\");\r\n            player.fifthCostParticles = new Decimal(\"1e16\");\r\n            player.autoSacrificeToggle = false;\r\n            player.autoResearchToggle = false;\r\n            player.autoResearch = 0;\r\n            player.autoSacrifice = 0;\r\n            player.sacrificeTimer = 0;\r\n            player.loaded1009 = true;\r\n            player.codes.set(18, false);\r\n            player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades);\r\n        }\r\n        if (!data.loaded1009hotfix1) {\r\n            player.loaded1009hotfix1 = true;\r\n            player.codes.set(19, true);\r\n            player.firstOwnedParticles = 0;\r\n            player.secondOwnedParticles = 0;\r\n            player.thirdOwnedParticles = 0;\r\n            player.fourthOwnedParticles = 0;\r\n            player.fifthOwnedParticles = 0;\r\n            player.firstCostParticles = new Decimal(\"1\");\r\n            player.secondCostParticles = new Decimal(\"1e2\");\r\n            player.thirdCostParticles = new Decimal(\"1e4\");\r\n            player.fourthCostParticles = new Decimal(\"1e8\");\r\n            player.fifthCostParticles = new Decimal(\"1e16\");\r\n        }\r\n        if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\r\n            player.loaded10091 = true;\r\n            player.researchPoints += 7.5e8 * player.researches[82];\r\n            player.researchPoints += 2e8 * player.researches[83];\r\n            player.researchPoints += 4.5e9 * player.researches[84];\r\n            player.researchPoints += 2.5e7 * player.researches[86];\r\n            player.researchPoints += 7.5e7 * player.researches[87];\r\n            player.researchPoints += 3e8 * player.researches[88];\r\n            player.researchPoints += 1e9 * player.researches[89];\r\n            player.researchPoints += 2.5e7 * player.researches[90];\r\n            player.researchPoints += 1e8 * player.researches[91];\r\n            player.researchPoints += 2e9 * player.researches[92];\r\n            player.researchPoints += 9e9 * player.researches[93];\r\n            player.researchPoints += 7.25e10 * player.researches[94];\r\n            player.researches[86] = 0;\r\n            player.researches[87] = 0;\r\n            player.researches[88] = 0;\r\n            player.researches[89] = 0;\r\n            player.researches[90] = 0;\r\n            player.researches[91] = 0;\r\n            player.researches[92] = 0;\r\n        }\r\n        if (data.achievements[169] === undefined || player.achievements[169] === undefined || data.shopUpgrades.antSpeedLevel === undefined || player.shopUpgrades.antSpeedLevel === undefined || data.loaded1010 === undefined || data.loaded1010 === false) {\r\n            player.loaded1010 = true;\r\n            player.codes.set(21, false);\r\n            player.firstOwnedAnts = 0;\r\n            player.firstGeneratedAnts = new Decimal(\"0\");\r\n            player.firstCostAnts = new Decimal(\"1e800\");\r\n            player.firstProduceAnts = .0001;\r\n            player.secondOwnedAnts = 0;\r\n            player.secondGeneratedAnts = new Decimal(\"0\");\r\n            player.secondCostAnts = new Decimal(\"3\");\r\n            player.secondProduceAnts = .00005;\r\n            player.thirdOwnedAnts = 0;\r\n            player.thirdGeneratedAnts = new Decimal(\"0\");\r\n            player.thirdCostAnts = new Decimal(\"100\");\r\n            player.thirdProduceAnts = .00002;\r\n            player.fourthOwnedAnts = 0;\r\n            player.fourthGeneratedAnts = new Decimal(\"0\");\r\n            player.fourthCostAnts = new Decimal(\"1e4\");\r\n            player.fourthProduceAnts = .00001;\r\n            player.fifthOwnedAnts = 0;\r\n            player.fifthGeneratedAnts = new Decimal(\"0\");\r\n            player.fifthCostAnts = new Decimal(\"1e12\");\r\n            player.fifthProduceAnts = .000005;\r\n            player.sixthOwnedAnts = 0;\r\n            player.sixthGeneratedAnts = new Decimal(\"0\");\r\n            player.sixthCostAnts = new Decimal(\"1e36\");\r\n            player.sixthProduceAnts = .000002;\r\n            player.seventhOwnedAnts = 0;\r\n            player.seventhGeneratedAnts = new Decimal(\"0\");\r\n            player.seventhCostAnts = new Decimal(\"1e100\");\r\n            player.seventhProduceAnts = .000001;\r\n            player.eighthOwnedAnts = 0;\r\n            player.eighthGeneratedAnts = new Decimal(\"0\");\r\n            player.eighthCostAnts = new Decimal(\"1e300\");\r\n            player.eighthProduceAnts = .00000001;\r\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            player.antPoints = new Decimal(\"1\");\r\n            player.upgrades[38] = 0;\r\n            player.upgrades[39] = 0;\r\n            player.upgrades[40] = 0;\r\n            player.upgrades[76] = 0;\r\n            player.upgrades[77] = 0;\r\n            player.upgrades[78] = 0;\r\n            player.upgrades[79] = 0;\r\n            player.upgrades[80] = 0;\r\n            player.shopUpgrades.antSpeedLevel = 0;\r\n            player.shopUpgrades.talismanBought = false;\r\n            player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n            player.unlocks.rrow4 = false;\r\n            player.researchPoints += 3e7 * player.researches[50];\r\n            player.researchPoints += 2e9 * player.researches[96];\r\n            player.researchPoints += 5e9 * player.researches[97];\r\n            player.researchPoints += 3e10 * player.researches[98];\r\n            player.researches[50] = 0;\r\n            player.researches[96] = 0;\r\n            player.researches[97] = 0;\r\n            player.researches[98] = 0;\r\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n            player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\r\n            player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\r\n            player.talismanShards = 0;\r\n            player.commonFragments = 0;\r\n            player.uncommonFragments = 0;\r\n            player.rareFragments = 0;\r\n            player.epicFragments = 0;\r\n            player.legendaryFragments = 0;\r\n            player.mythicalFragments = 0;\r\n            player.buyTalismanShardPercent = 10;\r\n            player.talismanOne = [null, -1, 1, 1, 1, -1];\r\n            player.talismanTwo = [null, 1, 1, -1, -1, 1];\r\n            player.talismanThree = [null, 1, -1, 1, 1, -1];\r\n            player.talismanFour = [null, -1, -1, 1, 1, 1];\r\n            player.talismanFive = [null, 1, 1, -1, -1, 1];\r\n            player.talismanSix = [null, 1, 1, 1, -1, -1];\r\n            player.talismanSeven = [null, -1, 1, -1, 1, 1];\r\n            player.antSacrificePoints = 0;\r\n            player.antSacrificeTimer = 0;\r\n            player.obtainiumpersecond = 0;\r\n            player.maxobtainiumpersecond = 0;\r\n        }\r\n        if (data.loaded10101 === undefined || data.loaded10101 === false) {\r\n            player.loaded10101 = true;\r\n            const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\r\n                81, 98, 104, 105, 106, 107, 108,\r\n                109, 110, 111, 112, 113, 114, 115, 116,\r\n                117, 118, 119, 120, 121, 122, 123, 125];\r\n            const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\r\n                2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\r\n                2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\r\n                2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20];\r\n            for (let i = 1; i < refundThese.length; i++) {\r\n                player.researchPoints += player.researches[refundThese[i]] * refundReward[i];\r\n                player.researches[refundThese[i]] = 0;\r\n            }\r\n            player.autoAntSacrifice = false;\r\n            player.antMax = false;\r\n        }\r\n        if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte(\"1e1200\")) {\r\n            player.firstCostAnts = new Decimal(\"1e800\");\r\n            player.firstOwnedAnts = 0;\r\n        }\r\n        checkVariablesOnLoad(data);\r\n        if (data.ascensionCount === undefined || player.ascensionCount === 0) {\r\n            player.ascensionCount = 0;\r\n            if (player.ascensionCounter === undefined || (player.ascensionCounter === 0 && player.prestigeCount > 0)) {\r\n                player.ascensionCounter = 86400 * 90;\r\n            }\r\n            player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n            player.wowCubes = 0;\r\n            player.wowTesseracts = 0;\r\n            player.wowHypercubes = 0;\r\n            player.cubeBlessings = {\r\n                accelerator: 0,\r\n                multiplier: 0,\r\n                offering: 0,\r\n                runeExp: 0,\r\n                obtainium: 0,\r\n                antSpeed: 0,\r\n                antSacrifice: 0,\r\n                antELO: 0,\r\n                talismanBonus: 0,\r\n                globalSpeed: 0\r\n            };\r\n            player.cubesThisAscension.challenges = 0;\r\n            player.cubesThisAscension.reincarnation = 0;\r\n            player.cubesThisAscension.ascension = 0;\r\n            player.cubesThisAscension.maxCubesPerSec = 0;\r\n            player.cubesThisAscension.maxAllTime = 0;\r\n            player.cubesThisAscension.cpsOnC10Comp = 0;\r\n            player.cubesThisAscension.tesseracts = 0;\r\n            player.cubesThisAscension.hypercubes = 0;\r\n        }\r\n        if (data.autoAntSacTimer === undefined) {\r\n            player.autoAntSacTimer = 900;\r\n        }\r\n        if (data.autoAntSacrificeMode === undefined) {\r\n            player.autoAntSacrificeMode = 0;\r\n        }\r\n        if (player.cubeUpgrades[7] === 0 && player.toggles[22]) {\r\n            for (let i = 22; i <= 26; i++) {\r\n                player.toggles[i] = false;\r\n            }\r\n        }\r\n        if (player.transcendCount < 0) {\r\n            player.transcendCount = 0;\r\n        }\r\n        if (player.reincarnationCount < 0) {\r\n            player.reincarnationCount = 0;\r\n        }\r\n        if (player.runeshards < 0) {\r\n            player.runeshards = 0;\r\n        }\r\n        if (player.researchPoints < 0) {\r\n            player.researchPoints = 0;\r\n        }\r\n        if (player.resettoggle1 === 0) {\r\n            player.resettoggle1 = 1;\r\n            player.resettoggle2 = 1;\r\n            player.resettoggle3 = 1;\r\n        }\r\n        if (player.tesseractAutoBuyerToggle === 0) {\r\n            player.tesseractAutoBuyerToggle = 1;\r\n        }\r\n        if (player.reincarnationCount < 0.5 && player.unlocks.rrow4 === true) {\r\n            player.unlocks = {\r\n                coinone: false,\r\n                cointwo: false,\r\n                cointhree: false,\r\n                coinfour: false,\r\n                prestige: false,\r\n                generation: false,\r\n                transcend: false,\r\n                reincarnate: false,\r\n                rrow1: false,\r\n                rrow2: false,\r\n                rrow3: false,\r\n                rrow4: false\r\n            };\r\n        }\r\n        if (data.history === undefined || player.history === undefined) {\r\n            player.history = {};\r\n        }\r\n        if (data.historyShowPerSecond === undefined || player.historyShowPerSecond === undefined) {\r\n            player.historyShowPerSecond = false;\r\n            player.historyCountMax = 10;\r\n        }\r\n        if (player.currentChallenge.transcension === undefined) {\r\n            player.currentChallenge = {\r\n                transcension: 0,\r\n                reincarnation: 0,\r\n                ascension: 0,\r\n            };\r\n        }\r\n        if (!Number.isInteger(player.ascendBuilding1.cost)) {\r\n            player.ascendBuilding1.cost = 1;\r\n            player.ascendBuilding1.owned = 0;\r\n            player.ascendBuilding2.cost = 10;\r\n            player.ascendBuilding2.owned = 0;\r\n            player.ascendBuilding3.cost = 100;\r\n            player.ascendBuilding3.owned = 0;\r\n            player.ascendBuilding4.cost = 1000;\r\n            player.ascendBuilding4.owned = 0;\r\n            player.ascendBuilding5.cost = 10000;\r\n            player.ascendBuilding5.owned = 0;\r\n        }\r\n        if (!player.dayCheck) {\r\n            player.dayCheck = new Date(player.dayCheck);\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            player['ascendBuilding' + i].generated = new Decimal(player['ascendBuilding' + i].generated);\r\n        }\r\n        while (player.achievements[252] === undefined) {\r\n            player.achievements.push(0);\r\n        }\r\n        while (player.researches[200] === undefined) {\r\n            player.researches.push(0);\r\n        }\r\n        while (player.upgrades[140] === undefined) {\r\n            player.upgrades.push(0);\r\n        }\r\n        if (player.saveString === undefined || player.saveString === \"\" || player.saveString === \"Synergism-v1011Test.txt\") {\r\n            player.saveString = \"Synergism-$VERSION$-$TIME$.txt\";\r\n        }\r\n        getElementById(\"saveStringInput\").value = player.saveString;\r\n        player.wowCubes = player.wowCubes || 0;\r\n        if (!player.cubesThisAscension.maxAllTime)\r\n            player.cubesThisAscension.maxAllTime = 0;\r\n        if (!player.cubesThisAscension.cpsOnC10Comp)\r\n            player.cubesThisAscension.cpsOnC10Comp = 0;\r\n        if (!player.cubesThisAscension.tesseracts)\r\n            player.cubesThisAscension.tesseracts = 0;\r\n        if (!player.cubesThisAscension.hypercubes)\r\n            player.cubesThisAscension.hypercubes = 0;\r\n        for (let j = 1; j < 126; j++) {\r\n            upgradeupdate(j);\r\n        }\r\n        for (let j = 1; j <= (200); j++) {\r\n            updateResearchBG(j);\r\n        }\r\n        for (let j = 1; j <= 50; j++) {\r\n            updateCubeUpgradeBG(j);\r\n        }\r\n        player.subtabNumber = 0;\r\n        G['runescreen'] = \"runes\";\r\n        document.getElementById(\"toggleRuneSubTab1\").style.backgroundColor = 'crimson';\r\n        document.getElementById(\"toggleRuneSubTab1\").style.border = '2px solid gold';\r\n        const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'];\r\n        if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\r\n            player.coinbuyamount = 1;\r\n        }\r\n        if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\r\n            player.crystalbuyamount = 1;\r\n        }\r\n        if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\r\n            player.mythosbuyamount = 1;\r\n        }\r\n        if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\r\n            player.particlebuyamount = 1;\r\n        }\r\n        if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\r\n            player.offeringbuyamount = 1;\r\n        }\r\n        if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\r\n            player.tesseractbuyamount = 1;\r\n        }\r\n        for (let j = 0; j <= 5; j++) {\r\n            for (let k = 0; k < 4; k++) {\r\n                let d;\r\n                if (k === 0) {\r\n                    d = 'one';\r\n                }\r\n                if (k === 1) {\r\n                    d = 'ten';\r\n                }\r\n                if (k === 2) {\r\n                    d = 'hundred';\r\n                }\r\n                if (k === 3) {\r\n                    d = 'thousand';\r\n                }\r\n                const e = q[j] + d;\r\n                document.getElementById(e).style.backgroundColor = \"#000000\";\r\n            }\r\n            let c;\r\n            if (player[q[j] + 'buyamount'] === 1) {\r\n                c = 'one';\r\n            }\r\n            if (player[q[j] + 'buyamount'] === 10) {\r\n                c = 'ten';\r\n            }\r\n            if (player[q[j] + 'buyamount'] === 100) {\r\n                c = 'hundred';\r\n            }\r\n            if (player[q[j] + 'buyamount'] === 1000) {\r\n                c = 'thousand';\r\n            }\r\n            const b = q[j] + c;\r\n            document.getElementById(b).style.backgroundColor = \"green\";\r\n        }\r\n        const testArray = [];\r\n        for (let i = 0; i < G['researchBaseCosts'].length; i++) {\r\n            testArray.push(G['researchBaseCosts'][i]);\r\n        }\r\n        G['researchOrderByCost'] = sortWithIndeces(testArray);\r\n        player.roombaResearchIndex = 0;\r\n        if (player.shoptoggles.coin === false) {\r\n            document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\r\n        }\r\n        if (player.shoptoggles.prestige === false) {\r\n            document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\r\n        }\r\n        if (player.shoptoggles.transcend === false) {\r\n            document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\r\n        }\r\n        if (player.shoptoggles.generators === false) {\r\n            document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\r\n        }\r\n        if (!player.shoptoggles.reincarnate) {\r\n            document.getElementById('particleAutoUpgrade').textContent = \"Auto: OFF\";\r\n        }\r\n        getChallengeConditions();\r\n        updateChallengeDisplay();\r\n        revealStuff();\r\n        toggleauto();\r\n        document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\r\n        getElementById(\"startAutoChallengeTimerInput\").value = player.autoChallengeTimer.start + '';\r\n        document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\r\n        getElementById(\"exitAutoChallengeTimerInput\").value = player.autoChallengeTimer.exit + '';\r\n        document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\r\n        getElementById(\"enterAutoChallengeTimerInput\").value = player.autoChallengeTimer.enter + '';\r\n        for (let i = 0; i < 4; i++) {\r\n            corruptionLoadoutTableUpdate(i);\r\n        }\r\n        showCorruptionStatsLoadouts();\r\n        for (let j = 1; j <= 5; j++) {\r\n            const ouch = document.getElementById(\"tesseractAutoToggle\" + j);\r\n            (player.autoTesseracts[j]) ?\r\n                (ouch.textContent = \"Auto [ON]\", ouch.style.border = \"2px solid green\") :\r\n                (ouch.textContent = \"Auto [OFF]\", ouch.style.border = \"2px solid red\");\r\n        }\r\n        document.getElementById(\"buyRuneBlessingToggleValue\").textContent = format(player.runeBlessingBuyAmount, 0, true);\r\n        document.getElementById(\"buyRuneSpiritToggleValue\").textContent = format(player.runeSpiritBuyAmount, 0, true);\r\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\r\n        document.getElementById(\"talismanlevelup\").style.display = \"none\";\r\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n        calculatePlatonicBlessings();\r\n        calculateHypercubeBlessings();\r\n        calculateTesseractBlessings();\r\n        calculateCubeBlessings();\r\n        updateTalismanAppearance(1);\r\n        updateTalismanAppearance(2);\r\n        updateTalismanAppearance(3);\r\n        updateTalismanAppearance(4);\r\n        updateTalismanAppearance(5);\r\n        updateTalismanAppearance(6);\r\n        updateTalismanAppearance(7);\r\n        for (const id in player.ascStatToggles) {\r\n            toggleAscStatPerSecond(+id);\r\n            toggleAscStatPerSecond(+id);\r\n        }\r\n        if (player.resettoggle1 === 1) {\r\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n        if (player.resettoggle2 === 1) {\r\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n        if (player.resettoggle3 === 1) {\r\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n        if (player.resettoggle1 === 2) {\r\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        if (player.resettoggle2 === 2) {\r\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        if (player.resettoggle3 === 2) {\r\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        if (player.tesseractAutoBuyerToggle === 1) {\r\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\r\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\r\n        }\r\n        if (player.tesseractAutoBuyerToggle === 2) {\r\n            document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\r\n            document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\r\n        }\r\n        if (player.autoResearchToggle) {\r\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: ON\";\r\n        }\r\n        if (!player.autoResearchToggle) {\r\n            document.getElementById(\"toggleautoresearch\").textContent = \"Automatic: OFF\";\r\n        }\r\n        if (player.autoSacrificeToggle == true) {\r\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: ON\";\r\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\r\n        }\r\n        if (player.autoSacrificeToggle == false) {\r\n            document.getElementById(\"toggleautosacrifice\").textContent = \"Auto Rune: OFF\";\r\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\r\n        }\r\n        if (player.autoFortifyToggle == true) {\r\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: ON\";\r\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid green\";\r\n        }\r\n        if (player.autoFortifyToggle == false) {\r\n            document.getElementById(\"toggleautofortify\").textContent = \"Auto Fortify: OFF\";\r\n            document.getElementById(\"toggleautofortify\").style.border = \"2px solid red\";\r\n        }\r\n        if (player.autoEnhanceToggle == true) {\r\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: ON\";\r\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid green\";\r\n        }\r\n        if (player.autoEnhanceToggle == false) {\r\n            document.getElementById(\"toggleautoenhance\").textContent = \"Auto Enhance: OFF\";\r\n            document.getElementById(\"toggleautoenhance\").style.border = \"2px solid red\";\r\n        }\r\n        if (!player.autoAscend) {\r\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\r\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\r\n        }\r\n        for (let i = 1; i <= 2; i++) {\r\n            toggleAntMaxBuy();\r\n            toggleAntAutoSacrifice(0);\r\n            toggleAntAutoSacrifice(1);\r\n        }\r\n        document.getElementById(\"historyTogglePerSecondButton\").textContent = \"Per second: \" + (player.historyShowPerSecond ? \"ON\" : \"OFF\");\r\n        document.getElementById(\"historyTogglePerSecondButton\").style.borderColor = (player.historyShowPerSecond ? \"green\" : \"red\");\r\n        if (!player.autoAscend) {\r\n            document.getElementById(\"ascensionAutoEnable\").textContent = \"Auto Ascend [OFF]\";\r\n            document.getElementById(\"ascensionAutoEnable\").style.border = \"2px solid red\";\r\n        }\r\n        player.autoResearch = Math.min(200, player.autoResearch);\r\n        player.autoSacrifice = Math.min(5, player.autoSacrifice);\r\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\r\n            document.getElementById(\"res\" + player.autoResearch).style.backgroundColor = \"orange\";\r\n        }\r\n        if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\r\n            document.getElementById(\"rune\" + player.autoSacrifice).style.backgroundColor = \"orange\";\r\n        }\r\n        calculateOffline();\r\n        toggleTalismanBuy(player.buyTalismanShardPercent);\r\n        updateTalismanInventory();\r\n        calculateObtainium();\r\n        calculateAnts();\r\n        calculateRuneLevels();\r\n        resetHistoryRenderAllTables();\r\n        c15RewardUpdate();\r\n    }\r\n    CSSAscend();\r\n    CSSRuneBlessings();\r\n    updateAchievementBG();\r\n    const d = new Date();\r\n    const h = d.getHours();\r\n    const m = d.getMinutes();\r\n    const s = d.getSeconds();\r\n    player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h));\r\n};\r\nexport const format = (input, accuracy = 0, long = false) => {\r\n    if (!(input instanceof Decimal) && typeof input !== 'number') {\r\n        return '0 [und.]';\r\n    }\r\n    let power;\r\n    let mantissa;\r\n    if (isDecimal(input)) {\r\n        power = input.e;\r\n        mantissa = input.mantissa;\r\n    }\r\n    else if (typeof input === 'number') {\r\n        if (input === 0) {\r\n            return '0';\r\n        }\r\n        power = Math.floor(Math.log10(Math.abs(input)));\r\n        mantissa = input / Math.pow(10, power);\r\n    }\r\n    if (mantissa > 9.9999999) {\r\n        mantissa = 1;\r\n        ++power;\r\n    }\r\n    if (mantissa < 1 && mantissa > 0.9999999) {\r\n        mantissa = 1;\r\n    }\r\n    if (power < -12) {\r\n        return '0';\r\n    }\r\n    else if (power < 6 || (long && power < 13)) {\r\n        let standard = mantissa * Math.pow(10, power);\r\n        if (standard - Math.floor(standard) > 0.9999999) {\r\n            standard = Math.ceil(standard);\r\n        }\r\n        if ((power < 1 || (long && power < 3)) && accuracy > 0) {\r\n            standard = Number(standard.toFixed(accuracy));\r\n        }\r\n        else {\r\n            standard = Math.floor(standard);\r\n        }\r\n        const standardString = standard.toString();\r\n        const [front, back] = standardString.split('.');\r\n        const frontFormatted = typeof BigInt === 'function'\r\n            ? BigInt(front).toLocaleString()\r\n            : front.replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\r\n        return !back\r\n            ? frontFormatted\r\n            : `${frontFormatted}.${back}`;\r\n    }\r\n    else if (power < 1e6) {\r\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toFixed(2);\r\n        const powerLook = typeof BigInt === 'function'\r\n            ? BigInt(power).toLocaleString()\r\n            : power.toString().replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\r\n        return `${mantissaLook}e${powerLook}`;\r\n    }\r\n    else if (power >= 1e6) {\r\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toFixed(2);\r\n        const powerDigits = Math.ceil(Math.log10(power));\r\n        let powerFront = ((powerDigits - 1) % 3) + 1;\r\n        let powerLook = power / Math.pow(10, powerDigits - powerFront);\r\n        if (powerLook === 1000) {\r\n            powerLook = 1;\r\n            powerFront = 1;\r\n        }\r\n        const powerLookF = powerLook.toFixed(4 - powerFront);\r\n        if (power < 1e9) {\r\n            return `${mantissaLook}e${powerLookF}M`;\r\n        }\r\n        if (power < 1e12) {\r\n            return `${mantissaLook}e${powerLookF}B`;\r\n        }\r\n        if (power < 1e15) {\r\n            return `${mantissaLook}e${powerLookF}T`;\r\n        }\r\n        if (power < 1e18) {\r\n            return `${mantissaLook}e${powerLookF}Qa`;\r\n        }\r\n        if (power < 1e21) {\r\n            return `${mantissaLook}e${powerLookF}Qi`;\r\n        }\r\n        if (power < 1e24) {\r\n            return `${mantissaLook}e${powerLookF}Sx`;\r\n        }\r\n        if (power < 1e27) {\r\n            return `${mantissaLook}e${powerLookF}Sp`;\r\n        }\r\n        if (power < 1e30) {\r\n            return `${mantissaLook}e${powerLookF}Oc`;\r\n        }\r\n        if (power < 1e33) {\r\n            return `${mantissaLook}e${powerLookF}No`;\r\n        }\r\n        if (power < 1e36) {\r\n            return `${mantissaLook}e${powerLookF}Dc`;\r\n        }\r\n        if (power < 1e39) {\r\n            return `${mantissaLook}e${powerLookF}UDc`;\r\n        }\r\n        if (power < 1e42) {\r\n            return `${mantissaLook}e${powerLookF}DDc`;\r\n        }\r\n        if (power < 1e45) {\r\n            return `${mantissaLook}e${powerLookF}TDc`;\r\n        }\r\n        if (power < 1e48) {\r\n            return `${mantissaLook}e${powerLookF}QaDc`;\r\n        }\r\n        if (power < 1e51) {\r\n            return `${mantissaLook}e${powerLookF}QaDc`;\r\n        }\r\n        return `${mantissa}e${power}`;\r\n    }\r\n    else {\r\n        return `0 [und.]`;\r\n    }\r\n};\r\nexport const formatTimeShort = (seconds, msMaxSeconds) => {\r\n    return ((seconds >= 86400)\r\n        ? format(Math.floor(seconds / 86400)) + \"d\"\r\n        : '') +\r\n        ((seconds >= 3600)\r\n            ? format(Math.floor(seconds / 3600) % 24) + \"h\"\r\n            : '') +\r\n        ((seconds >= 60)\r\n            ? format(Math.floor(seconds / 60) % 60) + \"m\"\r\n            : '') +\r\n        format(Math.floor(seconds) % 60) +\r\n        ((msMaxSeconds && seconds < msMaxSeconds)\r\n            ? \".\" + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0'))\r\n            : '') + \"s\";\r\n};\r\nexport const updateCubesPerSec = () => {\r\n    const c = player.cubesThisAscension.challenges, r = player.cubesThisAscension.reincarnation, a = player.cubesThisAscension.ascension;\r\n    if (player.challengecompletions[10] > 0) {\r\n        if (player.challengecompletions[10] === 1) {\r\n            player.cubesThisAscension.cpsOnC10Comp = (c + r + a) / player.ascensionCounter;\r\n        }\r\n        player.cubesThisAscension.maxCubesPerSec = Math.max(player.cubesThisAscension.maxCubesPerSec, (c + r + a) / player.ascensionCounter);\r\n        player.cubesThisAscension.maxAllTime = Math.max(player.cubesThisAscension.maxAllTime, player.cubesThisAscension.maxCubesPerSec);\r\n    }\r\n};\r\nexport const updateAllTick = () => {\r\n    let a = 0;\r\n    G['totalAccelerator'] = player.acceleratorBought;\r\n    G['costDivisor'] = 1;\r\n    if (player.upgrades[8] !== 0) {\r\n        a += Math.floor(player.multiplierBought / 7);\r\n    }\r\n    if (player.upgrades[21] !== 0) {\r\n        a += 5;\r\n    }\r\n    if (player.upgrades[22] !== 0) {\r\n        a += 4;\r\n    }\r\n    if (player.upgrades[23] !== 0) {\r\n        a += 3;\r\n    }\r\n    if (player.upgrades[24] !== 0) {\r\n        a += 2;\r\n    }\r\n    if (player.upgrades[25] !== 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[27] !== 0) {\r\n        a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50));\r\n    }\r\n    if (player.upgrades[29] !== 0) {\r\n        a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80));\r\n    }\r\n    if (player.upgrades[32] !== 0) {\r\n        a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)));\r\n    }\r\n    if (player.upgrades[45] !== 0) {\r\n        a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)));\r\n    }\r\n    if (player.achievements[5] !== 0) {\r\n        a += Math.floor(player.firstOwnedCoin / 500);\r\n    }\r\n    if (player.achievements[12] !== 0) {\r\n        a += Math.floor(player.secondOwnedCoin / 500);\r\n    }\r\n    if (player.achievements[19] !== 0) {\r\n        a += Math.floor(player.thirdOwnedCoin / 500);\r\n    }\r\n    if (player.achievements[26] !== 0) {\r\n        a += Math.floor(player.fourthOwnedCoin / 500);\r\n    }\r\n    if (player.achievements[33] !== 0) {\r\n        a += Math.floor(player.fifthOwnedCoin / 500);\r\n    }\r\n    if (player.achievements[60] !== 0) {\r\n        a += 2;\r\n    }\r\n    if (player.achievements[61] !== 0) {\r\n        a += 2;\r\n    }\r\n    if (player.achievements[62] !== 0) {\r\n        a += 2;\r\n    }\r\n    a += 5 * CalcECC('transcend', player.challengecompletions[2]);\r\n    G['freeUpgradeAccelerator'] = a;\r\n    a += G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]);\r\n    if (player.unlocks.prestige === true) {\r\n        a += Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 4, 1.25));\r\n        a *= (1 + G['rune1level'] * 1 / 400 * G['effectiveLevelMult']);\r\n    }\r\n    calculateAcceleratorMultiplier();\r\n    a *= G['acceleratorMultiplier'];\r\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['maladaptivePower'][player.usedCorruptions[2]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\r\n    a *= G['challenge15Rewards'].accelerator;\r\n    a = Math.floor(a);\r\n    G['freeAccelerator'] = a;\r\n    G['totalAccelerator'] += G['freeAccelerator'];\r\n    G['tuSevenMulti'] = 1;\r\n    if (player.upgrades[46] > 0.5) {\r\n        G['tuSevenMulti'] = 1.05;\r\n    }\r\n    G['acceleratorPower'] = Math.pow(1.1 + G['tuSevenMulti'] *\r\n        (G['totalAcceleratorBoost'] / 100)\r\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20), 1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]));\r\n    G['acceleratorPower'] += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100;\r\n    for (let i = 1; i <= 5; i++) {\r\n        if (player.achievements[7 * i - 4] > 0) {\r\n            G['acceleratorPower'] += 0.0005 * i;\r\n        }\r\n    }\r\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n        if (player.currentChallenge.transcension === 1) {\r\n            G['acceleratorPower'] *= 25 / (50 + player.challengecompletions[1]);\r\n            G['acceleratorPower'] += 0.55;\r\n            G['acceleratorPower'] = Math.max(1, G['acceleratorPower']);\r\n        }\r\n        if (player.currentChallenge.transcension === 2) {\r\n            G['acceleratorPower'] = 1;\r\n        }\r\n        if (player.currentChallenge.transcension === 3) {\r\n            G['acceleratorPower'] =\r\n                1.05 +\r\n                    2 * G['tuSevenMulti'] *\r\n                        (G['totalAcceleratorBoost'] / 300) *\r\n                        (1 + CalcECC('transcend', player.challengecompletions[2]) / 20);\r\n        }\r\n    }\r\n    if (player.currentChallenge.reincarnation === 7) {\r\n        G['acceleratorPower'] = 1;\r\n    }\r\n    if (player.currentChallenge.reincarnation === 10) {\r\n        G['acceleratorPower'] = 1;\r\n    }\r\n    if (player.currentChallenge.transcension !== 1) {\r\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator']);\r\n    }\r\n    if (player.currentChallenge.transcension === 1) {\r\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator'] + G['totalMultiplier']);\r\n    }\r\n    G['acceleratorEffectDisplay'] = new Decimal(G['acceleratorPower'] * 100 - 100);\r\n    if (player.currentChallenge.reincarnation === 10) {\r\n        G['acceleratorEffect'] = new Decimal(1);\r\n    }\r\n    G['generatorPower'] = new Decimal(1);\r\n    if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\r\n        G['generatorPower'] = Decimal.pow(1.02, G['totalAccelerator']);\r\n    }\r\n};\r\nexport const updateAllMultiplier = () => {\r\n    let a = 0;\r\n    if (player.upgrades[7] > 0) {\r\n        a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)));\r\n    }\r\n    if (player.upgrades[9] > 0) {\r\n        a += Math.floor(player.acceleratorBought / 10);\r\n    }\r\n    if (player.upgrades[21] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[22] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[23] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[24] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[25] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.upgrades[28] > 0) {\r\n        a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160));\r\n    }\r\n    if (player.upgrades[30] > 0) {\r\n        a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)));\r\n    }\r\n    if (player.upgrades[33] > 0) {\r\n        a += G['totalAcceleratorBoost'];\r\n    }\r\n    if (player.upgrades[49] > 0) {\r\n        a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)));\r\n    }\r\n    if (player.upgrades[68] > 0) {\r\n        a += Math.min(2500, Math.floor(Decimal.log(G['taxdivisor'], 10) * 1 / 1000));\r\n    }\r\n    if (player.challengecompletions[1] > 0) {\r\n        a += 1;\r\n    }\r\n    if (player.achievements[6] > 0.5) {\r\n        a += Math.floor(player.firstOwnedCoin / 1000);\r\n    }\r\n    if (player.achievements[13] > 0.5) {\r\n        a += Math.floor(player.secondOwnedCoin / 1000);\r\n    }\r\n    if (player.achievements[20] > 0.5) {\r\n        a += Math.floor(player.thirdOwnedCoin / 1000);\r\n    }\r\n    if (player.achievements[27] > 0.5) {\r\n        a += Math.floor(player.fourthOwnedCoin / 1000);\r\n    }\r\n    if (player.achievements[34] > 0.5) {\r\n        a += Math.floor(player.fifthOwnedCoin / 1000);\r\n    }\r\n    if (player.achievements[57] > 0.5) {\r\n        a += 1;\r\n    }\r\n    if (player.achievements[58] > 0.5) {\r\n        a += 1;\r\n    }\r\n    if (player.achievements[59] > 0.5) {\r\n        a += 1;\r\n    }\r\n    a += 20 * player.researches[94] * Math.floor((G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']) / 8);\r\n    G['freeUpgradeMultiplier'] = a;\r\n    if (player.achievements[38] > 0.5) {\r\n        a += Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) *\r\n            Math.floor(1 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100;\r\n    }\r\n    a *= (1 + player.achievements[57] / 100);\r\n    a *= (1 + player.achievements[58] / 100);\r\n    a *= (1 + player.achievements[59] / 100);\r\n    a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]);\r\n    if (player.upgrades[34] > 0.5) {\r\n        a *= 1.03 * 100 / 100;\r\n    }\r\n    if (player.upgrades[35] > 0.5) {\r\n        a *= 1.05 / 1.03 * 100 / 100;\r\n    }\r\n    a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\r\n    a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15]);\r\n    a *= (1 + G['rune2level'] / 400 * G['effectiveLevelMult']);\r\n    a *= (1 + 1 / 20 * player.researches[87]);\r\n    a *= (1 + 1 / 100 * player.researches[128]);\r\n    a *= (1 + 0.8 / 100 * player.researches[143]);\r\n    a *= (1 + 0.6 / 100 * player.researches[158]);\r\n    a *= (1 + 0.4 / 100 * player.researches[173]);\r\n    a *= (1 + 0.2 / 100 * player.researches[188]);\r\n    a *= (1 + 0.01 / 100 * player.researches[200]);\r\n    a *= (1 + 0.01 / 100 * player.cubeUpgrades[50]);\r\n    a *= calculateSigmoidExponential(40, (player.antUpgrades[5 - 1] + G['bonusant5']) / 1000 * 40 / 39);\r\n    a *= G['cubeBonusMultiplier'][2];\r\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\r\n        a *= 1.25;\r\n    }\r\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['divisivenessPower'][player.usedCorruptions[1]] / (1 + Math.abs(player.usedCorruptions[1] - player.usedCorruptions[2]))));\r\n    a *= G['challenge15Rewards'].multiplier;\r\n    a = Math.floor(a);\r\n    G['freeMultiplier'] = a;\r\n    G['totalMultiplier'] = G['freeMultiplier'] + player.multiplierBought;\r\n    G['challengeOneLog'] = 3;\r\n    let b = 0;\r\n    let c = 0;\r\n    b += Decimal.log(player.transcendShards.add(1), 3);\r\n    b *= (1 + 11 * player.researches[33] / 100);\r\n    b *= (1 + 11 * player.researches[34] / 100);\r\n    b *= (1 + 11 * player.researches[35] / 100);\r\n    b *= (1 + player.researches[89] / 5);\r\n    b *= (1 + 10 * G['effectiveRuneBlessingPower'][2]);\r\n    c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])));\r\n    c += (CalcECC('transcend', player.challengecompletions[1]) * 10);\r\n    G['freeMultiplierBoost'] = c;\r\n    G['totalMultiplierBoost'] = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04);\r\n    let c7 = 1;\r\n    if (player.challengecompletions[7] > 0.5) {\r\n        c7 = 1.25;\r\n    }\r\n    G['multiplierPower'] = 2 + 0.005 * G['totalMultiplierBoost'] * c7;\r\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\r\n        if (player.currentChallenge.transcension === 1) {\r\n            G['multiplierPower'] = 1;\r\n        }\r\n        if (player.currentChallenge.transcension === 2) {\r\n            G['multiplierPower'] = (1.25 + 0.0012 * (b + c) * c7);\r\n        }\r\n    }\r\n    if (player.currentChallenge.reincarnation === 7) {\r\n        G['multiplierPower'] = 1;\r\n    }\r\n    if (player.currentChallenge.reincarnation === 10) {\r\n        G['multiplierPower'] = 1;\r\n    }\r\n    G['multiplierEffect'] = Decimal.pow(G['multiplierPower'], G['totalMultiplier']);\r\n};\r\nexport const multipliers = () => {\r\n    let s = new Decimal(1);\r\n    let c = new Decimal(1);\r\n    let crystalExponent = 1 / 3;\r\n    crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3]);\r\n    crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3]);\r\n    crystalExponent += 0.08 * player.researches[28];\r\n    crystalExponent += 0.08 * player.researches[29];\r\n    crystalExponent += 0.04 * player.researches[30];\r\n    crystalExponent += 8 * player.cubeUpgrades[17];\r\n    G['prestigeMultiplier'] = Decimal.pow(player.prestigeShards, crystalExponent).add(1);\r\n    let c7 = 1;\r\n    if (player.currentChallenge.reincarnation === 7) {\r\n        c7 = 0.05;\r\n    }\r\n    if (player.currentChallenge.reincarnation === 8) {\r\n        c7 = 0;\r\n    }\r\n    G['buildingPower'] =\r\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(player.reincarnationShards.add(1), 10) *\r\n            (1 + 1 / 20 * player.researches[36] +\r\n                1 / 40 * player.researches[37] + 1 / 40 *\r\n                player.researches[38]) +\r\n            (c7 + 0.2) * 0.25 / 1.2 *\r\n                CalcECC('reincarnation', player.challengecompletions[8]);\r\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[12] * 0.09);\r\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[36] * 0.05);\r\n    G['reincarnationMultiplier'] = Decimal.pow(G['buildingPower'], G['totalCoinOwned']);\r\n    G['antMultiplier'] = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp());\r\n    s = s.times(G['multiplierEffect']);\r\n    s = s.times(G['acceleratorEffect']);\r\n    s = s.times(G['prestigeMultiplier']);\r\n    s = s.times(G['reincarnationMultiplier']);\r\n    s = s.times(G['antMultiplier']);\r\n    const first6CoinUp = new Decimal(G['totalCoinOwned'] + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G['totalCoinOwned'])));\r\n    if (player.upgrades[6] > 0.5) {\r\n        s = s.times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[12] > 0.5) {\r\n        s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)));\r\n    }\r\n    if (player.upgrades[20] > 0.5) {\r\n        s = s.times(Math.pow(G['totalCoinOwned'] / 4 + 1, 10));\r\n    }\r\n    if (player.upgrades[41] > 0.5) {\r\n        s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)));\r\n    }\r\n    if (player.upgrades[43] > 0.5) {\r\n        s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)));\r\n    }\r\n    if (player.upgrades[48] > 0.5) {\r\n        s = s.times(Decimal.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8));\r\n    }\r\n    if (player.currentChallenge.reincarnation === 6) {\r\n        s = s.dividedBy(1e250);\r\n    }\r\n    if (player.currentChallenge.reincarnation === 7) {\r\n        s = s.dividedBy(\"1e1250\");\r\n    }\r\n    if (player.currentChallenge.reincarnation === 9) {\r\n        s = s.dividedBy(\"1e2000000\");\r\n    }\r\n    if (player.currentChallenge.reincarnation === 10) {\r\n        s = s.dividedBy(\"1e12500000\");\r\n    }\r\n    c = Decimal.pow(s, 1 + 0.001 * player.researches[17]);\r\n    let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123]);\r\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\r\n        lol = Decimal.pow(lol, 1.1);\r\n    }\r\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\r\n        lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)));\r\n    }\r\n    lol = Decimal.pow(lol, G['challenge15Rewards'].coinExponent);\r\n    G['globalCoinMultiplier'] = lol;\r\n    G['globalCoinMultiplier'] = Decimal.pow(G['globalCoinMultiplier'], G['financialcollapsePower'][player.usedCorruptions[9]]);\r\n    G['coinOneMulti'] = new Decimal(1);\r\n    if (player.upgrades[1] > 0.5) {\r\n        G['coinOneMulti'] = G['coinOneMulti'].times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[10] > 0.5) {\r\n        G['coinOneMulti'] = G['coinOneMulti'].times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)));\r\n    }\r\n    if (player.upgrades[56] > 0.5) {\r\n        G['coinOneMulti'] = G['coinOneMulti'].times(\"1e5000\");\r\n    }\r\n    G['coinTwoMulti'] = new Decimal(1);\r\n    if (player.upgrades[2] > 0.5) {\r\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[13] > 0.5) {\r\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)));\r\n    }\r\n    if (player.upgrades[19] > 0.5) {\r\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)));\r\n    }\r\n    if (player.upgrades[57] > 0.5) {\r\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(\"1e7500\");\r\n    }\r\n    G['coinThreeMulti'] = new Decimal(1);\r\n    if (player.upgrades[3] > 0.5) {\r\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[18] > 0.5) {\r\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(Decimal.min(1e125, player.transcendShards.add(1)));\r\n    }\r\n    if (player.upgrades[58] > 0.5) {\r\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(\"1e15000\");\r\n    }\r\n    G['coinFourMulti'] = new Decimal(1);\r\n    if (player.upgrades[4] > 0.5) {\r\n        G['coinFourMulti'] = G['coinFourMulti'].times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[17] > 0.5) {\r\n        G['coinFourMulti'] = G['coinFourMulti'].times(1e100);\r\n    }\r\n    if (player.upgrades[59] > 0.5) {\r\n        G['coinFourMulti'] = G['coinFourMulti'].times(\"1e25000\");\r\n    }\r\n    G['coinFiveMulti'] = new Decimal(1);\r\n    if (player.upgrades[5] > 0.5) {\r\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(first6CoinUp);\r\n    }\r\n    if (player.upgrades[60] > 0.5) {\r\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(\"1e35000\");\r\n    }\r\n    G['globalCrystalMultiplier'] = new Decimal(1);\r\n    if (player.achievements[36] > 0.5) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(2);\r\n    }\r\n    if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.log(player.prestigePoints.add(1), 10));\r\n    }\r\n    if (player.achievements[43] > 0.5) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier']\r\n            .times(Decimal.pow(G['rune3level'] / 2 * G['effectiveLevelMult'], 2)\r\n            .times(Decimal.pow(2, G['rune3level'] * G['effectiveLevelMult'] / 2 - 8))\r\n            .add(1));\r\n    }\r\n    if (player.upgrades[36] > 0.5) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)));\r\n    }\r\n    if (player.upgrades[63] > 0.5) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6)));\r\n    }\r\n    if (player.researches[39] > 0.5) {\r\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 50));\r\n    }\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[26]));\r\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[27]));\r\n    G['globalMythosMultiplier'] = new Decimal(1);\r\n    if (player.upgrades[37] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2));\r\n    }\r\n    if (player.upgrades[42] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)));\r\n    }\r\n    if (player.upgrades[47] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Math.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1);\r\n    }\r\n    if (player.upgrades[51] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['totalAcceleratorBoost'], 2));\r\n    }\r\n    if (player.upgrades[52] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['globalMythosMultiplier'], 0.025));\r\n    }\r\n    if (player.upgrades[64] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(player.reincarnationPoints.add(1), 2));\r\n    }\r\n    if (player.researches[40] > 0.5) {\r\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 250));\r\n    }\r\n    G['grandmasterMultiplier'] = new Decimal(1);\r\n    G['totalMythosOwned'] = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos;\r\n    G['mythosBuildingPower'] = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200);\r\n    G['challengeThreeMultiplier'] = Decimal.pow(G['mythosBuildingPower'], G['totalMythosOwned']);\r\n    G['grandmasterMultiplier'] = G['grandmasterMultiplier'].times(G['challengeThreeMultiplier']);\r\n    G['mythosupgrade13'] = new Decimal(1);\r\n    G['mythosupgrade14'] = new Decimal(1);\r\n    G['mythosupgrade15'] = new Decimal(1);\r\n    if (player.upgrades[53] === 1) {\r\n        G['mythosupgrade13'] = G['mythosupgrade13'].times(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)));\r\n    }\r\n    if (player.upgrades[54] === 1) {\r\n        G['mythosupgrade14'] = G['mythosupgrade14'].times(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)));\r\n    }\r\n    if (player.upgrades[55] === 1) {\r\n        G['mythosupgrade15'] = G['mythosupgrade15'].times(Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1)));\r\n    }\r\n    G['globalAntMult'] = new Decimal(1);\r\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2));\r\n    if (player.upgrades[76] === 1) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(5);\r\n    }\r\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts));\r\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.125, player.shopUpgrades.antSpeedLevel));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[1 - 1] + G['bonusant1']));\r\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1 + G['runeSum'] / 100, G['talisman6Power']));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])));\r\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6]);\r\n    if (player.achievements[169] === 1) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\r\n    }\r\n    if (player.achievements[171] === 1) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666);\r\n    }\r\n    if (player.achievements[172] === 1) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))));\r\n    }\r\n    if (player.upgrades[39] === 1) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(1.60);\r\n    }\r\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]));\r\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])));\r\n    if (player.researches[147] > 0) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10));\r\n    }\r\n    if (player.researches[177] > 0) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]));\r\n    }\r\n    if (player.currentChallenge.ascension === 12) {\r\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5);\r\n    }\r\n    if (player.currentChallenge.ascension === 13) {\r\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23);\r\n    }\r\n    if (player.currentChallenge.ascension === 14) {\r\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2);\r\n    }\r\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)));\r\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]]);\r\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed);\r\n    if (player.platonicUpgrades[12] > 0) {\r\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)));\r\n    }\r\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\r\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25);\r\n    }\r\n    G['globalConstantMult'] = new Decimal(\"1\");\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1.05, player.constantUpgrades[1]));\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned));\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 2 / 100 * player.researches[139]);\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 3 / 100 * player.researches[154]);\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 4 / 100 * player.researches[169]);\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 5 / 100 * player.researches[184]);\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 10 / 100 * player.researches[199]);\r\n    G['globalConstantMult'] = G['globalConstantMult'].times(G['challenge15Rewards'].constantBonus);\r\n    if (player.platonicUpgrades[5] > 0) {\r\n        G['globalConstantMult'] = G['globalConstantMult'].times(2);\r\n    }\r\n    if (player.platonicUpgrades[10] > 0) {\r\n        G['globalConstantMult'] = G['globalConstantMult'].times(10);\r\n    }\r\n    if (player.platonicUpgrades[15] > 0) {\r\n        G['globalConstantMult'] = G['globalConstantMult'].times(1e5);\r\n    }\r\n};\r\nexport const resourceGain = (dt) => {\r\n    calculateTotalCoinOwned();\r\n    calculateTotalAcceleratorBoost();\r\n    updateAllTick();\r\n    updateAllMultiplier();\r\n    multipliers();\r\n    calculatetax();\r\n    if (G['produceTotal'].gte(0.001)) {\r\n        const addcoin = Decimal.min(G['produceTotal'].dividedBy(G['taxdivisor']), Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)));\r\n        player.coins = player.coins.add(addcoin.times(dt / 0.025));\r\n        player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin.times(dt / 0.025));\r\n        player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin.times(dt / 0.025));\r\n        player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin.times(dt / 0.025));\r\n        player.coinsTotal = player.coinsTotal.add(addcoin.times(dt / 0.025));\r\n    }\r\n    resetCurrency();\r\n    if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\r\n        player.prestigePoints = player.prestigePoints.add(Decimal.floor(G['prestigePointGain'].dividedBy(4000).times(dt / 0.025)));\r\n    }\r\n    if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\r\n        player.transcendPoints = player.transcendPoints.add(Decimal.floor(G['transcendPointGain'].dividedBy(4000).times(dt / 0.025)));\r\n    }\r\n    if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\r\n        player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G['reincarnationPointGain'].dividedBy(4000).times(dt / 0.025)));\r\n    }\r\n    G['produceFirstDiamonds'] = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G['globalCrystalMultiplier']);\r\n    G['produceSecondDiamonds'] = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G['globalCrystalMultiplier']);\r\n    G['produceThirdDiamonds'] = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G['globalCrystalMultiplier']);\r\n    G['produceFourthDiamonds'] = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G['globalCrystalMultiplier']);\r\n    G['produceFifthDiamonds'] = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G['globalCrystalMultiplier']);\r\n    player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G['produceFifthDiamonds'].times(dt / 0.025));\r\n    player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G['produceFourthDiamonds'].times(dt / 0.025));\r\n    player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G['produceThirdDiamonds'].times(dt / 0.025));\r\n    player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G['produceSecondDiamonds'].times(dt / 0.025));\r\n    G['produceDiamonds'] = G['produceFirstDiamonds'];\r\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n        player.prestigeShards = player.prestigeShards.add(G['produceDiamonds'].times(dt / 0.025));\r\n    }\r\n    G['produceFifthMythos'] = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G['globalMythosMultiplier']).times(G['grandmasterMultiplier']).times(G['mythosupgrade15']);\r\n    G['produceFourthMythos'] = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G['globalMythosMultiplier']);\r\n    G['produceThirdMythos'] = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade14']);\r\n    G['produceSecondMythos'] = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G['globalMythosMultiplier']);\r\n    G['produceFirstMythos'] = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\r\n    player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G['produceFifthMythos'].times(dt / 0.025));\r\n    player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G['produceFourthMythos'].times(dt / 0.025));\r\n    player.secondGeneratedMythos = player.secondGeneratedMythos.add(G['produceThirdMythos'].times(dt / 0.025));\r\n    player.firstGeneratedMythos = player.firstGeneratedMythos.add(G['produceSecondMythos'].times(dt / 0.025));\r\n    G['produceMythos'] = new Decimal(\"0\");\r\n    G['produceMythos'] = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G['globalMythosMultiplier']).times(G['mythosupgrade13']);\r\n    G['producePerSecondMythos'] = G['produceMythos'].times(40);\r\n    let pm = new Decimal('1');\r\n    if (player.upgrades[67] > 0.5) {\r\n        pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles));\r\n    }\r\n    G['produceFifthParticles'] = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles);\r\n    G['produceFourthParticles'] = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles);\r\n    G['produceThirdParticles'] = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles);\r\n    G['produceSecondParticles'] = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles);\r\n    G['produceFirstParticles'] = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm);\r\n    player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G['produceFifthParticles'].times(dt / 0.025));\r\n    player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G['produceFourthParticles'].times(dt / 0.025));\r\n    player.secondGeneratedParticles = player.secondGeneratedParticles.add(G['produceThirdParticles'].times(dt / 0.025));\r\n    player.firstGeneratedParticles = player.firstGeneratedParticles.add(G['produceSecondParticles'].times(dt / 0.025));\r\n    G['produceParticles'] = new Decimal(\"0\");\r\n    G['produceParticles'] = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm);\r\n    G['producePerSecondParticles'] = G['produceParticles'].times(40);\r\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\r\n        player.transcendShards = player.transcendShards.add(G['produceMythos'].times(dt / 0.025));\r\n    }\r\n    if (player.currentChallenge.reincarnation !== 10) {\r\n        player.reincarnationShards = player.reincarnationShards.add(G['produceParticles'].times(dt / 0.025));\r\n    }\r\n    G['antEightProduce'] = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G['globalAntMult']);\r\n    G['antSevenProduce'] = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G['globalAntMult']);\r\n    G['antSixProduce'] = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G['globalAntMult']);\r\n    G['antFiveProduce'] = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G['globalAntMult']);\r\n    G['antFourProduce'] = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G['globalAntMult']);\r\n    G['antThreeProduce'] = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G['globalAntMult']);\r\n    G['antTwoProduce'] = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G['globalAntMult']);\r\n    G['antOneProduce'] = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G['globalAntMult']);\r\n    player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G['antEightProduce'].times(dt / 1));\r\n    player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G['antSevenProduce'].times(dt / 1));\r\n    player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G['antSixProduce'].times(dt / 1));\r\n    player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G['antFiveProduce'].times(dt / 1));\r\n    player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G['antFourProduce'].times(dt / 1));\r\n    player.secondGeneratedAnts = player.secondGeneratedAnts.add(G['antThreeProduce'].times(dt / 1));\r\n    player.firstGeneratedAnts = player.firstGeneratedAnts.add(G['antTwoProduce'].times(dt / 1));\r\n    player.antPoints = player.antPoints.add(G['antOneProduce'].times(dt / 1));\r\n    for (let i = 1; i <= 5; i++) {\r\n        G['ascendBuildingProduction'][G['ordinals'][5 - i]] = (player['ascendBuilding' + (6 - i)]['generated']).add(player['ascendBuilding' + (6 - i)]['owned']).times(player['ascendBuilding' + i]['multiplier']).times(G['globalConstantMult']);\r\n        if (i !== 5) {\r\n            player['ascendBuilding' + (5 - i)]['generated'] = player['ascendBuilding' + (5 - i)]['generated']\r\n                .add(G['ascendBuildingProduction'][G['ordinals'][5 - i]].times(dt));\r\n        }\r\n    }\r\n    player.ascendShards = player.ascendShards.add(G['ascendBuildingProduction'].first.times(dt));\r\n    if (player.ascensionCount > 0) {\r\n        ascensionAchievementCheck(2);\r\n    }\r\n    if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G['challengeBaseRequirements'][0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\r\n        player.challengecompletions[1] += 1;\r\n        challengeDisplay(1, false);\r\n        challengeachievementcheck(1, true);\r\n    }\r\n    if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G['challengeBaseRequirements'][1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\r\n        player.challengecompletions[2] += 1;\r\n        challengeDisplay(2, false);\r\n        challengeachievementcheck(2, true);\r\n    }\r\n    if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G['challengeBaseRequirements'][2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\r\n        player.challengecompletions[3] += 1;\r\n        challengeDisplay(3, false);\r\n        challengeachievementcheck(3, true);\r\n    }\r\n    if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G['challengeBaseRequirements'][3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\r\n        player.challengecompletions[4] += 1;\r\n        challengeDisplay(4, false);\r\n        challengeachievementcheck(4, true);\r\n    }\r\n    if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G['challengeBaseRequirements'][4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\r\n        player.challengecompletions[5] += 1;\r\n        challengeDisplay(5, false);\r\n        challengeachievementcheck(5, true);\r\n    }\r\n    if (player.coins.gte(1000) && player.unlocks.coinone === false) {\r\n        player.unlocks.coinone = true;\r\n        revealStuff();\r\n    }\r\n    if (player.coins.gte(20000) && player.unlocks.cointwo === false) {\r\n        player.unlocks.cointwo = true;\r\n        revealStuff();\r\n    }\r\n    if (player.coins.gte(100000) && player.unlocks.cointhree === false) {\r\n        player.unlocks.cointhree = true;\r\n        revealStuff();\r\n    }\r\n    if (player.coins.gte(8e6) && player.unlocks.coinfour === false) {\r\n        player.unlocks.coinfour = true;\r\n        revealStuff();\r\n    }\r\n    if (player.antPoints.gte(3) && player.achievements[169] === 0) {\r\n        achievementaward(169);\r\n    }\r\n    if (player.antPoints.gte(1e5) && player.achievements[170] === 0) {\r\n        achievementaward(170);\r\n    }\r\n    if (player.antPoints.gte(666666666) && player.achievements[171] === 0) {\r\n        achievementaward(171);\r\n    }\r\n    if (player.antPoints.gte(1e20) && player.achievements[172] === 0) {\r\n        achievementaward(172);\r\n    }\r\n    if (player.antPoints.gte(1e40) && player.achievements[173] === 0) {\r\n        achievementaward(173);\r\n    }\r\n    if (player.antPoints.gte(\"1e500\") && player.achievements[174] === 0) {\r\n        achievementaward(174);\r\n    }\r\n    if (player.antPoints.gte(\"1e2500\") && player.achievements[175] === 0) {\r\n        achievementaward(175);\r\n    }\r\n    const chal = player.currentChallenge.transcension;\r\n    const reinchal = player.currentChallenge.reincarnation;\r\n    const ascendchal = player.currentChallenge.ascension;\r\n    if (chal !== 0) {\r\n        if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\r\n            resetCheck('challenge', false);\r\n            G['autoChallengeTimerIncrement'] = 0;\r\n        }\r\n    }\r\n    if (reinchal < 9 && reinchal !== 0) {\r\n        if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n            resetCheck('reincarnationchallenge', false);\r\n            G['autoChallengeTimerIncrement'] = 0;\r\n            if (player.challengecompletions[reinchal] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension)) {\r\n                player.autoChallengeIndex += 1;\r\n            }\r\n        }\r\n    }\r\n    if (reinchal >= 9) {\r\n        if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\r\n            resetCheck('reincarnationchallenge', false);\r\n            G['autoChallengeTimerIncrement'] = 0;\r\n            if (player.challengecompletions[reinchal] >= (25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension)) {\r\n                player.autoChallengeIndex += 1;\r\n                if (player.autoChallengeIndex > 10) {\r\n                    player.autoChallengeIndex = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (ascendchal !== 0 && ascendchal < 15) {\r\n        if (player.challengecompletions[10] >= challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal)) {\r\n            resetCheck('ascensionChallenge', false);\r\n            challengeachievementcheck(ascendchal, true);\r\n        }\r\n    }\r\n    if (ascendchal === 15) {\r\n        if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\r\n            resetCheck('ascensionChallenge', false);\r\n        }\r\n    }\r\n};\r\nexport const resetCurrency = () => {\r\n    let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100;\r\n    let transcendPow = 0.03;\r\n    if (player.currentChallenge.transcension === 5) {\r\n        prestigePow = 0.01 / (1 + player.challengecompletions[5]);\r\n        transcendPow = 0.001;\r\n    }\r\n    if (player.currentChallenge.reincarnation === 10) {\r\n        prestigePow = (1e-4) / (1 + player.challengecompletions[10]);\r\n        transcendPow = 0.001;\r\n    }\r\n    prestigePow *= G['deflationMultiplier'][player.usedCorruptions[6]];\r\n    G['prestigePointGain'] = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow));\r\n    if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n        G['prestigePointGain'] = G['prestigePointGain'].times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G['acceleratorEffect'], 1 / 3 * G['deflationMultiplier'][player.usedCorruptions[6]])));\r\n    }\r\n    G['transcendPointGain'] = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow));\r\n    if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\r\n        G['transcendPointGain'] = G['transcendPointGain'].times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)));\r\n    }\r\n    G['reincarnationPointGain'] = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01));\r\n    if (player.currentChallenge.reincarnation !== 0) {\r\n        G['reincarnationPointGain'] = Decimal.pow(G['reincarnationPointGain'], 0.01);\r\n    }\r\n    if (player.achievements[50] === 1) {\r\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(2);\r\n    }\r\n    if (player.upgrades[65] > 0.5) {\r\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(5);\r\n    }\r\n    if (player.currentChallenge.ascension === 12) {\r\n        G['reincarnationPointGain'] = new Decimal(\"0\");\r\n    }\r\n};\r\nexport const resetCheck = (i, manual = true, leaving = false) => {\r\n    if (i === 'prestige') {\r\n        if (player.coinsThisPrestige.gte(1e16) || G['prestigePointGain'].gte(100)) {\r\n            if (manual) {\r\n                resetConfirmation('prestige');\r\n            }\r\n            else {\r\n                resetachievementcheck(1);\r\n                reset(\"prestige\");\r\n            }\r\n        }\r\n    }\r\n    if (i === 'transcend') {\r\n        if ((player.coinsThisTranscension.gte(1e100) || G['transcendPointGain'].gte(0.5)) && player.currentChallenge.transcension === 0) {\r\n            if (manual) {\r\n                resetConfirmation('transcend');\r\n            }\r\n            if (!manual) {\r\n                resetachievementcheck(2);\r\n                reset(\"transcension\");\r\n            }\r\n        }\r\n    }\r\n    if (i === 'challenge') {\r\n        const q = player.currentChallenge.transcension;\r\n        const x = q + 65;\r\n        if (player.currentChallenge.transcension !== 0) {\r\n            const reqCheck = (comp) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q));\r\n            const maxCompletions = 25 + 5 * player.researches[x] + 925 * player.researches[105];\r\n            if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n                const maxInc = player.shopUpgrades.instantChallengeBought && player.currentChallenge.ascension !== 13 ? 10 : 1;\r\n                let counter = 0;\r\n                let comp = player.challengecompletions[q];\r\n                while (counter < maxInc) {\r\n                    if (reqCheck(comp) && comp < maxCompletions) {\r\n                        comp++;\r\n                    }\r\n                    counter++;\r\n                }\r\n                player.challengecompletions[q] = comp;\r\n                const y = x - 65;\r\n                challengeDisplay(y, false);\r\n                updateChallengeLevel(y);\r\n            }\r\n            if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n                while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n                    player.highestchallengecompletions[q] += 1;\r\n                    const y = x - 65;\r\n                    challengeDisplay(y, false);\r\n                    updateChallengeLevel(y);\r\n                    highestChallengeRewards(q, player.highestchallengecompletions[q]);\r\n                    updateCubesPerSec();\r\n                    calculateCubeBlessings();\r\n                }\r\n            }\r\n            challengeachievementcheck(q);\r\n            if (!player.shopUpgrades.instantChallengeBought || leaving) {\r\n                reset(\"transcensionChallenge\", false, \"leaveChallenge\");\r\n                player.transcendCount -= 1;\r\n            }\r\n        }\r\n        if (!player.retrychallenges || manual || player.challengecompletions[q] >= (25 + 5 * player.researches[x] + 925 * player.researches[105])) {\r\n            player.currentChallenge.transcension = 0;\r\n            updateChallengeDisplay();\r\n        }\r\n    }\r\n    if (i === \"reincarnate\") {\r\n        if (G['reincarnationPointGain'].gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n            if (manual) {\r\n                resetConfirmation('reincarnate');\r\n            }\r\n            if (!manual) {\r\n                resetachievementcheck(3);\r\n                reset(\"reincarnation\");\r\n            }\r\n        }\r\n    }\r\n    if (i === \"reincarnationchallenge\" && player.currentChallenge.reincarnation !== 0) {\r\n        const q = player.currentChallenge.reincarnation;\r\n        if (player.currentChallenge.transcension !== 0) {\r\n            player.currentChallenge.transcension = 0;\r\n        }\r\n        const reqCheck = (comp) => {\r\n            if (q <= 8) {\r\n                return player.transcendShards.gte(challengeRequirement(q, comp, q));\r\n            }\r\n            else {\r\n                return player.coins.gte(challengeRequirement(q, comp, q));\r\n            }\r\n        };\r\n        const maxCompletions = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\r\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\r\n            const maxInc = player.shopUpgrades.instantChallengeBought && player.currentChallenge.ascension !== 13 ? 10 : 1;\r\n            let counter = 0;\r\n            let comp = player.challengecompletions[q];\r\n            while (counter < maxInc) {\r\n                if (reqCheck(comp) && comp < maxCompletions) {\r\n                    comp++;\r\n                }\r\n                counter++;\r\n            }\r\n            player.challengecompletions[q] = comp;\r\n            challengeDisplay(q, true);\r\n            updateChallengeLevel(q);\r\n        }\r\n        if (!player.shopUpgrades.instantChallengeBought || leaving) {\r\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\r\n            player.reincarnationCount -= 1;\r\n        }\r\n        challengeachievementcheck(q);\r\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\r\n                player.highestchallengecompletions[q] += 1;\r\n                highestChallengeRewards(q, player.highestchallengecompletions[q]);\r\n                updateCubesPerSec();\r\n                calculateHypercubeBlessings();\r\n                calculateTesseractBlessings();\r\n                calculateCubeBlessings();\r\n            }\r\n        }\r\n        if (!player.retrychallenges || manual || player.challengecompletions[q] > 24 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15]) {\r\n            reset(\"reincarnationChallenge\", false, \"leaveChallenge\");\r\n            player.currentChallenge.reincarnation = 0;\r\n            if (player.shopUpgrades.instantChallengeBought) {\r\n                for (let i = 1; i <= 5; i++) {\r\n                    player.challengecompletions[i] = player.highestchallengecompletions[i];\r\n                }\r\n            }\r\n            updateChallengeDisplay();\r\n            calculateRuneLevels();\r\n            calculateAnts();\r\n        }\r\n    }\r\n    if (i === \"ascend\") {\r\n        if (player.challengecompletions[10] > 0) {\r\n            if (manual) {\r\n                resetConfirmation('ascend');\r\n            }\r\n        }\r\n    }\r\n    if (i === \"ascensionChallenge\" && player.currentChallenge.ascension !== 0) {\r\n        let conf = true;\r\n        if (manual) {\r\n            conf = confirm('Are you absolutely sure that you want to exit the Ascension Challenge? You will need to clear challenge 10 again before you can attempt the challenge again!');\r\n        }\r\n        if (!conf) {\r\n            return;\r\n        }\r\n        const a = player.currentChallenge.ascension;\r\n        const r = player.currentChallenge.reincarnation;\r\n        const t = player.currentChallenge.transcension;\r\n        if (player.challengecompletions[10] >= 50 && a === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\r\n            achievementaward(247);\r\n        }\r\n        const maxCompletions = a < 15 ? 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15] : 1;\r\n        if (a !== 0 && a < 15) {\r\n            if (player.challengecompletions[10] >= challengeRequirement(a, player.challengecompletions[a], a) && player.challengecompletions[a] < maxCompletions) {\r\n                player.challengecompletions[a] += 1;\r\n            }\r\n        }\r\n        if (a === 15) {\r\n            if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\r\n                player.challengecompletions[a] += 1;\r\n            }\r\n            else {\r\n                if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent))) {\r\n                    player.challenge15Exponent = Decimal.log(player.coins.add(1), 10);\r\n                    c15RewardUpdate();\r\n                }\r\n            }\r\n        }\r\n        if (r !== 0) {\r\n            player.currentChallenge.reincarnation = 0;\r\n        }\r\n        if (t !== 0) {\r\n            player.currentChallenge.transcension = 0;\r\n        }\r\n        challengeDisplay(a, true);\r\n        reset(\"ascensionChallenge\");\r\n        if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\r\n            player.highestchallengecompletions[a] += 1;\r\n            player.wowHypercubes += 1;\r\n        }\r\n        if (!player.retrychallenges || manual || player.challengecompletions[a] >= maxCompletions || a === 15) {\r\n            player.currentChallenge.ascension = 0;\r\n        }\r\n        updateChallengeDisplay();\r\n        challengeachievementcheck(a, true);\r\n    }\r\n};\r\nexport const resetConfirmation = (i) => {\r\n    if (i === 'prestige') {\r\n        if (player.toggles[28] === true) {\r\n            const r = confirm(\"Prestige will reset coin upgrades, coin producers AND crystals. The first prestige unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\r\n            if (r === true) {\r\n                resetachievementcheck(1);\r\n                reset(\"prestige\");\r\n            }\r\n        }\r\n        else {\r\n            resetachievementcheck(1);\r\n            reset(\"prestige\");\r\n        }\r\n    }\r\n    if (i === 'transcend') {\r\n        if (player.toggles[29] === true) {\r\n            const z = confirm(\"Transcends will reset coin and prestige upgrades, coin producers, crystal producers AND diamonds. The first transcension unlocks new features. Would you like to prestige? [Toggle this message in settings.]\");\r\n            if (z === true) {\r\n                resetachievementcheck(2);\r\n                reset(\"transcension\");\r\n            }\r\n        }\r\n        else {\r\n            resetachievementcheck(2);\r\n            reset(\"transcension\");\r\n        }\r\n    }\r\n    if (i === 'reincarnate') {\r\n        if (player.currentChallenge.ascension !== 12) {\r\n            if (player.toggles[30] === true) {\r\n                const z = confirm(\"Reincarnating will reset EVERYTHING but in return you will get extraordinarily powerful Particles, and unlock some very strong upgrades and some new features. would you like to Reincarnate? [Disable this message in settings]\");\r\n                if (z === true) {\r\n                    resetachievementcheck(3);\r\n                    reset(\"reincarnation\");\r\n                }\r\n            }\r\n            else {\r\n                resetachievementcheck(3);\r\n                reset(\"reincarnation\");\r\n            }\r\n        }\r\n    }\r\n    if (i === 'ascend') {\r\n        const z = !player.toggles[31] || confirm(\"Ascending will reset all buildings, rune levels [NOT CAP!], talismans, most researches, and the anthill feature for Cubes of Power. Continue? [It is strongly advised you get R5x24 first.]\");\r\n        if (z) {\r\n            reset(\"ascension\");\r\n        }\r\n    }\r\n};\r\nexport const updateAll = () => {\r\n    G['uFourteenMulti'] = new Decimal(1);\r\n    G['uFifteenMulti'] = new Decimal(1);\r\n    if (player.upgrades[14] > 0.5) {\r\n        G['uFourteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\r\n    }\r\n    if (player.upgrades[15] > 0.5) {\r\n        G['uFifteenMulti'] = Decimal.pow(1.15, G['freeAccelerator']);\r\n    }\r\n    if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\r\n        achievementaward(250);\r\n    }\r\n    if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\r\n        achievementaward(251);\r\n    }\r\n    if (player.toggles[1] === true && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\r\n        buyMax('first', 'Coin', 1, 100);\r\n    }\r\n    if (player.toggles[2] === true && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\r\n        buyMax('second', 'Coin', 2, 2e3);\r\n    }\r\n    if (player.toggles[3] === true && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\r\n        buyMax('third', 'Coin', 3, 4e4);\r\n    }\r\n    if (player.toggles[4] === true && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\r\n        buyMax('fourth', 'Coin', 4, 8e5);\r\n    }\r\n    if (player.toggles[5] === true && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\r\n        buyMax('fifth', 'Coin', 5, 1.6e7);\r\n    }\r\n    if (player.toggles[6] === true && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\r\n        buyAccelerator(true);\r\n    }\r\n    if (player.toggles[7] === true && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\r\n        buyMultiplier(true);\r\n    }\r\n    if (player.toggles[8] === true && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\r\n        boostAccelerator(true);\r\n    }\r\n    if (player.toggles[10] === true && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\r\n        buyMax('first', 'Diamonds', 1, 1e2);\r\n    }\r\n    if (player.toggles[11] === true && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\r\n        buyMax('second', 'Diamonds', 3, 1e5);\r\n    }\r\n    if (player.toggles[12] === true && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\r\n        buyMax('third', 'Diamonds', 6, 1e15);\r\n    }\r\n    if (player.toggles[13] === true && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\r\n        buyMax('fourth', 'Diamonds', 10, 1e40);\r\n    }\r\n    if (player.toggles[14] === true && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\r\n        buyMax('fifth', 'Diamonds', 15, 1e100);\r\n    }\r\n    let c = 0;\r\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\r\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\r\n        c += 10;\r\n    }\r\n    if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\r\n        buyCrystalUpgrades(1, true);\r\n    }\r\n    if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\r\n        buyCrystalUpgrades(2, true);\r\n    }\r\n    if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\r\n        buyCrystalUpgrades(3, true);\r\n    }\r\n    if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\r\n        buyCrystalUpgrades(4, true);\r\n    }\r\n    if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\r\n        buyCrystalUpgrades(5, true);\r\n    }\r\n    if (player.toggles[16] === true && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\r\n        buyMax('first', 'Mythos', 1, 1);\r\n    }\r\n    if (player.toggles[17] === true && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\r\n        buyMax('second', 'Mythos', 3, 1e2);\r\n    }\r\n    if (player.toggles[18] === true && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\r\n        buyMax('third', 'Mythos', 6, 1e4);\r\n    }\r\n    if (player.toggles[19] === true && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\r\n        buyMax('fourth', 'Mythos', 10, 1e8);\r\n    }\r\n    if (player.toggles[20] === true && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\r\n        buyMax('fifth', 'Mythos', 15, 1e16);\r\n    }\r\n    if (player.toggles[22] === true && player.reincarnationPoints.gte(player.firstCostParticles)) {\r\n        buyParticleBuilding('first', 1, true);\r\n    }\r\n    if (player.toggles[23] === true && player.reincarnationPoints.gte(player.secondCostParticles)) {\r\n        buyParticleBuilding('second', 1e2, true);\r\n    }\r\n    if (player.toggles[24] === true && player.reincarnationPoints.gte(player.thirdCostParticles)) {\r\n        buyParticleBuilding('third', 1e4, true);\r\n    }\r\n    if (player.toggles[25] === true && player.reincarnationPoints.gte(player.fourthCostParticles)) {\r\n        buyParticleBuilding('fourth', 1e8, true);\r\n    }\r\n    if (player.toggles[26] === true && player.reincarnationPoints.gte(player.fifthCostParticles)) {\r\n        buyParticleBuilding('fifth', 1e16, true);\r\n    }\r\n    if (player.researches[175] > 0) {\r\n        for (let i = 1; i <= 10; i++) {\r\n            if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop())) {\r\n                buyConstantUpgrades(i, true);\r\n            }\r\n        }\r\n    }\r\n    if ((player.researches[190] > 0) && (player.tesseractAutoBuyerToggle == 1)) {\r\n        const cheapestTesseractBuilding = { cost: 0, intCost: 0, index: 0, intCostArray: [1, 10, 100, 1000, 10000] };\r\n        for (let i = 0; i < cheapestTesseractBuilding.intCostArray.length; i++) {\r\n            if ((player.wowTesseracts >= cheapestTesseractBuilding.intCostArray[i] * Math.pow(1 + player['ascendBuilding' + (i + 1)]['owned'], 3) + player.tesseractAutoBuyerAmount) && player.autoTesseracts[i + 1]) {\r\n                if ((getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1] < cheapestTesseractBuilding.cost) || (cheapestTesseractBuilding.cost == 0)) {\r\n                    cheapestTesseractBuilding.cost = getTesseractCost(cheapestTesseractBuilding.intCostArray[i], i + 1)[1];\r\n                    cheapestTesseractBuilding.intCost = cheapestTesseractBuilding.intCostArray[i];\r\n                    cheapestTesseractBuilding.index = i + 1;\r\n                }\r\n            }\r\n        }\r\n        if (cheapestTesseractBuilding.index > 0) {\r\n            buyTesseractBuilding(cheapestTesseractBuilding.intCost, cheapestTesseractBuilding.index);\r\n        }\r\n    }\r\n    if (player.upgrades[101] > 0.5) {\r\n        player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['uFifteenMulti']).times(G['generatorPower']));\r\n    }\r\n    if (player.upgrades[102] > 0.5) {\r\n        player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['uFourteenMulti']).times(G['generatorPower']));\r\n    }\r\n    if (player.upgrades[103] > 0.5) {\r\n        player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['generatorPower']));\r\n    }\r\n    if (player.upgrades[104] > 0.5) {\r\n        player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['generatorPower']));\r\n    }\r\n    if (player.upgrades[105] > 0.5) {\r\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin);\r\n    }\r\n    let p = 1;\r\n    p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77]);\r\n    let a = 0;\r\n    if (player.upgrades[106] > 0.5) {\r\n        a += 0.10;\r\n    }\r\n    if (player.upgrades[107] > 0.5) {\r\n        a += 0.15;\r\n    }\r\n    if (player.upgrades[108] > 0.5) {\r\n        a += 0.25;\r\n    }\r\n    if (player.upgrades[109] > 0.5) {\r\n        a += 0.25;\r\n    }\r\n    if (player.upgrades[110] > 0.5) {\r\n        a += 0.25;\r\n    }\r\n    a *= p;\r\n    let b = 0;\r\n    if (player.upgrades[111] > 0.5) {\r\n        b += 0.08;\r\n    }\r\n    if (player.upgrades[112] > 0.5) {\r\n        b += 0.08;\r\n    }\r\n    if (player.upgrades[113] > 0.5) {\r\n        b += 0.08;\r\n    }\r\n    if (player.upgrades[114] > 0.5) {\r\n        b += 0.08;\r\n    }\r\n    if (player.upgrades[115] > 0.5) {\r\n        b += 0.08;\r\n    }\r\n    b *= p;\r\n    c = 0;\r\n    if (player.upgrades[116] > 0.5) {\r\n        c += 0.05;\r\n    }\r\n    if (player.upgrades[117] > 0.5) {\r\n        c += 0.05;\r\n    }\r\n    if (player.upgrades[118] > 0.5) {\r\n        c += 0.05;\r\n    }\r\n    if (player.upgrades[119] > 0.5) {\r\n        c += 0.05;\r\n    }\r\n    if (player.upgrades[120] > 0.5) {\r\n        c += 0.05;\r\n    }\r\n    c *= p;\r\n    if (a !== 0) {\r\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a));\r\n    }\r\n    if (b !== 0) {\r\n        player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b));\r\n    }\r\n    if (c !== 0) {\r\n        player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c));\r\n    }\r\n    if (player.runeshards > player.maxofferings) {\r\n        player.maxofferings = player.runeshards;\r\n    }\r\n    if (player.researchPoints > player.maxobtainium) {\r\n        player.maxobtainium = player.researchPoints;\r\n    }\r\n    G['effectiveLevelMult'] = 1;\r\n    G['effectiveLevelMult'] *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])));\r\n    G['effectiveLevelMult'] *= (1 + player.researches[21] / 100);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[90] / 100);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[131] / 200);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[161] / 200 * 3 / 5);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[176] / 200 * 2 / 5);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[191] / 200 * 1 / 5);\r\n    G['effectiveLevelMult'] *= (1 + player.researches[146] / 200 * 4 / 5);\r\n    G['effectiveLevelMult'] *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]));\r\n    G['effectiveLevelMult'] *= G['challenge15Rewards'].runeBonus;\r\n    G['optimalOfferingTimer'] = 600 + 30 * player.researches[85] + 0.4 * G['rune5level'] + 120 * player.shopUpgrades.offeringTimerLevel;\r\n    G['optimalObtainiumTimer'] = 3600 + 120 * player.shopUpgrades.obtainiumTimerLevel;\r\n    autoBuyAnts();\r\n    if (player.autoAscend) {\r\n        if (player.autoAscendMode === \"c10Completions\" && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\r\n            reset(\"ascension\", true);\r\n        }\r\n    }\r\n    let metaData = null;\r\n    if (player.researches[175] > 0) {\r\n        for (let i = 1; i <= 10; i++) {\r\n            metaData = getConstUpgradeMetadata(i);\r\n            if (player.ascendShards.gte(metaData[1])) {\r\n                buyConstantUpgrades(i, true);\r\n            }\r\n        }\r\n    }\r\n    const reductionValue = getReductionValue();\r\n    if (reductionValue !== G['prevReductionValue']) {\r\n        G['prevReductionValue'] = reductionValue;\r\n        const resources = [\"Coin\", \"Diamonds\", \"Mythos\"];\r\n        const scalings = [\r\n            (value) => value,\r\n            (value) => value * (value + 1) / 2,\r\n            (value) => value * (value + 1) / 2\r\n        ];\r\n        const originalCosts = [\r\n            [100, 2e3, 4e4, 8e5, 1.6e7],\r\n            [1e2, 1e5, 1e15, 1e40, 1e100],\r\n            [1, 1e2, 1e4, 1e8, 1e16],\r\n        ];\r\n        for (let res = 0; res < resources.length; ++res) {\r\n            const resource = resources[res];\r\n            for (let ord = 0; ord < 5; ++ord) {\r\n                const num = G['ordinals'][ord];\r\n                player[num + \"Cost\" + resource] = getCost(originalCosts[res][ord], player[num + \"Owned\" + resource] + 1, resource, scalings[res](ord + 1), reductionValue);\r\n            }\r\n        }\r\n        for (let i = 0; i <= 4; i++) {\r\n            const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16];\r\n            const array = ['first', 'second', 'third', 'fourth', 'fifth'];\r\n            const buyTo = player[array[i] + 'OwnedParticles'] + 1;\r\n            player[array[i] + 'CostParticles'] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i]);\r\n        }\r\n    }\r\n};\r\nexport const constantIntervals = () => {\r\n    interval(saveSynergy, 5000);\r\n    interval(autoUpgrades, 200);\r\n    interval(buttoncolorchange, 200);\r\n    interval(htmlInserts, 16);\r\n    interval(updateAll, 100);\r\n    interval(buildingAchievementCheck, 200);\r\n    if (!G['timeWarp']) {\r\n        document.getElementById(\"preload\").style.display = \"none\";\r\n        document.getElementById(\"offlineprogressbar\").style.display = \"none\";\r\n    }\r\n};\r\nlet lastUpdate = 0;\r\nexport const createTimer = () => {\r\n    lastUpdate = performance.now();\r\n    interval(tick, 5);\r\n};\r\nconst dt = 5;\r\nconst filterStrength = 20;\r\nlet deltaMean = 0;\r\nconst tick = () => {\r\n    const now = performance.now();\r\n    let delta = now - lastUpdate;\r\n    deltaMean += (delta - deltaMean) / filterStrength;\r\n    let dtEffective;\r\n    while (delta > 5) {\r\n        dtEffective = dt;\r\n        dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0;\r\n        dtEffective = Math.min(delta, dtEffective);\r\n        tack(dtEffective / 1000);\r\n        lastUpdate += dtEffective;\r\n        delta -= dtEffective;\r\n    }\r\n};\r\nfunction tack(dt) {\r\n    if (!G['timeWarp']) {\r\n        dailyResetCheck();\r\n        const timeMult = calculateTimeAcceleration();\r\n        resourceGain(dt * timeMult);\r\n        addTimers(\"prestige\", dt);\r\n        addTimers(\"transcension\", dt);\r\n        addTimers(\"reincarnation\", dt);\r\n        addTimers(\"ascension\", dt);\r\n        addTimers(\"quarks\", dt);\r\n        if (player.shopUpgrades.offeringAutoLevel > 0.5 && player.autoSacrificeToggle) {\r\n            automaticTools(\"runeSacrifice\", dt);\r\n        }\r\n        if (player.achievements[173] === 1) {\r\n            automaticTools(\"antSacrifice\", dt);\r\n        }\r\n        if (player.researches[61] === 1) {\r\n            automaticTools(\"addObtainium\", dt);\r\n        }\r\n        if (player.autoResearchToggle && player.autoResearch <= maxRoombaResearchIndex(player)) {\r\n            let counter = 0;\r\n            const maxCount = 1 + player.challengecompletions[14];\r\n            while (counter < maxCount) {\r\n                if (player.autoResearch > 0) {\r\n                    const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\r\n                    buyResearch(player.autoResearch, true, linGrowth);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n                counter++;\r\n            }\r\n        }\r\n    }\r\n    if (player.highestchallengecompletions[3] > 0) {\r\n        automaticTools(\"addOfferings\", dt / 2);\r\n    }\r\n    if (player.cubeUpgrades[2] > 0) {\r\n        automaticTools(\"addOfferings\", dt * player.cubeUpgrades[2]);\r\n    }\r\n    if (player.researches[130] > 0 || player.researches[135] > 0) {\r\n        if (player.researches[135] > 0 && player.autoEnhanceToggle == true) {\r\n            if (player.achievements[119] > 0) {\r\n                buyTalismanEnhance(1, true);\r\n            }\r\n            if (player.achievements[126] > 0) {\r\n                buyTalismanEnhance(2, true);\r\n            }\r\n            if (player.achievements[133] > 0) {\r\n                buyTalismanEnhance(3, true);\r\n            }\r\n            if (player.achievements[140] > 0) {\r\n                buyTalismanEnhance(4, true);\r\n            }\r\n            if (player.achievements[147] > 0) {\r\n                buyTalismanEnhance(5, true);\r\n            }\r\n            if (player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0) {\r\n                buyTalismanEnhance(6, true);\r\n            }\r\n            if (player.shopUpgrades.talismanBought) {\r\n                buyTalismanEnhance(7, true);\r\n            }\r\n        }\r\n        if (player.researches[130] > 0 && player.autoFortifyToggle == true) {\r\n            if (player.achievements[119] > 0) {\r\n                buyTalismanLevels(1, true);\r\n            }\r\n            if (player.achievements[126] > 0) {\r\n                buyTalismanLevels(2, true);\r\n            }\r\n            if (player.achievements[133] > 0) {\r\n                buyTalismanLevels(3, true);\r\n            }\r\n            if (player.achievements[140] > 0) {\r\n                buyTalismanLevels(4, true);\r\n            }\r\n            if (player.achievements[147] > 0) {\r\n                buyTalismanLevels(5, true);\r\n            }\r\n            if (player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0) {\r\n                buyTalismanLevels(6, true);\r\n            }\r\n            if (player.shopUpgrades.talismanBought) {\r\n                buyTalismanLevels(7, true);\r\n            }\r\n        }\r\n    }\r\n    runChallengeSweep(dt);\r\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['prestigePointGain'].gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\r\n            resetachievementcheck(1);\r\n            reset(\"prestige\", true);\r\n        }\r\n    }\r\n    if (player.resettoggle1 === 2) {\r\n        G['autoResetTimers'].prestige += dt;\r\n        const time = Math.max(0.01, player.prestigeamount);\r\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['autoResetTimers'].prestige >= time && player.coinsThisPrestige.gte(1e16)) {\r\n            resetachievementcheck(1);\r\n            reset(\"prestige\", true);\r\n        }\r\n    }\r\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['transcendPointGain'].gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n            resetachievementcheck(2);\r\n            reset(\"transcension\", true);\r\n        }\r\n    }\r\n    if (player.resettoggle2 === 2) {\r\n        G['autoResetTimers'].transcension += dt;\r\n        const time = Math.max(0.01, player.transcendamount);\r\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['autoResetTimers'].transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\r\n            resetachievementcheck(2);\r\n            reset(\"transcension\", true);\r\n        }\r\n    }\r\n    if (player.currentChallenge.ascension !== 12) {\r\n        G['autoResetTimers'].reincarnation += dt;\r\n        if (player.resettoggle3 === 2) {\r\n            const time = Math.max(0.01, player.reincarnationamount);\r\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && player.transcendShards.gte(\"1e300\") && G['autoResetTimers'].reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n                resetachievementcheck(3);\r\n                reset(\"reincarnation\", true);\r\n            }\r\n        }\r\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && G['reincarnationPointGain'].gte(player.reincarnationPoints.times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\r\n                resetachievementcheck(3);\r\n                reset(\"reincarnation\", true);\r\n            }\r\n        }\r\n    }\r\n    calculateOfferings(\"reincarnation\");\r\n}\r\ndocument.addEventListener('keydown', (event) => {\r\n    if (document.activeElement && document.activeElement.localName === 'input') {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n    let type = \"\";\r\n    let pos = \"\";\r\n    let num = 0;\r\n    let cost = [null, 1, 100, 1e4, 1e8, 1e16];\r\n    if (G['buildingSubTab'] === \"coin\") {\r\n        cost = [null, 100, 2000, 4e4, 8e5, 1.6e7];\r\n        type = \"Coin\";\r\n    }\r\n    if (G['buildingSubTab'] === \"diamond\") {\r\n        cost = [null, 100, 1e5, 1e15, 1e40, 1e100];\r\n        type = \"Diamonds\";\r\n    }\r\n    if (G['buildingSubTab'] === \"mythos\") {\r\n        type = \"Mythos\";\r\n    }\r\n    const key = event.key.toUpperCase();\r\n    switch (key) {\r\n        case \"1\":\r\n            pos = 'first';\r\n            num = 1;\r\n            if (G['currentTab'] === \"buildings\") {\r\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding(pos, cost[1]) : buyMax(pos, type, num, cost[1]);\r\n            }\r\n            if (G['currentTab'] === \"runes\") {\r\n                if (G['runescreen'] === \"runes\") {\r\n                    redeemShards(1);\r\n                }\r\n                if (G['runescreen'] === \"blessings\") {\r\n                    buyRuneBonusLevels('Blessings', 1);\r\n                }\r\n                if (G['runescreen'] === \"spirits\") {\r\n                    buyRuneBonusLevels('Spirits', 1);\r\n                }\r\n            }\r\n            if (G['currentTab'] === \"challenges\") {\r\n                toggleChallenges(1);\r\n                challengeDisplay(1);\r\n            }\r\n            break;\r\n        case \"2\":\r\n            pos = 'second';\r\n            G['buildingSubTab'] === \"coin\" ? num = 2 : num = 3;\r\n            if (G['currentTab'] === \"buildings\") {\r\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding(pos, cost[2]) : buyMax(pos, type, num, cost[2]);\r\n            }\r\n            if (G['currentTab'] === \"runes\") {\r\n                if (G['runescreen'] === \"runes\") {\r\n                    redeemShards(2);\r\n                }\r\n                if (G['runescreen'] === \"blessings\") {\r\n                    buyRuneBonusLevels('Blessings', 2);\r\n                }\r\n                if (G['runescreen'] === \"spirits\") {\r\n                    buyRuneBonusLevels('Spirits', 2);\r\n                }\r\n            }\r\n            if (G['currentTab'] === \"challenges\") {\r\n                toggleChallenges(2);\r\n                challengeDisplay(2);\r\n            }\r\n            break;\r\n        case \"3\":\r\n            pos = 'third';\r\n            G['buildingSubTab'] === \"coin\" ? num = 3 : num = 6;\r\n            if (G['currentTab'] === \"buildings\") {\r\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding(pos, cost[3]) : buyMax(pos, type, num, cost[3]);\r\n            }\r\n            if (G['currentTab'] === \"runes\") {\r\n                if (G['runescreen'] === \"runes\") {\r\n                    redeemShards(3);\r\n                }\r\n                if (G['runescreen'] === \"blessings\") {\r\n                    buyRuneBonusLevels('Blessings', 3);\r\n                }\r\n                if (G['runescreen'] === \"spirits\") {\r\n                    buyRuneBonusLevels('Spirits', 3);\r\n                }\r\n            }\r\n            if (G['currentTab'] === \"challenges\") {\r\n                toggleChallenges(3);\r\n                challengeDisplay(3);\r\n            }\r\n            break;\r\n        case \"4\":\r\n            pos = 'fourth';\r\n            G['buildingSubTab'] === \"coin\" ? num = 4 : num = 10;\r\n            if (G['currentTab'] === \"buildings\") {\r\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding(pos, cost[4]) : buyMax(pos, type, num, cost[4]);\r\n            }\r\n            if (G['currentTab'] === \"runes\") {\r\n                if (G['runescreen'] === \"runes\") {\r\n                    redeemShards(4);\r\n                }\r\n                if (G['runescreen'] === \"blessings\") {\r\n                    buyRuneBonusLevels('Blessings', 4);\r\n                }\r\n                if (G['runescreen'] === \"spirits\") {\r\n                    buyRuneBonusLevels('Spirits', 4);\r\n                }\r\n            }\r\n            if (G['currentTab'] === \"challenges\") {\r\n                toggleChallenges(4);\r\n                challengeDisplay(4);\r\n            }\r\n            break;\r\n        case \"5\":\r\n            pos = 'fifth';\r\n            G['buildingSubTab'] === \"coin\" ? num = 5 : num = 15;\r\n            if (G['currentTab'] === \"buildings\") {\r\n                G['buildingSubTab'] === \"particle\" ? buyParticleBuilding(pos, cost[5]) : buyMax(pos, type, num, cost[5]);\r\n            }\r\n            if (G['currentTab'] === \"runes\") {\r\n                if (G['runescreen'] === \"runes\") {\r\n                    redeemShards(5);\r\n                }\r\n                if (G['runescreen'] === \"blessings\") {\r\n                    buyRuneBonusLevels('Blessings', 5);\r\n                }\r\n                if (G['runescreen'] === \"spirits\") {\r\n                    buyRuneBonusLevels('Spirits', 5);\r\n                }\r\n            }\r\n            if (G['currentTab'] === \"challenges\") {\r\n                toggleChallenges(5);\r\n                challengeDisplay(5);\r\n            }\r\n            break;\r\n        case \"6\":\r\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n                buyCrystalUpgrades(1);\r\n            }\r\n            if (G['currentTab'] === \"challenges\" && player.reincarnationCount > 0) {\r\n                toggleChallenges(6);\r\n                challengeDisplay(6);\r\n            }\r\n            break;\r\n        case \"7\":\r\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n                buyCrystalUpgrades(2);\r\n            }\r\n            if (G['currentTab'] === \"challenges\" && player.achievements[113] === 1) {\r\n                toggleChallenges(7);\r\n                challengeDisplay(7);\r\n            }\r\n            break;\r\n        case \"8\":\r\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n                buyCrystalUpgrades(3);\r\n            }\r\n            if (G['currentTab'] === \"challenges\" && player.achievements[120] === 1) {\r\n                toggleChallenges(8);\r\n                challengeDisplay(8);\r\n            }\r\n            break;\r\n        case \"9\":\r\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n                buyCrystalUpgrades(4);\r\n            }\r\n            if (G['currentTab'] === \"challenges\" && player.achievements[127] === 1) {\r\n                toggleChallenges(9);\r\n                challengeDisplay(9);\r\n            }\r\n            break;\r\n        case \"0\":\r\n            if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n                buyCrystalUpgrades(5);\r\n            }\r\n            if (G['currentTab'] === \"challenges\" && player.achievements[134] === 1) {\r\n                toggleChallenges(10);\r\n                challengeDisplay(10);\r\n            }\r\n            break;\r\n        case \"A\":\r\n            buyAccelerator();\r\n            break;\r\n        case \"B\":\r\n            boostAccelerator();\r\n            break;\r\n        case \"E\":\r\n            if (player.currentChallenge.reincarnation !== 0) {\r\n                resetCheck('reincarnationchallenge', undefined, true);\r\n            }\r\n            if (player.currentChallenge.transcension !== 0) {\r\n                resetCheck('challenge', undefined, true);\r\n            }\r\n            break;\r\n        case \"M\":\r\n            buyMultiplier();\r\n            break;\r\n        case \"P\":\r\n            resetCheck('prestige');\r\n            break;\r\n        case \"R\":\r\n            resetCheck('reincarnate');\r\n            break;\r\n        case \"S\":\r\n            sacrificeAnts();\r\n            break;\r\n        case \"T\":\r\n            resetCheck('transcend');\r\n            break;\r\n        case \"ARROWLEFT\":\r\n            event.preventDefault();\r\n            keyboardTabChange(-1);\r\n            break;\r\n        case \"ARROWRIGHT\":\r\n            event.preventDefault();\r\n            keyboardTabChange(1);\r\n            break;\r\n        case \"ARROWUP\":\r\n            event.preventDefault();\r\n            keyboardTabChange(-1, false);\r\n            break;\r\n        case \"ARROWDOWN\":\r\n            event.preventDefault();\r\n            keyboardTabChange(1, false);\r\n            break;\r\n    }\r\n});\r\nwindow.addEventListener('load', () => {\r\n    if (location.href.includes('kong')) {\r\n        const script = document.createElement('script');\r\n        script.setAttribute('src', 'https://cdn1.kongregate.com/javascripts/kongregate_api.js');\r\n        document.head.appendChild(script);\r\n    }\r\n    const ver = document.getElementById('versionnumber');\r\n    ver && (ver.textContent = `You're Testing v${player.version} - Seal of the Merchant [Last Update: 2:40AM UTC-8 30-Jan-2021]. Savefiles cannot be used in live!`);\r\n    document.title = 'Synergism v' + player.version;\r\n    const dec = LZString.decompressFromBase64(localStorage.getItem('Synergysave2'));\r\n    const isLZString = dec !== '';\r\n    if (isLZString) {\r\n        localStorage.clear();\r\n        localStorage.setItem('Synergysave2', btoa(dec));\r\n        alert('Transferred save to new format successfully!');\r\n    }\r\n    corruptionButtonsAdd();\r\n    corruptionLoadoutTableCreate();\r\n    setTimeout(() => {\r\n        generateEventHandlers();\r\n        loadSynergy();\r\n        saveSynergy();\r\n        toggleauto();\r\n        revealStuff();\r\n        hideStuff();\r\n        htmlInserts();\r\n        createTimer();\r\n        constantIntervals();\r\n        loadPlugins();\r\n    }, 0);\r\n});\r\nexport default player;\r\n","import { player, format, resetCheck, isTesting } from './Synergism';\r\nimport Decimal from 'break_infinity.js';\r\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate';\r\nimport { buyResearch } from './Research';\r\nimport { c15RewardUpdate } from './Statistics';\r\nexport const checkVariablesOnLoad = (data) => {\r\n    if (data.wowCubes === undefined) {\r\n        player.wowCubes = 0;\r\n        player.wowTesseracts = 0;\r\n        player.wowHypercubes = 0;\r\n        player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    if (data.shoptoggles.reincarnate === undefined) {\r\n        player.shoptoggles.reincarnate = true;\r\n    }\r\n    if (data.ascendBuilding1 === undefined) {\r\n        player.ascendBuilding1 = {\r\n            cost: 1,\r\n            owned: 0,\r\n            generated: new Decimal(\"0\"),\r\n            multiplier: 0.01\r\n        };\r\n        player.ascendBuilding2 = {\r\n            cost: 10,\r\n            owned: 0,\r\n            generated: new Decimal(\"0\"),\r\n            multiplier: 0.01\r\n        };\r\n        player.ascendBuilding3 = {\r\n            cost: 100,\r\n            owned: 0,\r\n            generated: new Decimal(\"0\"),\r\n            multiplier: 0.01\r\n        };\r\n        player.ascendBuilding4 = {\r\n            cost: 1000,\r\n            owned: 0,\r\n            generated: new Decimal(\"0\"),\r\n            multiplier: 0.01\r\n        };\r\n        player.ascendBuilding5 = {\r\n            cost: 10000,\r\n            owned: 0,\r\n            generated: new Decimal(\"0\"),\r\n            multiplier: 0.01\r\n        };\r\n    }\r\n    if (data.tesseractbuyamount === undefined) {\r\n        player.tesseractbuyamount = 1;\r\n    }\r\n    if (data.tesseractBlessings === undefined) {\r\n        player.tesseractBlessings = {\r\n            accelerator: 0,\r\n            multiplier: 0,\r\n            offering: 0,\r\n            runeExp: 0,\r\n            obtainium: 0,\r\n            antSpeed: 0,\r\n            antSacrifice: 0,\r\n            antELO: 0,\r\n            talismanBonus: 0,\r\n            globalSpeed: 0\r\n        };\r\n        player.hypercubeBlessings = {\r\n            accelerator: 0,\r\n            multiplier: 0,\r\n            offering: 0,\r\n            runeExp: 0,\r\n            obtainium: 0,\r\n            antSpeed: 0,\r\n            antSacrifice: 0,\r\n            antELO: 0,\r\n            talismanBonus: 0,\r\n            globalSpeed: 0\r\n        };\r\n    }\r\n    if (data.prototypeCorruptions === undefined) {\r\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    if (data.constantUpgrades === undefined) {\r\n        player.ascendShards = new Decimal(\"0\");\r\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    if (data.roombaResearchIndex === undefined) {\r\n        player.roombaResearchIndex = 0;\r\n    }\r\n    if (data.history === undefined) {\r\n        player.history = {};\r\n        player.cubesThisAscension = {\r\n            \"challenges\": 0,\r\n            \"reincarnation\": 0,\r\n            \"ascension\": 0,\r\n            \"maxCubesPerSec\": 0,\r\n            \"maxAllTime\": 0,\r\n            \"cpsOnC10Comp\": 0,\r\n            \"tesseracts\": 0,\r\n            \"hypercubes\": 0\r\n        };\r\n        player.historyCountMax = 10;\r\n    }\r\n    if (data.autoChallengeRunning === undefined) {\r\n        player.autoChallengeRunning = false;\r\n        player.autoChallengeIndex = 1;\r\n        player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false];\r\n        player.autoChallengeStartExponent = 10;\r\n        player.autoChallengeTimer = {\r\n            start: 10,\r\n            exit: 2,\r\n            enter: 2\r\n        };\r\n    }\r\n    if (data.autoAscend === undefined) {\r\n        player.autoAscend = false;\r\n        player.autoAscendMode = \"c10Completions\";\r\n        player.autoAscendThreshold = 1;\r\n    }\r\n    if (data.runeBlessingLevels === undefined) {\r\n        player.runeBlessingLevels = [0, 0, 0, 0, 0, 0];\r\n        player.runeSpiritLevels = [0, 0, 0, 0, 0, 0];\r\n        player.runeBlessingBuyAmount = 0;\r\n        player.runeSpiritBuyAmount = 0;\r\n    }\r\n    if (player.researches[180] > 1) {\r\n        player.researches[180] = 1;\r\n    }\r\n    if (data.autoTesseracts === undefined) {\r\n        player.autoTesseracts = [false, false, false, false, false, false];\r\n    }\r\n    if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\r\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n    if (player.corruptionLoadouts === undefined) {\r\n        player.corruptionLoadouts = {\r\n            1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n        };\r\n        player.corruptionShowStats = true;\r\n    }\r\n    for (let i = 0; i <= 4; i++) {\r\n        if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\r\n            player.runelevels[i] = 0;\r\n        }\r\n    }\r\n    if (!data.shopUpgrades || data.shopUpgrades.challengeExtension === undefined) {\r\n        player.shopUpgrades.challengeExtension = 0;\r\n        player.shopUpgrades.challenge10Tomes = 0;\r\n        player.shopUpgrades.seasonPassLevel = 0;\r\n        player.shopUpgrades.cubeToQuarkBought = false;\r\n        player.shopUpgrades.tesseractToQuarkBought = false;\r\n        player.shopUpgrades.hypercubeToQuarkBought = false;\r\n    }\r\n    if (data.cubeUpgrades === undefined || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\r\n        for (let i = 121; i <= 125; i++) {\r\n            player.upgrades[i] = 0;\r\n        }\r\n    }\r\n    if (data.toggles[1] !== undefined) {\r\n        for (let i = 0; i < 50; ++i) {\r\n            if (player.toggles[i] !== undefined) {\r\n                player.toggles[i + 1] = player.toggles[i];\r\n                player.toggles[i] = undefined;\r\n            }\r\n        }\r\n    }\r\n    if (data.ascensionCount === 0) {\r\n        player.toggles[31] = true;\r\n        player.toggles[32] = true;\r\n    }\r\n    if (data.dayCheck === undefined) {\r\n        player.dayCheck = null;\r\n        player.dayTimer = 0;\r\n        player.cubeQuarkDaily = 0;\r\n        player.tesseractQuarkDaily = 0;\r\n        player.hypercubeQuarkDaily = 0;\r\n        player.cubeOpenedDaily = 0;\r\n        player.tesseractOpenedDaily = 0;\r\n        player.hypercubeOpenedDaily = 0;\r\n    }\r\n    if (data.loadedOct4Hotfix === undefined || player.loadedOct4Hotfix === false) {\r\n        player.loadedOct4Hotfix = true;\r\n        if (player.researches.length > 200) {\r\n            player.researchPoints += player.researches[200] * 1e56;\r\n            player.researches[200] = 0;\r\n            buyResearch(200, true, 0.01);\r\n            console.log('Refunded 8x25, and gave you ' + format(player.researches[200]) + ' levels of new cost 8x25. Sorry!');\r\n            player.researchPoints += player.researches[195] * 1e60;\r\n            player.worlds += 250 * player.researches[195];\r\n            player.researches[195] = 0;\r\n            console.log('Refunded 8x20 and gave 250 quarks for each level you had prior to loading up the game.');\r\n            player.wowCubes += player.cubeUpgrades[50] * 5e10;\r\n            player.cubeUpgrades[50] = 0;\r\n            console.log('Refunded w5x10. Enjoy!');\r\n        }\r\n    }\r\n    if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\r\n        player.ascStatToggles = {\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: false\r\n        };\r\n    }\r\n    if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\r\n        player.ascStatToggles[4] = false;\r\n    }\r\n    if (player.usedCorruptions[0] > 0 ||\r\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\r\n        player.prototypeCorruptions[0] = 0;\r\n        player.usedCorruptions[0] = 0;\r\n    }\r\n    if (player.antSacrificeTimerReal === undefined) {\r\n        player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration();\r\n    }\r\n    if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\r\n        player.subtabNumber = 0;\r\n    }\r\n    if (data.wowPlatonicCubes === undefined) {\r\n        player.wowPlatonicCubes = 0;\r\n        player.wowAbyssals = 0;\r\n    }\r\n    if (data.platonicBlessings === undefined) {\r\n        const ascCount = player.ascensionCount;\r\n        if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\r\n            resetCheck('ascensionChallenge', false, true);\r\n        }\r\n        if (player.currentChallenge.ascension === 15) {\r\n            resetCheck('ascensionChallenge', false, true);\r\n            player.challenge15Exponent = 0;\r\n            c15RewardUpdate();\r\n        }\r\n        player.ascensionCount = ascCount;\r\n        player.challengecompletions[15] = 0;\r\n        player.highestchallengecompletions[15] = 0;\r\n        player.platonicBlessings = {\r\n            cubes: 0,\r\n            tesseracts: 0,\r\n            hypercubes: 0,\r\n            platonics: 0,\r\n            hypercubeBonus: 0,\r\n            taxes: 0,\r\n            scoreBonus: 0,\r\n            globalSpeed: 0,\r\n        };\r\n        player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        player.challenge15Exponent = 0;\r\n        player.loadedNov13Vers = false;\r\n    }\r\n    if (player.researches.includes(null)) {\r\n        for (let i = 0; i < 200; i++) {\r\n            player.researches[i + 1] = player.researches[i + 1] || 0;\r\n        }\r\n    }\r\n    if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined) {\r\n        if (player.currentChallenge.ascension === 15) {\r\n            resetCheck('ascensionChallenge', false, true);\r\n            player.challenge15Exponent = 0;\r\n            c15RewardUpdate();\r\n        }\r\n        player.challenge15Exponent = 0;\r\n        c15RewardUpdate();\r\n        player.loadedDec16Vers = true;\r\n    }\r\n    if (typeof data.exporttest === 'string') {\r\n        player.exporttest = !isTesting;\r\n    }\r\n};\r\n","import { player } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { sumContents } from './Utility';\r\nimport Decimal from 'break_infinity.js';\r\nimport { CalcECC } from './Challenges';\r\nimport { achievementaward } from './Achievements';\r\nexport const calculatetax = () => {\r\n    let c = 0;\r\n    let e = 1;\r\n    let f = 1;\r\n    let compareC = 0;\r\n    G['produceFirst'] = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinOneMulti']).times(player.firstProduceCoin);\r\n    G['produceSecond'] = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinTwoMulti']).times(player.secondProduceCoin);\r\n    G['produceThird'] = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinThreeMulti']).times(player.thirdProduceCoin);\r\n    G['produceFourth'] = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFourMulti']).times(player.fourthProduceCoin);\r\n    G['produceFifth'] = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFiveMulti']).times(player.fifthProduceCoin);\r\n    G['produceTotal'] = G['produceFirst'].add(G['produceSecond']).add(G['produceThird']).add(G['produceFourth']).add(G['produceFifth']);\r\n    if (G['produceFirst'].lte(.0001)) {\r\n        G['produceFirst'] = new Decimal(0);\r\n    }\r\n    if (G['produceSecond'].lte(.0001)) {\r\n        G['produceSecond'] = new Decimal(0);\r\n    }\r\n    if (G['produceThird'].lte(.0001)) {\r\n        G['produceThird'] = new Decimal(0);\r\n    }\r\n    if (G['produceFourth'].lte(.0001)) {\r\n        G['produceFourth'] = new Decimal(0);\r\n    }\r\n    if (G['produceFifth'].lte(.0001)) {\r\n        G['produceFifth'] = new Decimal(0);\r\n    }\r\n    G['producePerSecond'] = G['produceTotal'].times(40);\r\n    if (player.currentChallenge.reincarnation === 6) {\r\n        e = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2);\r\n    }\r\n    if (player.currentChallenge.reincarnation === 9) {\r\n        e = 0.005;\r\n    }\r\n    if (player.currentChallenge.ascension === 15) {\r\n        e = 0.000005;\r\n    }\r\n    if (player.currentChallenge.ascension === 13) {\r\n        e *= 700 * (1 + 1 / 6 * player.challengecompletions[13]);\r\n        e *= Math.pow(1.05, Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49]));\r\n    }\r\n    if (player.challengecompletions[6] > 0) {\r\n        f /= 1.075;\r\n    }\r\n    let exponent = 1;\r\n    exponent *= e;\r\n    exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55]);\r\n    exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800));\r\n    exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]));\r\n    exponent *= (0.001 + .999 * (Math.pow(6, -(G['rune2level'] * G['effectiveLevelMult']) / 1000)));\r\n    exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100))));\r\n    exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131]);\r\n    exponent *= f;\r\n    exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]));\r\n    exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3 - 1] + G['bonusant3']));\r\n    exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1));\r\n    exponent *= (1 - 0.10 * (player.talismanRarity[1 - 1] - 1));\r\n    exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159]);\r\n    exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]));\r\n    exponent *= (1 - 0.666 * player.researches[200] / 100000);\r\n    exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000);\r\n    exponent *= G['challenge15Rewards'].taxes;\r\n    if (player.upgrades[121] > 0) {\r\n        exponent *= 0.5;\r\n    }\r\n    G['maxexponent'] = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1;\r\n    const a2 = Math.min(G['maxexponent'], Math.floor(Decimal.log(G['produceTotal'].add(1), 10)));\r\n    if (player.currentChallenge.ascension === 13 && G['maxexponent'] <= 99999 && player.achievements[249] < 1) {\r\n        achievementaward(249);\r\n    }\r\n    if (a2 >= 1) {\r\n        c = Math.pow(a2, 2) / 550;\r\n    }\r\n    compareC = Math.pow(G['maxexponent'], 2) / 550;\r\n    G['taxdivisor'] = Decimal.pow(1.01, (c) * (exponent));\r\n    G['taxdivisorcheck'] = Decimal.pow(1.01, (compareC) * (exponent));\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { CalcECC } from './Challenges';\r\nimport { calculateRuneLevels } from './Calculate';\r\nimport { achievementaward } from './Achievements';\r\nconst talismanResourceCosts = {\r\n    shard: {\r\n        obtainium: 1e13,\r\n        offerings: 1e2,\r\n        name: \"Talisman Shard\"\r\n    },\r\n    commonFragment: {\r\n        obtainium: 1e14,\r\n        offerings: 1e4,\r\n        name: \"Common Fragment\"\r\n    },\r\n    uncommonFragment: {\r\n        obtainium: 1e16,\r\n        offerings: 1e5,\r\n        name: \"Uncommon Fragment\"\r\n    },\r\n    rareFragment: {\r\n        obtainium: 1e18,\r\n        offerings: 1e6,\r\n        name: \"Rare Fragment\"\r\n    },\r\n    epicFragment: {\r\n        obtainium: 1e20,\r\n        offerings: 1e7,\r\n        name: \"Epic Fragment\"\r\n    },\r\n    legendaryFragment: {\r\n        obtainium: 1e22,\r\n        offerings: 1e8,\r\n        name: \"Legendary Fragment\"\r\n    },\r\n    mythicalFragment: {\r\n        obtainium: 1e24,\r\n        offerings: 1e9,\r\n        name: \"Mythical Fragment\"\r\n    },\r\n};\r\nconst getTalismanResourceInfo = (type, percentage = player.buyTalismanShardPercent) => {\r\n    const obtainiumCost = talismanResourceCosts[type].obtainium;\r\n    const offeringCost = talismanResourceCosts[type].offerings;\r\n    const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost));\r\n    const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)));\r\n    const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)));\r\n    const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false;\r\n    return {\r\n        canBuy: canBuy,\r\n        buyAmount: amountToBuy,\r\n        obtainiumCost: obtainiumCost * amountToBuy,\r\n        offeringCost: offeringCost * amountToBuy\r\n    };\r\n};\r\nexport const updateTalismanCostDisplay = (type, percentage = player.buyTalismanShardPercent) => {\r\n    const el = document.getElementById(\"talismanFragmentCost\");\r\n    const talismanCostInfo = getTalismanResourceInfo(type, percentage);\r\n    const TalismanName = talismanResourceCosts[type].name;\r\n    el.textContent = \"Cost to buy \" + format(talismanCostInfo.buyAmount) + \" \" + TalismanName + (talismanCostInfo.buyAmount > 1 ? \"s\" : \"\") + \": \" + format(talismanCostInfo.obtainiumCost) + \" Obtainium and \" + format(talismanCostInfo.offeringCost) + \" offerings.\";\r\n};\r\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\r\n    document.getElementById(\"talismanTen\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"talismanTwentyFive\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"talismanFifty\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"talismanHundred\").style.backgroundColor = \"#171717\";\r\n    player.buyTalismanShardPercent = i;\r\n    let x = \"Ten\";\r\n    if (i === 25) {\r\n        x = \"TwentyFive\";\r\n    }\r\n    if (i === 50) {\r\n        x = \"Fifty\";\r\n    }\r\n    if (i === 100) {\r\n        x = \"Hundred\";\r\n    }\r\n    document.getElementById(\"talisman\" + x).style.backgroundColor = \"green\";\r\n};\r\nexport const updateTalismanInventory = () => {\r\n    document.getElementById(\"talismanShardInventory\").textContent = format(player.talismanShards);\r\n    document.getElementById(\"commonFragmentInventory\").textContent = format(player.commonFragments);\r\n    document.getElementById(\"uncommonFragmentInventory\").textContent = format(player.uncommonFragments);\r\n    document.getElementById(\"rareFragmentInventory\").textContent = format(player.rareFragments);\r\n    document.getElementById(\"epicFragmentInventory\").textContent = format(player.epicFragments);\r\n    document.getElementById(\"legendaryFragmentInventory\").textContent = format(player.legendaryFragments);\r\n    document.getElementById(\"mythicalFragmentInventory\").textContent = format(player.mythicalFragments);\r\n};\r\nexport const buyTalismanResources = (type, percentage = player.buyTalismanShardPercent) => {\r\n    const talismanResourcesData = getTalismanResourceInfo(type, percentage);\r\n    if (talismanResourcesData.canBuy) {\r\n        if (type === 'shard') {\r\n            player.talismanShards += talismanResourcesData.buyAmount;\r\n        }\r\n        else {\r\n            player[type + 's'] += talismanResourcesData.buyAmount;\r\n        }\r\n        if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\r\n            achievementaward(239);\r\n        }\r\n        player.researchPoints -= talismanResourcesData.obtainiumCost;\r\n        player.runeshards -= talismanResourcesData.offeringCost;\r\n        if (player.researchPoints < 0) {\r\n            player.researchPoints = 0;\r\n        }\r\n        if (player.runeshards < 0) {\r\n            player.runeshards = 0;\r\n        }\r\n    }\r\n    updateTalismanCostDisplay(type, percentage);\r\n    updateTalismanInventory();\r\n};\r\nexport const showTalismanEffect = (i) => {\r\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\r\n    document.getElementById(\"talismanEffect\").style.display = \"block\";\r\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n    const a = document.getElementById(\"talismanSummary\");\r\n    const b = document.getElementById(\"talismanBonus\");\r\n    const c = document.getElementById(\"talismanRune1Effect\");\r\n    const d = document.getElementById(\"talismanRune2Effect\");\r\n    const e = document.getElementById(\"talismanRune3Effect\");\r\n    const f = document.getElementById(\"talismanRune4Effect\");\r\n    const g = document.getElementById(\"talismanRune5Effect\");\r\n    const h = document.getElementById(\"talismanMythicEffect\");\r\n    switch (i) {\r\n        case 1:\r\n            a.textContent = \"=-=-=-= Exemption Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Taxes -\" + format(10 * (player.talismanRarity[1 - 1] - 1)) + \"%\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman1Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman1Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman1Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman1Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman1Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +400 Duplication Rune Levels!\";\r\n            break;\r\n        case 2:\r\n            a.textContent = \"=-=-=-= Chronos Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Gain +\" + format(10 * (player.talismanRarity[2 - 1] - 1)) + \"% Global Speed Acceleration.\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman2Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman2Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman2Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman2Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman2Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +400 Speed Rune Levels!\";\r\n            break;\r\n        case 3:\r\n            a.textContent = \"=-=-=-= Midas Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Rune Blessing bonuses +\" + format(10 * (player.talismanRarity[3 - 1] - 1)) + \"%\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman3Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman3Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman3Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman3Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman3Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +400 Thrift Rune Levels!\";\r\n            break;\r\n        case 4:\r\n            a.textContent = \"=-=-=-= Metaphysics Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Talismans' Bonus Rune Levels +\" + format(0.05 * (player.talismanRarity[4 - 1] - 1), 2) + \" per level\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman4Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman4Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman4Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman4Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman4Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +400 Prism Rune Levels!\";\r\n            break;\r\n        case 5:\r\n            a.textContent = \"=-=-=-= Polymath Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Rune Spirit Bonuses +\" + format(1 * (player.talismanRarity[5 - 1] - 1)) + \"%\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman5Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman5Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman5Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman5Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman5Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +400 SI Rune Levels!\";\r\n            break;\r\n        case 6:\r\n            a.textContent = \"=-=-=-= Mortuus Est Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Bonus Ant Levels: +\" + format(2 * (player.talismanRarity[6 - 1] - 1));\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman6Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman6Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman6Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman6Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman6Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: Gain ant speed based on your total rune level!\";\r\n            break;\r\n        case 7:\r\n            a.textContent = \"=-=-=-= Plastic Talisman Effects =-=-=-=\";\r\n            b.textContent = \"Gain 1x normal production\";\r\n            c.textContent = \"Bonus Speed Rune Levels: \" + format(G['talisman7Effect'][1], 2, true);\r\n            d.textContent = \"Bonus Duplication Rune Levels: \" + format(G['talisman7Effect'][2], 2, true);\r\n            e.textContent = \"Bonus Prism Rune Levels: \" + format(G['talisman7Effect'][3], 2, true);\r\n            f.textContent = \"Bonus Thrift Rune Levels: \" + format(G['talisman7Effect'][4], 2, true);\r\n            g.textContent = \"Bonus SI Rune Levels: \" + format(G['talisman7Effect'][5], 2, true);\r\n            h.textContent = \"Mythic Effect: +2 Quarks per Hour on Export!\";\r\n            break;\r\n    }\r\n    if (player.talismanRarity[i - 1] !== 6) {\r\n        h.textContent = \"Get Max Enhance for a Mythical bonus effect!\";\r\n    }\r\n};\r\nexport const showTalismanPrices = (i) => {\r\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\r\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\r\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n    const a = document.getElementById(\"talismanShardCost\");\r\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\r\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\r\n    const d = document.getElementById(\"talismanRareFragmentCost\");\r\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\r\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\r\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\r\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"-=-=- Resources Required to Level Up -=-=-\";\r\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"silver\";\r\n    let m = G['talismanLevelCostMultiplier'][i];\r\n    if (player.talismanLevels[i - 1] >= 120) {\r\n        m *= (player.talismanLevels[i - 1] - 90) / 30;\r\n    }\r\n    if (player.talismanLevels[i - 1] >= 150) {\r\n        m *= (player.talismanLevels[i - 1] - 120) / 30;\r\n    }\r\n    if (player.talismanLevels[i - 1] >= 180) {\r\n        m *= (player.talismanLevels[i - 1] - 170) / 10;\r\n    }\r\n    a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3))));\r\n    b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3))));\r\n    c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3))));\r\n    d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3))));\r\n    e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3))));\r\n    f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\r\n    g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3))));\r\n};\r\nexport const showEnhanceTalismanPrices = (i) => {\r\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\r\n    document.getElementById(\"talismanlevelup\").style.display = \"block\";\r\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n    const a = document.getElementById(\"talismanShardCost\");\r\n    const b = document.getElementById(\"talismanCommonFragmentCost\");\r\n    const c = document.getElementById(\"talismanUncommonFragmentCost\");\r\n    const d = document.getElementById(\"talismanRareFragmentCost\");\r\n    const e = document.getElementById(\"talismanEpicFragmentCost\");\r\n    const f = document.getElementById(\"talismanLegendaryFragmentCost\");\r\n    const g = document.getElementById(\"talismanMythicalFragmentCost\");\r\n    document.getElementById(\"talismanLevelUpSummary\").textContent = \"=-=-= Resources Required to ENHANCE =-=-=\";\r\n    document.getElementById(\"talismanLevelUpSummary\").style.color = \"gold\";\r\n    const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\r\n    const index = player.talismanRarity[i - 1];\r\n    const costArray = array[index - 1];\r\n    const m = G['talismanLevelCostMultiplier'][i];\r\n    a.textContent = format(m * costArray[1]);\r\n    b.textContent = format(m * costArray[2]);\r\n    c.textContent = format(m * costArray[3]);\r\n    d.textContent = format(m * costArray[4]);\r\n    e.textContent = format(m * costArray[5]);\r\n    f.textContent = format(m * costArray[6]);\r\n    g.textContent = format(m * costArray[7]);\r\n};\r\nexport const showRespecInformation = (i) => {\r\n    G['talismanRespec'] = i;\r\n    const num = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\r\n    document.getElementById(\"talismanEffect\").style.display = \"none\";\r\n    document.getElementById(\"talismanlevelup\").style.display = \"none\";\r\n    document.getElementById(\"talismanrespec\").style.display = \"block\";\r\n    const runeName = [\"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\r\n    const runeModifier = [\"Positive\", \"Positive\", \"Positive\", \"Positive\"];\r\n    if (i <= 7) {\r\n        for (let k = 1; k <= 5; k++) {\r\n            G['mirrorTalismanStats'][k] = player[\"talisman\" + num[i - 1]][k];\r\n        }\r\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm [-100,000 Offerings]\";\r\n    }\r\n    if (i === 8) {\r\n        for (let k = 1; k <= 5; k++) {\r\n            G['mirrorTalismanStats'][k] = 1;\r\n        }\r\n        document.getElementById(\"confirmTalismanRespec\").textContent = \"Confirm ALL [-400,000 Offerings]\";\r\n    }\r\n    for (let j = 1; j <= 5; j++) {\r\n        if (G['mirrorTalismanStats'][j] === 1) {\r\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid limegreen\";\r\n            runeModifier[j - 1] = \"Positive\";\r\n        }\r\n        else if (G['mirrorTalismanStats'][j] === -1) {\r\n            document.getElementById(\"talismanRespecButton\" + j).style.border = \"2px solid crimson\";\r\n            runeModifier[j - 1] = \"Negative\";\r\n        }\r\n        document.getElementById(\"talismanRespecButton\" + j).textContent = runeName[j - 1] + \": \" + runeModifier[j - 1];\r\n    }\r\n    document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\r\n};\r\nexport const changeTalismanModifier = (i) => {\r\n    const runeName = [null, \"Speed Rune\", \"Duplication Rune\", \"Prism Rune\", \"Thrift Rune\", \"SI Rune\"];\r\n    const el = document.getElementById(\"talismanRespecButton\" + i);\r\n    if (G['mirrorTalismanStats'][i] === 1) {\r\n        G['mirrorTalismanStats'][i] = (-1);\r\n        el.textContent = runeName[i] + \": Negative\";\r\n        el.style.border = \"2px solid crimson\";\r\n    }\r\n    else {\r\n        G['mirrorTalismanStats'][i] = (1);\r\n        el.textContent = runeName[i] + \": Positive\";\r\n        el.style.border = \"2px solid limegreen\";\r\n    }\r\n    const checkSum = G['mirrorTalismanStats'].reduce(function (a, b) {\r\n        return a + b;\r\n    }, 0);\r\n    if (checkSum === 1) {\r\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"block\";\r\n    }\r\n    else {\r\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\r\n    }\r\n};\r\nexport const respecTalismanConfirm = (i) => {\r\n    const num = [null, \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"];\r\n    if (player.runeshards >= 100000 && i <= 7) {\r\n        for (let j = 1; j <= 5; j++) {\r\n            player[\"talisman\" + num[i]][j] = G['mirrorTalismanStats'][j];\r\n        }\r\n        player.runeshards -= 100000;\r\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\r\n        document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\r\n        showTalismanEffect(i);\r\n    }\r\n    else if (player.runeshards >= 400000 && i === 8) {\r\n        player.runeshards -= 400000;\r\n        for (let j = 1; j <= 7; j++) {\r\n            for (let k = 1; k <= 5; k++) {\r\n                player[\"talisman\" + num[j]][k] = G['mirrorTalismanStats'][k];\r\n            }\r\n        }\r\n        document.getElementById(\"confirmTalismanRespec\").style.display = \"none\";\r\n    }\r\n    calculateRuneLevels();\r\n};\r\nexport const respecTalismanCancel = (i) => {\r\n    document.getElementById(\"talismanrespec\").style.display = \"none\";\r\n    if (i <= 7) {\r\n        document.getElementById(\"talismanEffect\").style.display = \"block\";\r\n        showTalismanEffect(i);\r\n    }\r\n};\r\nexport const updateTalismanAppearance = (i) => {\r\n    const el = document.getElementById(\"talisman\" + i);\r\n    const la = document.getElementById(\"talisman\" + i + \"level\");\r\n    const rarity = player.talismanRarity[i - 1];\r\n    if (rarity === 1) {\r\n        el.style.border = \"4px solid white\";\r\n        la.style.color = \"white\";\r\n    }\r\n    if (rarity === 2) {\r\n        el.style.border = \"4px solid limegreen\";\r\n        la.style.color = \"limegreen\";\r\n    }\r\n    if (rarity === 3) {\r\n        el.style.border = \"4px solid lightblue\";\r\n        la.style.color = \"lightblue\";\r\n    }\r\n    if (rarity === 4) {\r\n        el.style.border = \"4px solid plum\";\r\n        la.style.color = \"plum\";\r\n    }\r\n    if (rarity === 5) {\r\n        el.style.border = \"4px solid orange\";\r\n        la.style.color = \"orange\";\r\n    }\r\n    if (rarity === 6) {\r\n        el.style.border = \"4px solid crimson\";\r\n        la.style.color = \"crimson\";\r\n    }\r\n};\r\nexport const buyTalismanLevels = (i, auto = false) => {\r\n    let max = 1;\r\n    if (player.ascensionCount > 0) {\r\n        max = 30;\r\n    }\r\n    for (let j = 1; j <= max; j++) {\r\n        let checkSum = 0;\r\n        let priceMult = G['talismanLevelCostMultiplier'][i];\r\n        if (player.talismanLevels[i - 1] >= 120) {\r\n            priceMult *= (player.talismanLevels[i - 1] - 90) / 30;\r\n        }\r\n        if (player.talismanLevels[i - 1] >= 150) {\r\n            priceMult *= (player.talismanLevels[i - 1] - 120) / 30;\r\n        }\r\n        if (player.talismanLevels[i - 1] >= 180) {\r\n            priceMult *= (player.talismanLevels[i - 1] - 170) / 10;\r\n        }\r\n        if (player.talismanLevels[i - 1] < (player.talismanRarity[i - 1] * 30 + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400))) {\r\n            if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\r\n                checkSum++;\r\n            }\r\n            if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)))) {\r\n                checkSum++;\r\n            }\r\n        }\r\n        if (checkSum === 7) {\r\n            player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i - 1], 3)));\r\n            player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i - 1] - 30, 3)));\r\n            player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i - 1] - 60, 3)));\r\n            player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i - 1] - 90, 3)));\r\n            player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i - 1] - 120, 3)));\r\n            player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\r\n            player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i - 1] - 150, 3)));\r\n            player.talismanLevels[i - 1] += 1;\r\n        }\r\n        if (checkSum !== 7) {\r\n            break;\r\n        }\r\n    }\r\n    updateTalismanInventory();\r\n    if (!auto) {\r\n        showTalismanPrices(i);\r\n    }\r\n    calculateRuneLevels();\r\n};\r\nexport const buyTalismanEnhance = (i, auto = false) => {\r\n    let checkSum = 0;\r\n    if (player.talismanRarity[i - 1] < 6) {\r\n        const priceMult = G['talismanLevelCostMultiplier'][i];\r\n        const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\r\n        const index = player.talismanRarity[i - 1] - 1;\r\n        const costArray = array[index];\r\n        if (player.commonFragments >= priceMult * costArray[2]) {\r\n            checkSum++;\r\n        }\r\n        if (player.uncommonFragments >= priceMult * costArray[3]) {\r\n            checkSum++;\r\n        }\r\n        if (player.rareFragments >= priceMult * costArray[4]) {\r\n            checkSum++;\r\n        }\r\n        if (player.epicFragments >= priceMult * costArray[5]) {\r\n            checkSum++;\r\n        }\r\n        if (player.legendaryFragments >= priceMult * costArray[6]) {\r\n            checkSum++;\r\n        }\r\n        if (player.mythicalFragments >= priceMult * costArray[7]) {\r\n            checkSum++;\r\n        }\r\n        if (checkSum === 6) {\r\n            player.commonFragments -= (priceMult * costArray[2]);\r\n            player.uncommonFragments -= (priceMult * costArray[3]);\r\n            player.rareFragments -= (priceMult * costArray[4]);\r\n            player.epicFragments -= (priceMult * costArray[5]);\r\n            player.legendaryFragments -= (priceMult * costArray[6]);\r\n            player.mythicalFragments -= (priceMult * costArray[7]);\r\n            player.talismanRarity[i - 1] += 1;\r\n        }\r\n        updateTalismanAppearance(i);\r\n        updateTalismanInventory();\r\n        if (!auto) {\r\n            showEnhanceTalismanPrices(i);\r\n        }\r\n        calculateRuneLevels();\r\n    }\r\n};\r\n","import { player } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport { openCube } from './Cubes';\r\nexport const openTesseract = (value, max = false) => {\r\n    let toSpend = Math.min(player.wowTesseracts, value);\r\n    if (max) {\r\n        toSpend = player.wowTesseracts;\r\n    }\r\n    player.wowTesseracts -= toSpend;\r\n    player.tesseractOpenedDaily += toSpend;\r\n    if (player.tesseractQuarkDaily < 25 + 75 * +player.shopUpgrades.tesseractToQuarkBought) {\r\n        while (player.tesseractOpenedDaily >= 10 * Math.pow(1 + player.tesseractQuarkDaily, 3) &&\r\n            player.tesseractQuarkDaily < 25 + 75 * +player.shopUpgrades.tesseractToQuarkBought) {\r\n            player.tesseractQuarkDaily += 1;\r\n            player.worlds += 1;\r\n        }\r\n    }\r\n    const toSpendModulo = toSpend % 20;\r\n    const toSpendDiv20 = Math.floor(toSpend / 20);\r\n    const blessings = {\r\n        accelerator: { weight: 4, pdf: (x) => 0 <= x && x <= 20 },\r\n        multiplier: { weight: 4, pdf: (x) => 20 < x && x <= 40 },\r\n        offering: { weight: 2, pdf: (x) => 40 < x && x <= 50 },\r\n        runeExp: { weight: 2, pdf: (x) => 50 < x && x <= 60 },\r\n        obtainium: { weight: 2, pdf: (x) => 60 < x && x <= 70 },\r\n        antSpeed: { weight: 2, pdf: (x) => 70 < x && x <= 80 },\r\n        antSacrifice: { weight: 1, pdf: (x) => 80 < x && x <= 85 },\r\n        antELO: { weight: 1, pdf: (x) => 85 < x && x <= 90 },\r\n        talismanBonus: { weight: 1, pdf: (x) => 90 < x && x <= 95 },\r\n        globalSpeed: { weight: 1, pdf: (x) => 95 < x && x <= 100 }\r\n    };\r\n    for (const key in player.tesseractBlessings) {\r\n        player.tesseractBlessings[key] += blessings[key].weight * toSpendDiv20;\r\n    }\r\n    for (let i = 0; i < toSpendModulo; i++) {\r\n        const num = 100 * Math.random();\r\n        for (const key in player.tesseractBlessings) {\r\n            if (blessings[key].pdf(num))\r\n                player.tesseractBlessings[key] += 1;\r\n        }\r\n    }\r\n    calculateTesseractBlessings();\r\n    const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153]);\r\n    player.wowCubes += extraCubeBlessings;\r\n    openCube(extraCubeBlessings, false);\r\n};\r\nexport const calculateTesseractBlessings = () => {\r\n    const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\r\n    for (let i = 0; i < 10; i++) {\r\n        let power = 1;\r\n        let mult = 1;\r\n        if (tesseractArray[i] >= 1000 && i !== 5) {\r\n            power = G['giftDRPower'][i];\r\n            mult *= Math.pow(1000, (1 - G['giftDRPower'][i]));\r\n        }\r\n        G['tesseractBonusMultiplier'][i + 1] = 1 + mult * G['giftbase'][i] * Math.pow(tesseractArray[i], power) * G['hypercubeBonusMultiplier'][i + 1];\r\n    }\r\n};\r\n","import { revealStuff, hideStuff, updateChallengeDisplay, showCorruptionStatsLoadouts } from './UpdateHTML';\r\nimport { player, interval, clearInt, format, resetCheck } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nimport { visualUpdateCubes } from './UpdateVisuals';\r\nimport { calculateRuneLevels } from './Calculate';\r\nimport { reset } from './Reset';\r\nimport { achievementaward } from './Achievements';\r\nimport { getChallengeConditions } from './Challenges';\r\nimport { maxRoombaResearchIndex } from './Research';\r\nimport { loadStatisticsCubeMultipliers, loadStatisticsOfferingMultipliers, loadStatisticsAccelerator, loadStatisticsMultiplier } from './Statistics';\r\nimport { corruptionDisplay, corruptionLoadoutTableUpdate } from './Corruptions';\r\nconst tabNumberConst = {\r\n    \"settings\": -1,\r\n    \"shop\": 0,\r\n    \"buildings\": 1,\r\n    \"upgrades\": 2,\r\n    \"achievements\": 3,\r\n    \"runes\": 4,\r\n    \"challenges\": 5,\r\n    \"researches\": 6,\r\n    \"ants\": 7,\r\n    \"cubes\": 8,\r\n    \"traits\": 9\r\n};\r\nexport const toggleTabs = (name) => {\r\n    G['currentTab'] = name;\r\n    player.tabnumber = tabNumberConst[name];\r\n    revealStuff();\r\n    hideStuff();\r\n    const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\r\n    if (player.tabnumber !== -1) {\r\n        for (let i = 0; i < subTabList.length; i++) {\r\n            const button = document.getElementById(subTabList[i].buttonID);\r\n            if (button && button.style.backgroundColor === \"crimson\") {\r\n                player.subtabNumber = i;\r\n                break;\r\n            }\r\n            if (player.tabnumber === 9 && button.style.borderColor === \"dodgerblue\") {\r\n                player.subtabNumber = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const btns = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children;\r\n        for (let i = 0; i < btns.length; i++) {\r\n            if (btns[i].classList.contains(\"buttonActive\")) {\r\n                player.subtabNumber = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const toggleSettings = (i) => {\r\n    i++;\r\n    if (player.toggles[i] === true) {\r\n        player.toggles[i] = false;\r\n    }\r\n    else {\r\n        player.toggles[i] = true;\r\n    }\r\n    toggleauto();\r\n};\r\nexport const toggleChallenges = (i, auto = false) => {\r\n    if (player.currentChallenge.transcension === 0 && (i <= 5)) {\r\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n            player.currentChallenge.transcension = i;\r\n            reset(\"transcensionChallenge\", false, \"enterChallenge\");\r\n            player.transcendCount -= 1;\r\n        }\r\n    }\r\n    if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) && (i >= 6 && i < 11)) {\r\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2) {\r\n            player.currentChallenge.reincarnation = i;\r\n            reset(\"reincarnationChallenge\", false, \"enterChallenge\");\r\n            player.reincarnationCount -= 1;\r\n        }\r\n    }\r\n    if (player.challengecompletions[10] > 0) {\r\n        if ((player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0) && (i >= 11)) {\r\n            reset(\"ascensionChallenge\", false, \"enterChallenge\");\r\n            player.currentChallenge.ascension = i;\r\n            if (player.currentChallenge.ascension === 12) {\r\n                player.antPoints = new Decimal(\"8\");\r\n            }\r\n            if (player.currentChallenge.ascension === 15) {\r\n                player.usedCorruptions[0] = 0;\r\n                player.prototypeCorruptions[0] = 0;\r\n                for (let i = 1; i <= 9; i++) {\r\n                    player.usedCorruptions[i] = 11;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateChallengeDisplay();\r\n    getChallengeConditions(i);\r\n    if (!auto && player.autoChallengeRunning) {\r\n        toggleAutoChallengeRun();\r\n    }\r\n    if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\r\n        achievementaward(238);\r\n    }\r\n};\r\nexport const toggleBuyAmount = (quantity, type) => {\r\n    player[type + 'buyamount'] = quantity;\r\n    let a = ['one', 'ten', 'hundred', 'thousand'][quantity.toString().length - 1];\r\n    const c = type + a;\r\n    let d = \"\";\r\n    d = d + c;\r\n    document.getElementById(d).style.backgroundColor = \"Green\";\r\n    if (quantity !== 1) {\r\n        a = \"one\";\r\n        d = type + a;\r\n        document.getElementById(d).style.backgroundColor = \"Black\";\r\n    }\r\n    if (quantity !== 10) {\r\n        a = \"ten\";\r\n        d = type + a;\r\n        document.getElementById(d).style.backgroundColor = \"Black\";\r\n    }\r\n    if (quantity !== 100) {\r\n        a = \"hundred\";\r\n        d = type + a;\r\n        document.getElementById(d).style.backgroundColor = \"Black\";\r\n    }\r\n    if (quantity !== 1000) {\r\n        a = \"thousand\";\r\n        d = type + a;\r\n        document.getElementById(d).style.backgroundColor = \"Black\";\r\n    }\r\n};\r\nexport const toggleShops = (i) => {\r\n    if (i === 1 && player.shoptoggles.coin === false) {\r\n        player.shoptoggles.coin = true;\r\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: ON\";\r\n    }\r\n    else if (i === 1 && player.shoptoggles.coin === true) {\r\n        player.shoptoggles.coin = false;\r\n        document.getElementById(\"shoptogglecoin\").textContent = \"Auto: OFF\";\r\n    }\r\n    if (i === 2 && player.shoptoggles.prestige === false) {\r\n        player.shoptoggles.prestige = true;\r\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: ON\";\r\n    }\r\n    else if (i === 2 && player.shoptoggles.prestige === true) {\r\n        player.shoptoggles.prestige = false;\r\n        document.getElementById(\"shoptoggleprestige\").textContent = \"Auto: OFF\";\r\n    }\r\n    if (i === 3 && player.shoptoggles.transcend === false) {\r\n        player.shoptoggles.transcend = true;\r\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: ON\";\r\n    }\r\n    else if (i === 3 && player.shoptoggles.transcend === true) {\r\n        player.shoptoggles.transcend = false;\r\n        document.getElementById(\"shoptoggletranscend\").textContent = \"Auto: OFF\";\r\n    }\r\n    if (i === 4 && player.shoptoggles.generators === false) {\r\n        player.shoptoggles.generators = true;\r\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: ON\";\r\n    }\r\n    else if (i === 4 && player.shoptoggles.generators === true) {\r\n        player.shoptoggles.generators = false;\r\n        document.getElementById(\"shoptogglegenerator\").textContent = \"Auto: OFF\";\r\n    }\r\n    if (i === 5 && player.shoptoggles.reincarnate === false) {\r\n        player.shoptoggles.reincarnate = true;\r\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: ON\";\r\n    }\r\n    else if (i === 5 && player.shoptoggles.reincarnate === true) {\r\n        player.shoptoggles.reincarnate = false;\r\n        document.getElementById(\"particleAutoUpgrade\").textContent = \"Auto: OFF\";\r\n    }\r\n};\r\nexport function tabs(mainTab) {\r\n    const tabs = {\r\n        \"-1\": { tabName: \"settings\", unlocked: true },\r\n        0: { tabName: \"shop\", unlocked: player.unlocks.reincarnate },\r\n        1: { tabName: \"buildings\", unlocked: true },\r\n        2: { tabName: \"upgrades\", unlocked: true },\r\n        3: { tabName: \"achievements\", unlocked: player.unlocks.coinfour },\r\n        4: { tabName: \"runes\", unlocked: player.unlocks.prestige },\r\n        5: { tabName: \"challenges\", unlocked: player.unlocks.transcend },\r\n        6: { tabName: \"researches\", unlocked: player.unlocks.reincarnate },\r\n        7: { tabName: \"ants\", unlocked: player.achievements[127] > 0 },\r\n        8: { tabName: \"cubes\", unlocked: player.achievements[141] > 0 },\r\n        9: { tabName: \"traits\", unlocked: player.achievements[141] > 0 }\r\n    };\r\n    if (typeof mainTab === 'undefined') {\r\n        return tabs;\r\n    }\r\n    return tabs[mainTab];\r\n}\r\nexport const subTabsInMainTab = (mainTab) => {\r\n    const subTabs = {\r\n        \"-1\": {\r\n            tabSwitcher: setActiveSettingScreen,\r\n            subTabList: [\r\n                { subTabID: \"settingsubtab\", unlocked: true },\r\n                { subTabID: \"creditssubtab\", unlocked: true },\r\n                { subTabID: \"statisticsSubTab\", unlocked: true },\r\n                { subTabID: \"resetHistorySubTab\", unlocked: player.unlocks.prestige },\r\n                { subTabID: \"ascendHistorySubTab\", unlocked: player.ascensionCount > 0 }\r\n            ]\r\n        },\r\n        0: { subTabList: [] },\r\n        1: {\r\n            tabSwitcher: toggleBuildingScreen,\r\n            subTabList: [\r\n                { subTabID: \"coin\", unlocked: true, buttonID: \"switchToCoinBuilding\" },\r\n                { subTabID: \"diamond\", unlocked: player.unlocks.prestige, buttonID: \"switchToDiamondBuilding\" },\r\n                { subTabID: \"mythos\", unlocked: player.unlocks.transcend, buttonID: \"switchToMythosBuilding\" },\r\n                { subTabID: \"particle\", unlocked: player.unlocks.reincarnate, buttonID: \"switchToParticleBuilding\" },\r\n                { subTabID: \"tesseract\", unlocked: player.achievements[183] > 0, buttonID: \"switchToTesseractBuilding\" }\r\n            ]\r\n        },\r\n        2: { subTabList: [] },\r\n        3: { subTabList: [] },\r\n        4: {\r\n            tabSwitcher: toggleRuneScreen,\r\n            subTabList: [\r\n                { subTabID: 1, unlocked: player.unlocks.prestige, buttonID: \"toggleRuneSubTab1\" },\r\n                { subTabID: 2, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab2\" },\r\n                { subTabID: 3, unlocked: player.achievements[134] > 0, buttonID: \"toggleRuneSubTab3\" },\r\n                { subTabID: 4, unlocked: player.achievements[204] > 0, buttonID: \"toggleRuneSubTab4\" }\r\n            ]\r\n        },\r\n        5: { subTabList: [] },\r\n        6: { subTabList: [] },\r\n        7: { subTabList: [] },\r\n        8: {\r\n            tabSwitcher: toggleCubeSubTab,\r\n            subTabList: [\r\n                { subTabID: 1, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab1\" },\r\n                { subTabID: 2, unlocked: player.achievements[197] > 0, buttonID: \"switchCubeSubTab2\" },\r\n                { subTabID: 3, unlocked: player.achievements[211] > 0, buttonID: \"switchCubeSubTab3\" },\r\n                { subTabID: 4, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab4\" },\r\n                { subTabID: 5, unlocked: player.achievements[141] > 0, buttonID: \"switchCubeSubTab5\" },\r\n                { subTabID: 6, unlocked: player.achievements[218] > 0, buttonID: \"switchCubeSubTab6\" }\r\n            ]\r\n        },\r\n        9: {\r\n            tabSwitcher: toggleCorruptionLoadoutsStats,\r\n            subTabList: [\r\n                { subTabID: true, unlocked: player.achievements[141] > 0, buttonID: \"corrStatsBtn\" },\r\n                { subTabID: false, unlocked: player.achievements[141] > 0, buttonID: \"corrLoadoutsBtn\" }\r\n            ]\r\n        },\r\n    };\r\n    return subTabs[mainTab];\r\n};\r\nexport const keyboardTabChange = (dir = 1, main = true) => {\r\n    if (main) {\r\n        player.tabnumber += dir;\r\n        const maxTab = Object.keys(tabs()).reduce((a, b) => Math.max(a, +b), -Infinity);\r\n        const minTab = Object.keys(tabs()).reduce((a, b) => Math.min(a, +b), Infinity);\r\n        const handleLoopBack = () => {\r\n            if (player.tabnumber === maxTab + 1) {\r\n                player.tabnumber = minTab;\r\n            }\r\n            if (player.tabnumber === minTab - 1) {\r\n                player.tabnumber = maxTab;\r\n            }\r\n        };\r\n        handleLoopBack();\r\n        while (!tabs(player.tabnumber).unlocked) {\r\n            player.tabnumber += dir;\r\n            handleLoopBack();\r\n        }\r\n        toggleTabs(tabs(player.tabnumber).tabName);\r\n    }\r\n    else {\r\n        const subTabList = subTabsInMainTab(player.tabnumber).subTabList;\r\n        if (subTabList.length === 0)\r\n            return;\r\n        player.subtabNumber += dir;\r\n        const handleLoopBack = () => {\r\n            const numSubTabs = subTabList.length;\r\n            player.subtabNumber = (player.subtabNumber + numSubTabs) % numSubTabs;\r\n        };\r\n        handleLoopBack();\r\n        while (!subTabList[player.subtabNumber].unlocked) {\r\n            player.subtabNumber += dir;\r\n            handleLoopBack();\r\n        }\r\n        toggleSubTab(player.tabnumber, player.subtabNumber);\r\n    }\r\n};\r\nexport const toggleSubTab = (mainTab = 1, subTab = 0) => {\r\n    if (tabs(mainTab).unlocked && subTabsInMainTab(mainTab).subTabList.length > 0) {\r\n        if (mainTab === -1) {\r\n            const btn = document.getElementById(\"settings\").getElementsByClassName(\"subtabSwitcher\")[0].children[subTab];\r\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\r\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID, btn);\r\n        }\r\n        else {\r\n            if (subTabsInMainTab(mainTab).subTabList[subTab].unlocked)\r\n                subTabsInMainTab(mainTab).tabSwitcher(subTabsInMainTab(mainTab).subTabList[subTab].subTabID);\r\n        }\r\n    }\r\n};\r\nexport const toggleautoreset = (i) => {\r\n    if (i === 1) {\r\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n            player.resettoggle1 = 2;\r\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        else {\r\n            player.resettoggle1 = 1;\r\n            document.getElementById(\"prestigeautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n    }\r\n    else if (i === 2) {\r\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n            player.resettoggle2 = 2;\r\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        else {\r\n            player.resettoggle2 = 1;\r\n            document.getElementById(\"transcendautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n    }\r\n    else if (i === 3) {\r\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n            player.resettoggle3 = 2;\r\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: TIME\";\r\n        }\r\n        else {\r\n            player.resettoggle3 = 1;\r\n            document.getElementById(\"reincarnateautotoggle\").textContent = \"Mode: AMOUNT\";\r\n        }\r\n    }\r\n    else if (i === 4) {\r\n    }\r\n};\r\nexport const toggleautobuytesseract = () => {\r\n    if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\r\n        player.tesseractAutoBuyerToggle = 2;\r\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: OFF\";\r\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid red\";\r\n    }\r\n    else {\r\n        player.tesseractAutoBuyerToggle = 1;\r\n        document.getElementById(\"tesseractautobuytoggle\").textContent = \"Auto Buy: ON\";\r\n        document.getElementById(\"tesseractautobuytoggle\").style.border = \"2px solid green\";\r\n    }\r\n};\r\nexport const toggleauto = () => {\r\n    const autos = document.getElementsByClassName(\"auto\");\r\n    for (const auto of Array.from(autos)) {\r\n        const format = auto.getAttribute(\"format\") || 'Auto [$]';\r\n        const toggleId = auto.getAttribute(\"toggleId\");\r\n        if (toggleId === undefined || toggleId === null) {\r\n            continue;\r\n        }\r\n        const finishedString = format.replace('$', player.toggles[+toggleId] ? \"ON\" : \"OFF\");\r\n        auto.textContent = finishedString;\r\n        auto.style.border = \"2px solid \" + (player.toggles[+toggleId] ? \"green\" : \"red\");\r\n    }\r\n};\r\nexport const toggleResearchBuy = () => {\r\n    if (G['maxbuyresearch']) {\r\n        G['maxbuyresearch'] = false;\r\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: 1 Level\";\r\n    }\r\n    else {\r\n        G['maxbuyresearch'] = true;\r\n        document.getElementById(\"toggleresearchbuy\").textContent = \"Upgrade: MAX [if possible]\";\r\n    }\r\n};\r\nexport const toggleAutoResearch = () => {\r\n    const el = document.getElementById(\"toggleautoresearch\");\r\n    if (player.autoResearchToggle) {\r\n        player.autoResearchToggle = false;\r\n        el.textContent = \"Automatic: OFF\";\r\n        player.autoResearch = 0;\r\n    }\r\n    else {\r\n        player.autoResearchToggle = true;\r\n        el.textContent = \"Automatic: ON\";\r\n    }\r\n    if (!player.autoResearchToggle) {\r\n        for (let i = 1; i <= maxRoombaResearchIndex(player); i++) {\r\n            const l = document.getElementById(\"res\" + i);\r\n            if (player.researches[i] === 0) {\r\n                l.style.backgroundColor = \"black\";\r\n            }\r\n            if (0 < player.researches[i] && player.researches[i] < G['researchMaxLevels'][i]) {\r\n                l.style.backgroundColor = \"purple\";\r\n            }\r\n            if (player.researches[i] === G['researchMaxLevels'][i]) {\r\n                l.style.backgroundColor = \"green\";\r\n            }\r\n        }\r\n    }\r\n    if (player.autoResearchToggle && player.cubeUpgrades[9] === 1) {\r\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\r\n        const doc = document.getElementById(\"res\" + player.autoResearch);\r\n        if (doc)\r\n            doc.style.backgroundColor = \"orange\";\r\n    }\r\n};\r\nexport const toggleAutoSacrifice = (index) => {\r\n    const el = document.getElementById(\"toggleautosacrifice\");\r\n    if (index === 0) {\r\n        if (player.autoSacrificeToggle) {\r\n            player.autoSacrificeToggle = false;\r\n            el.textContent = \"Auto Runes: OFF\";\r\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid red\";\r\n            player.autoSacrifice = 0;\r\n        }\r\n        else {\r\n            player.autoSacrificeToggle = true;\r\n            el.textContent = \"Auto Runes: ON\";\r\n            document.getElementById(\"toggleautosacrifice\").style.border = \"2px solid green\";\r\n        }\r\n    }\r\n    else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAutoLevel > 0.5) {\r\n        player.autoSacrifice = index;\r\n    }\r\n    for (let i = 1; i <= 5; i++) {\r\n        document.getElementById(\"rune\" + i).style.backgroundColor = player.autoSacrifice === i ? \"orange\" : \"#171717\";\r\n    }\r\n    calculateRuneLevels();\r\n};\r\nexport const toggleBuildingScreen = (input) => {\r\n    G['buildingSubTab'] = input;\r\n    const screen = {\r\n        \"coin\": {\r\n            screen: \"coinBuildings\",\r\n            button: \"switchToCoinBuilding\",\r\n            subtabNumber: 0\r\n        },\r\n        \"diamond\": {\r\n            screen: \"prestige\",\r\n            button: \"switchToDiamondBuilding\",\r\n            subtabNumber: 1\r\n        },\r\n        \"mythos\": {\r\n            screen: \"transcension\",\r\n            button: \"switchToMythosBuilding\",\r\n            subtabNumber: 2\r\n        },\r\n        \"particle\": {\r\n            screen: \"reincarnation\",\r\n            button: \"switchToParticleBuilding\",\r\n            subtabNumber: 3\r\n        },\r\n        \"tesseract\": {\r\n            screen: \"ascension\",\r\n            button: \"switchToTesseractBuilding\",\r\n            subtabNumber: 4\r\n        }\r\n    };\r\n    for (const key in screen) {\r\n        document.getElementById(screen[key].screen).style.display = \"none\";\r\n        document.getElementById(screen[key].button).style.backgroundColor = \"#171717\";\r\n    }\r\n    document.getElementById(screen[G['buildingSubTab']].screen).style.display = \"block\";\r\n    document.getElementById(screen[G['buildingSubTab']].button).style.backgroundColor = \"crimson\";\r\n    player.subtabNumber = screen[G['buildingSubTab']].subtabNumber;\r\n};\r\nexport const toggleRuneScreen = (index) => {\r\n    const screens = ['runes', 'talismans', 'blessings', 'spirits'];\r\n    G['runescreen'] = screens[index - 1];\r\n    for (let i = 1; i <= 4; i++) {\r\n        const a = document.getElementById(\"toggleRuneSubTab\" + i);\r\n        const b = document.getElementById(\"runeContainer\" + i);\r\n        if (i === index) {\r\n            a.style.border = \"2px solid gold\";\r\n            a.style.backgroundColor = \"crimson\";\r\n            b.style.display = \"block\";\r\n        }\r\n        else {\r\n            a.style.border = \"2px solid silver\";\r\n            a.style.backgroundColor = \"#171717\";\r\n            b.style.display = \"none\";\r\n        }\r\n    }\r\n    player.subtabNumber = index - 1;\r\n};\r\nexport const toggleautofortify = () => {\r\n    const el = document.getElementById(\"toggleautofortify\");\r\n    if (player.autoFortifyToggle === false && player.researches[130] == 1) {\r\n        el.textContent = \"Auto Fortify: ON\";\r\n        el.style.border = \"2px solid green\";\r\n    }\r\n    else {\r\n        el.textContent = \"Auto Fortify: OFF\";\r\n        el.style.border = \"2px solid red\";\r\n    }\r\n    player.autoFortifyToggle = !player.autoFortifyToggle;\r\n};\r\nexport const toggleautoenhance = () => {\r\n    const el = document.getElementById(\"toggleautoenhance\");\r\n    if (player.autoEnhanceToggle === false && player.researches[135] == 1) {\r\n        el.textContent = \"Auto Enhance: ON\";\r\n        el.style.border = \"2px solid green\";\r\n    }\r\n    else {\r\n        el.textContent = \"Auto Enhance: OFF\";\r\n        el.style.border = \"2px solid red\";\r\n    }\r\n    player.autoEnhanceToggle = !player.autoEnhanceToggle;\r\n};\r\nfunction setActiveSettingScreen(subtab, clickedButton) {\r\n    const subtabEl = document.getElementById(subtab);\r\n    if (subtabEl.classList.contains(\"subtabActive\")) {\r\n        return;\r\n    }\r\n    const switcherEl = clickedButton.parentNode;\r\n    switcherEl.querySelectorAll(\".buttonActive\").forEach(b => b.classList.remove(\"buttonActive\"));\r\n    clickedButton.classList.add(\"buttonActive\");\r\n    subtabEl.parentNode.querySelectorAll(\".subtabActive\").forEach(subtab => subtab.classList.remove(\"subtabActive\"));\r\n    subtabEl.classList.add(\"subtabActive\");\r\n    if (subtab === \"statisticsSubTab\") {\r\n        const id = interval(refreshStats, 1000);\r\n        function refreshStats() {\r\n            if (G['currentTab'] !== \"settings\") {\r\n                clearInt(id);\r\n            }\r\n            loadStatisticsAccelerator();\r\n            loadStatisticsMultiplier();\r\n            loadStatisticsOfferingMultipliers();\r\n            loadStatisticsCubeMultipliers();\r\n            if (!subtabEl.classList.contains(\"subtabActive\"))\r\n                clearInt(id);\r\n        }\r\n        refreshStats();\r\n    }\r\n}\r\nexport const toggleShopConfirmation = () => {\r\n    const el = document.getElementById(\"toggleConfirmShop\");\r\n    el.textContent = G['shopConfirmation']\r\n        ? \"Shop Confirmations: OFF\"\r\n        : \"Shop Confirmations: ON\";\r\n    G['shopConfirmation'] = !G['shopConfirmation'];\r\n};\r\nexport const toggleAntMaxBuy = () => {\r\n    const el = document.getElementById(\"toggleAntMax\");\r\n    el.textContent = player.antMax\r\n        ? \"Buy Max: OFF\"\r\n        : \"Buy Max: ON\";\r\n    player.antMax = !player.antMax;\r\n};\r\nexport const toggleAntAutoSacrifice = (mode = 0) => {\r\n    if (mode === 0) {\r\n        const el = document.getElementById(\"toggleAutoSacrificeAnt\");\r\n        if (player.autoAntSacrifice) {\r\n            player.autoAntSacrifice = false;\r\n            el.textContent = \"Auto Sacrifice: OFF\";\r\n        }\r\n        else {\r\n            player.autoAntSacrifice = true;\r\n            el.textContent = \"Auto Sacrifice: ON\";\r\n        }\r\n    }\r\n    else if (mode === 1) {\r\n        const el = document.getElementById(\"autoSacrificeAntMode\");\r\n        if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\r\n            player.autoAntSacrificeMode = 2;\r\n            el.textContent = \"Mode: Real time\";\r\n        }\r\n        else {\r\n            player.autoAntSacrificeMode = 1;\r\n            el.textContent = \"Mode: In-game time\";\r\n        }\r\n    }\r\n};\r\nexport const toggleMaxBuyCube = () => {\r\n    const el = document.getElementById(\"toggleCubeBuy\");\r\n    if (G['buyMaxCubeUpgrades']) {\r\n        G['buyMaxCubeUpgrades'] = false;\r\n        el.textContent = \"Upgrade: 1 Level wow\";\r\n    }\r\n    else {\r\n        G['buyMaxCubeUpgrades'] = true;\r\n        el.textContent = \"Upgrade: MAX [if possible wow]\";\r\n    }\r\n};\r\nexport const toggleCubeSubTab = (i) => {\r\n    const numSubTabs = subTabsInMainTab(8).subTabList.length;\r\n    for (let j = 1; j <= numSubTabs; j++) {\r\n        const cubeTab = document.getElementById(`cubeTab${j}`);\r\n        if (cubeTab.style.display === \"block\" && j !== i) {\r\n            cubeTab.style.display = \"none\";\r\n        }\r\n        if (cubeTab.style.display === \"none\" && j === i) {\r\n            cubeTab.style.display = \"block\";\r\n            player.subtabNumber = j - 1;\r\n        }\r\n        document.getElementById(\"switchCubeSubTab\" + j).style.backgroundColor = i === j ? \"crimson\" : \"#171717\";\r\n    }\r\n    visualUpdateCubes();\r\n};\r\nexport const updateAutoChallenge = (i) => {\r\n    switch (i) {\r\n        case 1:\r\n            const t = parseFloat(document.getElementById('startAutoChallengeTimerInput').value) || 0;\r\n            player.autoChallengeTimer.start = Math.max(t, 0);\r\n            document.getElementById(\"startTimerValue\").textContent = format(player.autoChallengeTimer.start, 2, true) + \"s\";\r\n            return;\r\n        case 2:\r\n            const u = parseFloat(document.getElementById('exitAutoChallengeTimerInput').value) || 0;\r\n            player.autoChallengeTimer.exit = Math.max(u, 0);\r\n            document.getElementById(\"exitTimerValue\").textContent = format(player.autoChallengeTimer.exit, 2, true) + \"s\";\r\n            return;\r\n        case 3:\r\n            const v = parseFloat(document.getElementById('enterAutoChallengeTimerInput').value) || 0;\r\n            player.autoChallengeTimer.enter = Math.max(v, 0);\r\n            document.getElementById(\"enterTimerValue\").textContent = format(player.autoChallengeTimer.enter, 2, true) + \"s\";\r\n            return;\r\n    }\r\n};\r\nexport const toggleAutoChallengesIgnore = (i) => {\r\n    const el = document.getElementById(\"toggleAutoChallengeIgnore\");\r\n    if (player.autoChallengeToggles[i]) {\r\n        el.style.border = \"2px solid red\";\r\n        el.textContent = \"Automatically Run Chal.\" + i + \" [OFF]\";\r\n    }\r\n    else {\r\n        el.style.border = \"2px solid green\";\r\n        el.textContent = \"Automatically Run Chal.\" + i + \" [ON]\";\r\n    }\r\n    player.autoChallengeToggles[i] = !player.autoChallengeToggles[i];\r\n};\r\nexport const toggleAutoChallengeRun = () => {\r\n    const el = document.getElementById('toggleAutoChallengeStart');\r\n    if (player.autoChallengeRunning) {\r\n        el.style.border = \"2px solid red\";\r\n        el.textContent = \"Auto Challenge Sweep [OFF]\";\r\n        player.autoChallengeIndex = 1;\r\n        G['autoChallengeTimerIncrement'] = 0;\r\n    }\r\n    else {\r\n        el.style.border = \"2px solid gold\";\r\n        el.textContent = \"Auto Challenge Sweep [ON]\";\r\n    }\r\n    player.autoChallengeRunning = !player.autoChallengeRunning;\r\n};\r\nexport const toggleAutoChallengeTextColors = (i) => {\r\n    const a = document.getElementById(\"startAutoChallengeTimer\");\r\n    const b = document.getElementById(\"exitAutoChallengeTimer\");\r\n    const c = document.getElementById(\"enterAutoChallengeTimer\");\r\n    a.style.color = i === 1 ? 'gold' : 'white';\r\n    b.style.color = i === 2 ? 'gold' : 'white';\r\n    c.style.color = i === 3 ? 'gold' : 'white';\r\n};\r\nexport const toggleAutoAscend = () => {\r\n    const a = document.getElementById(\"ascensionAutoEnable\");\r\n    if (player.autoAscend) {\r\n        a.style.border = \"2px solid red\";\r\n        a.textContent = \"Auto Ascend [OFF]\";\r\n    }\r\n    else {\r\n        a.style.border = \"2px solid green\";\r\n        a.textContent = \"Auto Ascend [ON]\";\r\n    }\r\n    player.autoAscend = !player.autoAscend;\r\n};\r\nexport const updateRuneBlessingBuyAmount = (i) => {\r\n    switch (i) {\r\n        case 1:\r\n            const t = Math.floor(parseFloat(document.getElementById('buyRuneBlessingInput').value)) || 1;\r\n            player.runeBlessingBuyAmount = Math.max(t, 1);\r\n            document.getElementById('buyRuneBlessingToggleValue').textContent = format(player.runeBlessingBuyAmount, 0, true);\r\n            return;\r\n        case 2:\r\n            const u = Math.floor(parseFloat(document.getElementById('buyRuneSpiritInput').value)) || 1;\r\n            player.runeSpiritBuyAmount = Math.max(u, 1);\r\n            document.getElementById('buyRuneSpiritToggleValue').textContent = format(player.runeSpiritBuyAmount, 0, true);\r\n            return;\r\n    }\r\n};\r\nexport const toggleAutoTesseracts = (i) => {\r\n    const el = document.getElementById('tesseractAutoToggle' + i);\r\n    if (player.autoTesseracts[i]) {\r\n        el.textContent = \"Auto [OFF]\";\r\n        el.style.border = \"2px solid red\";\r\n    }\r\n    else {\r\n        el.textContent = \"Auto [ON]\";\r\n        el.style.border = \"2px solid green\";\r\n    }\r\n    player.autoTesseracts[i] = !player.autoTesseracts[i];\r\n};\r\nexport const toggleCorruptionLevel = (index, value) => {\r\n    const current = player.prototypeCorruptions[index];\r\n    const maxCorruption = 12;\r\n    if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\r\n        player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value);\r\n    }\r\n    if (value < 0 && current > 0 && 0 < index && index <= 9) {\r\n        player.prototypeCorruptions[index] -= Math.min(current, -value);\r\n    }\r\n    player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]));\r\n    if (value === 999 && player.currentChallenge.ascension !== 15) {\r\n        for (let i = 0; i <= 9; i++) {\r\n            player.usedCorruptions[i] = 0;\r\n            player.prototypeCorruptions[i] = 0;\r\n            if (i > 0)\r\n                corruptionDisplay(i);\r\n        }\r\n        corruptionDisplay(G['corruptionTrigger']);\r\n        document.getElementById(\"corruptionCleanseConfirm\").style.visibility = \"hidden\";\r\n        if (player.currentChallenge.ascension === 15) {\r\n            resetCheck('ascensionChallenge', false, true);\r\n        }\r\n    }\r\n    corruptionDisplay(index);\r\n    corruptionLoadoutTableUpdate();\r\n};\r\nexport const toggleCorruptionLoadoutsStats = (stats) => {\r\n    player.corruptionShowStats = stats;\r\n    showCorruptionStatsLoadouts();\r\n};\r\nexport const toggleAscStatPerSecond = (id) => {\r\n    const el = document.getElementById(`unit${id}`);\r\n    if (!el) {\r\n        console.log(id, 'platonic needs to fix');\r\n        return;\r\n    }\r\n    el.textContent = player.ascStatToggles[id] ? '/s' : '';\r\n    player.ascStatToggles[id] = !player.ascStatToggles[id];\r\n};\r\n","import { player, format, formatTimeShort, } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate';\r\nimport { achievementaward, totalachievementpoints } from './Achievements';\r\nimport { displayRuneInformation } from './Runes';\r\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions } from './UpdateVisuals';\r\nexport const revealStuff = () => {\r\n    const example = document.getElementsByClassName(\"coinunlock1\");\r\n    for (let i = 0; i < example.length; i++) {\r\n        player.unlocks.coinone ? example[i].style.display = \"block\" : example[i].style.display = \"none\";\r\n    }\r\n    const example2 = document.getElementsByClassName(\"coinunlock2\");\r\n    for (let i = 0; i < example2.length; i++) {\r\n        player.unlocks.cointwo ? example2[i].style.display = \"block\" : example2[i].style.display = \"none\";\r\n    }\r\n    const example3 = document.getElementsByClassName(\"coinunlock3\");\r\n    for (let i = 0; i < example3.length; i++) {\r\n        player.unlocks.cointhree ? example3[i].style.display = \"block\" : example3[i].style.display = \"none\";\r\n    }\r\n    const example4 = document.getElementsByClassName(\"coinunlock4\");\r\n    for (let i = 0; i < example4.length; i++) {\r\n        player.unlocks.coinfour ? example4[i].style.display = \"block\" : example4[i].style.display = \"none\";\r\n    }\r\n    const example5 = document.getElementsByClassName(\"prestigeunlock\");\r\n    for (let i = 0; i < example5.length; i++) {\r\n        player.unlocks.prestige ? example5[i].style.display = \"block\" : example5[i].style.display = \"none\";\r\n    }\r\n    const example6 = document.getElementsByClassName(\"generationunlock\");\r\n    for (let i = 0; i < example6.length; i++) {\r\n        player.unlocks.generation ? example6[i].style.display = \"block\" : example6[i].style.display = \"none\";\r\n    }\r\n    const example7 = document.getElementsByClassName(\"transcendunlock\");\r\n    for (let i = 0; i < example7.length; i++) {\r\n        player.unlocks.transcend ? example7[i].style.display = \"block\" : example7[i].style.display = \"none\";\r\n    }\r\n    const example8 = document.getElementsByClassName(\"reincarnationunlock\");\r\n    for (let i = 0; i < example8.length; i++) {\r\n        player.unlocks.reincarnate ? example8[i].style.display = \"block\" : example8[i].style.display = \"none\";\r\n    }\r\n    const example9 = document.getElementsByClassName(\"auto\");\r\n    for (let i = 0; i < example9.length; i++) {\r\n        example9[i].style.display = \"none\";\r\n    }\r\n    const example10 = document.getElementsByClassName(\"reinrow1\");\r\n    for (let i = 0; i < example10.length; i++) {\r\n        player.researches[47] === 1 ? example10[i].style.display = \"block\" : example10[i].style.display = \"none\";\r\n    }\r\n    const example11 = document.getElementsByClassName(\"reinrow2\");\r\n    for (let i = 0; i < example11.length; i++) {\r\n        player.researches[48] === 1 ? example11[i].style.display = \"block\" : example11[i].style.display = \"none\";\r\n    }\r\n    const example12 = document.getElementsByClassName(\"reinrow3\");\r\n    for (let i = 0; i < example12.length; i++) {\r\n        player.researches[49] === 1 ? example12[i].style.display = \"block\" : example12[i].style.display = \"none\";\r\n    }\r\n    const example13 = document.getElementsByClassName(\"reinrow4\");\r\n    for (let i = 0; i < example13.length; i++) {\r\n        player.researches[50] === 1 ? example13[i].style.display = \"block\" : example13[i].style.display = \"none\";\r\n    }\r\n    const example14 = document.getElementsByClassName(\"chal6\");\r\n    for (let i = 0; i < example14.length; i++) {\r\n        player.achievements[113] === 1 ? example14[i].style.display = \"block\" : example14[i].style.display = \"none\";\r\n    }\r\n    const example15 = document.getElementsByClassName(\"chal7\");\r\n    for (let i = 0; i < example15.length; i++) {\r\n        player.achievements[120] === 1 ? example15[i].style.display = \"block\" : example15[i].style.display = \"none\";\r\n    }\r\n    const example16 = document.getElementsByClassName(\"chal7x10\");\r\n    for (let i = 0; i < example16.length; i++) {\r\n        player.achievements[124] === 1 ? example16[i].style.display = \"block\" : example16[i].style.display = \"none\";\r\n    }\r\n    const example17 = document.getElementsByClassName(\"chal8\");\r\n    for (let i = 0; i < example17.length; i++) {\r\n        player.achievements[127] === 1 ? example17[i].style.display = \"block\" : example17[i].style.display = \"none\";\r\n    }\r\n    const example18 = document.getElementsByClassName(\"chal9\");\r\n    for (let i = 0; i < example18.length; i++) {\r\n        player.achievements[134] === 1 ? example18[i].style.display = \"block\" : example18[i].style.display = \"none\";\r\n    }\r\n    const example19 = document.getElementsByClassName(\"chal9x1\");\r\n    for (let i = 0; i < example19.length; i++) {\r\n        player.highestchallengecompletions[9] > 0 ? example19[i].style.display = \"block\" : example19[i].style.display = \"none\";\r\n    }\r\n    const example20 = document.getElementsByClassName(\"chal10\");\r\n    for (let i = 0; i < example20.length; i++) {\r\n        player.achievements[141] === 1 ? example20[i].style.display = \"block\" : example20[i].style.display = \"none\";\r\n    }\r\n    const example21 = document.getElementsByClassName(\"ascendunlock\");\r\n    for (let i = 0; i < example21.length; i++) {\r\n        player.ascensionCount > 0 ? example21[i].style.display = \"block\" : example21[i].style.display = \"none\";\r\n    }\r\n    const example22 = document.getElementsByClassName(\"chal11\");\r\n    for (let i = 0; i < example22.length; i++) {\r\n        player.challengecompletions[11] > 0 ? example22[i].style.display = \"block\" : example22[i].style.display = \"none\";\r\n    }\r\n    const example23 = document.getElementsByClassName(\"chal12\");\r\n    for (let i = 0; i < example23.length; i++) {\r\n        player.challengecompletions[12] > 0 ? example23[i].style.display = \"block\" : example23[i].style.display = \"none\";\r\n    }\r\n    const example24 = document.getElementsByClassName(\"chal13\");\r\n    for (let i = 0; i < example24.length; i++) {\r\n        player.challengecompletions[13] > 0 ? example24[i].style.display = \"block\" : example24[i].style.display = \"none\";\r\n    }\r\n    const example25 = document.getElementsByClassName(\"chal14\");\r\n    for (let i = 0; i < example25.length; i++) {\r\n        player.challengecompletions[14] > 0 ? example25[i].style.display = \"block\" : example25[i].style.display = \"none\";\r\n    }\r\n    const example26 = document.getElementsByClassName(\"ascendunlockib\");\r\n    for (let i = 0; i < example26.length; i++) {\r\n        example26[i].style.display = player.ascensionCount > 0 ? \"inline-block\" : \"none\";\r\n    }\r\n    const example27 = document.getElementsByClassName(\"prestigeunlockib\");\r\n    for (let i = 0; i < example27.length; i++) {\r\n        example27[i].style.display = +player.unlocks.prestige > 0 ? \"inline-block\" : \"none\";\r\n    }\r\n    const example28 = document.getElementsByClassName(\"research150\");\r\n    for (let i = 0; i < example28.length; i++) {\r\n        example28[i].style.display = player.researches[150] > 0 ? \"block\" : \"none\";\r\n    }\r\n    const example29 = document.getElementsByClassName(\"cubeUpgrade10\");\r\n    for (let i = 0; i < example29.length; i++) {\r\n        example29[i].style.display = player.cubeUpgrades[10] > 0 ? \"flex\" : \"none\";\r\n    }\r\n    const example30 = document.getElementsByClassName(\"cubeUpgrade19\");\r\n    for (let i = 0; i < example30.length; i++) {\r\n        example30[i].style.display = player.cubeUpgrades[19] > 0 ? \"block\" : \"none\";\r\n    }\r\n    const example31 = document.getElementsByClassName(\"sacrificeAnts\");\r\n    for (const ex of Array.from(example31)) {\r\n        ex.style.display = player.achievements[173] === 1 ? \"block\" : \"none\";\r\n    }\r\n    player.upgrades[89] === 1 ?\r\n        document.getElementById(\"transcendautomation\").style.display = \"block\" :\r\n        document.getElementById(\"transcendautomation\").style.display = \"none\";\r\n    player.achievements[38] === 1 ?\r\n        (document.getElementById(\"rune2area\").style.display = \"flex\", document.getElementById(\"runeshowpower2\").style.display = \"flex\") :\r\n        (document.getElementById(\"rune2area\").style.display = \"none\", document.getElementById(\"runeshowpower2\").style.display = \"none\");\r\n    player.achievements[43] === 1 ?\r\n        document.getElementById(\"prestigeautomation\").style.display = \"block\" :\r\n        document.getElementById(\"prestigeautomation\").style.display = \"none\";\r\n    player.achievements[44] === 1 ?\r\n        (document.getElementById(\"rune3area\").style.display = \"flex\", document.getElementById(\"runeshowpower3\").style.display = \"flex\") :\r\n        (document.getElementById(\"rune3area\").style.display = \"none\", document.getElementById(\"runeshowpower3\").style.display = \"none\");\r\n    player.achievements[102] === 1 ?\r\n        (document.getElementById(\"rune4area\").style.display = \"flex\", document.getElementById(\"runeshowpower4\").style.display = \"flex\") :\r\n        (document.getElementById(\"rune4area\").style.display = \"none\", document.getElementById(\"runeshowpower4\").style.display = \"none\");\r\n    player.achievements[119] === 1 ?\r\n        document.getElementById(\"talisman1area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman1area\").style.display = \"none\";\r\n    player.achievements[126] === 1 ?\r\n        document.getElementById(\"talisman2area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman2area\").style.display = \"none\";\r\n    player.achievements[133] === 1 ?\r\n        document.getElementById(\"talisman3area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman3area\").style.display = \"none\";\r\n    player.achievements[134] === 1 ?\r\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"block\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"block\") :\r\n        (document.getElementById(\"toggleRuneSubTab2\").style.display = \"none\", document.getElementById(\"toggleRuneSubTab3\").style.display = \"none\");\r\n    player.achievements[140] === 1 ?\r\n        document.getElementById(\"talisman4area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman4area\").style.display = \"none\";\r\n    player.achievements[147] === 1 ?\r\n        document.getElementById(\"talisman5area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman5area\").style.display = \"none\";\r\n    player.achievements[173] === 1 ?\r\n        document.getElementById(\"sacrificeAnts\").style.display = \"block\" :\r\n        document.getElementById(\"sacrificeAnts\").style.display = \"none\";\r\n    player.researches[39] > 0 ?\r\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"block\" :\r\n        document.getElementById(\"reincarnationCrystalInfo\").style.display = \"none\";\r\n    player.researches[40] > 0 ?\r\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"block\" :\r\n        document.getElementById(\"reincarnationMythosInfo\").style.display = \"none\";\r\n    player.researches[46] > 0 ?\r\n        document.getElementById(\"reincarnateautomation\").style.display = \"block\" :\r\n        document.getElementById(\"reincarnateautomation\").style.display = \"none\";\r\n    player.researches[82] > 0 ?\r\n        (document.getElementById(\"rune5area\").style.display = \"flex\", document.getElementById(\"runeshowpower5\").style.display = \"flex\") :\r\n        (document.getElementById(\"rune5area\").style.display = \"none\", document.getElementById(\"runeshowpower5\").style.display = \"none\");\r\n    player.researches[130] > 0 ?\r\n        document.getElementById(\"toggleautofortify\").style.display = \"block\" :\r\n        document.getElementById(\"toggleautofortify\").style.display = \"none\";\r\n    player.researches[135] > 0 ?\r\n        document.getElementById(\"toggleautoenhance\").style.display = \"block\" :\r\n        document.getElementById(\"toggleautoenhance\").style.display = \"none\";\r\n    for (let z = 1; z <= 5; z++) {\r\n        (player.researches[190] > 0) ?\r\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"block\" :\r\n            document.getElementById(\"tesseractAutoToggle\" + z).style.display = \"none\";\r\n    }\r\n    player.researches[190] > 0 ?\r\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"block\" :\r\n        document.getElementById(\"tesseractautobuytoggle\").style.display = \"none\";\r\n    player.researches[190] > 0 ?\r\n        document.getElementById(\"tesseractAmount\").style.display = \"block\" :\r\n        document.getElementById(\"tesseractAmount\").style.display = \"none\";\r\n    player.researches[190] > 0 ?\r\n        document.getElementById(\"autotessbuyeramount\").style.display = \"block\" :\r\n        document.getElementById(\"autotessbuyeramount\").style.display = \"none\";\r\n    (player.antUpgrades[12 - 1] > 0 || player.ascensionCount > 0) ?\r\n        document.getElementById(\"talisman6area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman6area\").style.display = \"none\";\r\n    player.shopUpgrades.offeringAutoLevel > 0 ?\r\n        document.getElementById(\"toggleautosacrifice\").style.display = \"block\" :\r\n        document.getElementById(\"toggleautosacrifice\").style.display = \"none\";\r\n    player.shopUpgrades.obtainiumAutoLevel > 0 ?\r\n        document.getElementById(\"toggleautoresearch\").style.display = \"block\" :\r\n        document.getElementById(\"toggleautoresearch\").style.display = \"none\";\r\n    player.shopUpgrades.talismanBought ?\r\n        document.getElementById(\"talisman7area\").style.display = \"block\" :\r\n        document.getElementById(\"talisman7area\").style.display = \"none\";\r\n    player.cubeUpgrades[8] > 0 ?\r\n        document.getElementById('particleAutoUpgrade').style.display = \"block\" :\r\n        document.getElementById('particleAutoUpgrade').style.display = \"none\";\r\n    document.getElementById(\"ascensionStats\").style.visibility = player.achievements[197] > 0 ? \"visible\" : \"hidden\";\r\n    document.getElementById(\"ascHyperStats\").style.display = player.challengecompletions[13] > 0 ? \"\" : \"none\";\r\n    document.getElementById(\"ascPlatonicStats\").style.display = player.challengecompletions[14] > 0 ? \"\" : \"none\";\r\n    const e = document.getElementsByClassName(\"auto\");\r\n    const automationUnlocks = {\r\n        0: player.upgrades[81] === 1,\r\n        1: player.upgrades[82] === 1,\r\n        2: player.upgrades[83] === 1,\r\n        3: player.upgrades[84] === 1,\r\n        4: player.upgrades[85] === 1,\r\n        5: player.upgrades[86] === 1,\r\n        6: player.upgrades[87] === 1,\r\n        7: player.upgrades[88] === 1,\r\n        8: player.achievements[78] === 1,\r\n        9: player.achievements[85] === 1,\r\n        10: player.achievements[92] === 1,\r\n        11: player.achievements[99] === 1,\r\n        12: player.achievements[106] === 1,\r\n        13: player.achievements[43] === 1,\r\n        14: player.upgrades[94] === 1,\r\n        15: player.upgrades[95] === 1,\r\n        16: player.upgrades[96] === 1,\r\n        17: player.upgrades[97] === 1,\r\n        18: player.upgrades[98] === 1,\r\n        19: player.upgrades[89] === 1,\r\n        20: player.cubeUpgrades[7] === 1,\r\n        21: player.cubeUpgrades[7] === 1,\r\n        22: player.cubeUpgrades[7] === 1,\r\n        23: player.cubeUpgrades[7] === 1,\r\n        24: player.cubeUpgrades[7] === 1,\r\n        25: player.researches[46] === 1,\r\n        26: player.upgrades[91] === 1,\r\n        27: player.upgrades[92] === 1,\r\n        28: player.upgrades[99] === 1,\r\n        29: player.upgrades[90] === 1,\r\n        30: player.unlocks.prestige,\r\n        31: player.prestigeCount > 0.5 || player.reincarnationCount > 0.5,\r\n        32: player.transcendCount > 0.5 || player.reincarnationCount > 0.5,\r\n        33: player.reincarnationCount > 0.5,\r\n        34: player.ascensionCount > 0,\r\n        35: player.achievements[173] > 0\r\n    };\r\n    for (let i = 0; i < e.length; i++) {\r\n        if (automationUnlocks[i]) {\r\n            e[i].style.display = \"block\";\r\n        }\r\n    }\r\n};\r\nexport const hideStuff = () => {\r\n    document.getElementById(\"buildings\").style.display = \"none\";\r\n    document.getElementById(\"buildingstab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"upgrades\").style.display = \"none\";\r\n    document.getElementById(\"upgradestab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"settings\").style.display = \"none\";\r\n    const settingsTab = document.getElementById(\"settingstab\");\r\n    if (settingsTab.getAttribute('full') === '0') {\r\n        settingsTab.style.backgroundColor = \"#171717\";\r\n        settingsTab.style.color = \"white\";\r\n        settingsTab.style.border = '1px solid white';\r\n    }\r\n    document.getElementById(\"statistics\").style.display = \"none\";\r\n    document.getElementById(\"achievementstab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"achievementstab\").style.color = \"white\";\r\n    document.getElementById(\"runes\").style.display = \"none\";\r\n    document.getElementById(\"runestab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"challenges\").style.display = \"none\";\r\n    document.getElementById(\"challengetab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"research\").style.display = \"none\";\r\n    document.getElementById(\"researchtab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"shop\").style.display = \"none\";\r\n    document.getElementById(\"shoptab\").style.backgroundColor = \"purple\";\r\n    document.getElementById(\"ants\").style.display = \"none\";\r\n    document.getElementById(\"anttab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"cubetab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"traitstab\").style.backgroundColor = \"#171717\";\r\n    document.getElementById(\"cubes\").style.display = \"none\";\r\n    document.getElementById(\"traits\").style.display = \"none\";\r\n    document.getElementById(\"activaterune2\").style.display = \"none\";\r\n    document.getElementById(\"activaterune3\").style.display = \"none\";\r\n    document.getElementById(\"activaterune4\").style.display = \"none\";\r\n    if (G['currentTab'] === \"buildings\") {\r\n        document.getElementById(\"buildingstab\").style.backgroundColor = \"orange\";\r\n        document.getElementById(\"buildings\").style.display = \"block\";\r\n    }\r\n    if (G['currentTab'] === \"upgrades\") {\r\n        document.getElementById(\"upgrades\").style.display = \"block\";\r\n        document.getElementById(\"upgradestab\").style.backgroundColor = \"orange\";\r\n        document.getElementById(\"upgradedescription\").textContent = \"Hover over an upgrade to view details!\";\r\n    }\r\n    if (G['currentTab'] === \"settings\") {\r\n        document.getElementById(\"settings\").style.display = \"block\";\r\n        if (settingsTab.getAttribute('full') === '0') {\r\n            settingsTab.style.backgroundColor = \"white\";\r\n            settingsTab.style.color = \"black\";\r\n            settingsTab.style.border = '1px solid white';\r\n        }\r\n    }\r\n    if (G['currentTab'] === \"achievements\") {\r\n        document.getElementById(\"statistics\").style.display = \"block\";\r\n        document.getElementById(\"achievementstab\").style.backgroundColor = \"white\";\r\n        document.getElementById(\"achievementstab\").style.color = \"black\";\r\n        document.getElementById(\"achievementprogress\").textContent = \"Achievement Points: \" + player.achievementPoints + \"/\" + totalachievementpoints + \" [\" + (100 * player.achievementPoints / totalachievementpoints).toPrecision(4) + \"%]\";\r\n    }\r\n    if (G['currentTab'] === \"runes\") {\r\n        document.getElementById(\"runes\").style.display = \"block\";\r\n        document.getElementById(\"runestab\").style.backgroundColor = \"blue\";\r\n        document.getElementById(\"runeshowlevelup\").textContent = \"Hey, hover over a rune icon to get details on what each one does and what benefits they're giving you!\";\r\n        document.getElementById(\"researchrunebonus\").textContent = \"Thanks to researches, your effective levels are increased by \" + (100 * G['effectiveLevelMult'] - 100).toPrecision(4) + \"%\";\r\n        displayRuneInformation(1, false);\r\n        displayRuneInformation(2, false);\r\n        displayRuneInformation(3, false);\r\n        displayRuneInformation(4, false);\r\n        displayRuneInformation(5, false);\r\n    }\r\n    if (G['currentTab'] === \"challenges\") {\r\n        document.getElementById(\"challenges\").style.display = \"block\";\r\n        document.getElementById(\"challengetab\").style.backgroundColor = \"purple\";\r\n    }\r\n    if (G['currentTab'] === \"researches\") {\r\n        document.getElementById(\"research\").style.display = \"block\";\r\n        document.getElementById(\"researchtab\").style.backgroundColor = \"green\";\r\n    }\r\n    if (G['currentTab'] === \"shop\") {\r\n        document.getElementById(\"shop\").style.display = \"block\";\r\n        document.getElementById(\"shoptab\").style.backgroundColor = \"limegreen\";\r\n    }\r\n    if (G['currentTab'] === \"ants\") {\r\n        document.getElementById(\"ants\").style.display = \"block\";\r\n        document.getElementById(\"anttab\").style.backgroundColor = \"brown\";\r\n    }\r\n    if (G['currentTab'] === \"cubes\") {\r\n        document.getElementById(\"cubes\").style.display = \"block\";\r\n        document.getElementById(\"cubetab\").style.backgroundColor = \"white\";\r\n    }\r\n    if (G['currentTab'] === \"traits\") {\r\n        document.getElementById(\"traits\").style.display = \"flex\";\r\n        document.getElementById(\"traitstab\").style.backgroundColor = \"white\";\r\n    }\r\n    if (player.achievements[38] > 0.5) {\r\n        document.getElementById(\"activaterune2\").style.display = \"block\";\r\n    }\r\n    if (player.achievements[44] > 0.5) {\r\n        document.getElementById(\"activaterune3\").style.display = \"block\";\r\n    }\r\n    if (player.achievements[102] > 0.5) {\r\n        document.getElementById(\"activaterune4\").style.display = \"block\";\r\n    }\r\n};\r\nconst visualTab = {\r\n    buildings: visualUpdateBuildings,\r\n    upgrades: visualUpdateUpgrades,\r\n    achievements: visualUpdateAchievements,\r\n    runes: visualUpdateRunes,\r\n    challenges: visualUpdateChallenges,\r\n    research: visualUpdateResearch,\r\n    settings: visualUpdateSettings,\r\n    shop: visualUpdateShop,\r\n    ants: visualUpdateAnts,\r\n    cubes: visualUpdateCubes,\r\n    traits: visualUpdateCorruptions\r\n};\r\nexport const htmlInserts = () => {\r\n    var _a;\r\n    document.getElementById(\"coinDisplay\").textContent = format(player.coins);\r\n    document.getElementById(\"offeringDisplay\").textContent = format(player.runeshards);\r\n    document.getElementById(\"diamondDisplay\").textContent = format(player.prestigePoints);\r\n    document.getElementById(\"mythosDisplay\").textContent = format(player.transcendPoints);\r\n    document.getElementById(\"mythosshardDisplay\").textContent = format(player.transcendShards);\r\n    document.getElementById(\"particlesDisplay\").textContent = format(player.reincarnationPoints);\r\n    document.getElementById(\"quarkDisplay\").textContent = format(player.worlds);\r\n    document.getElementById(\"obtainiumDisplay\").textContent = format(player.researchPoints);\r\n    updateAscensionStats();\r\n    (_a = visualTab[G['currentTab']]) === null || _a === void 0 ? void 0 : _a.call(visualTab);\r\n};\r\nexport const buttoncolorchange = () => {\r\n    (player.toggles[15] && player.achievements[43] === 1) ?\r\n        document.getElementById('prestigebtn').style.backgroundColor = \"green\" :\r\n        document.getElementById('prestigebtn').style.backgroundColor = \"#171717\";\r\n    (player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0)) ?\r\n        document.getElementById('transcendbtn').style.backgroundColor = \"green\" :\r\n        document.getElementById('transcendbtn').style.backgroundColor = \"#171717\";\r\n    (player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0)) ?\r\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"green\" :\r\n        document.getElementById('reincarnatebtn').style.backgroundColor = \"#171717\";\r\n    (player.toggles[8] && player.upgrades[88] > 0.5) ?\r\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"green\" :\r\n        document.getElementById('acceleratorboostbtn').style.backgroundColor = \"#171717\";\r\n    (player.currentChallenge.transcension === 0) ?\r\n        document.getElementById('challengebtn').style.backgroundColor = \"#171717\" :\r\n        document.getElementById('challengebtn').style.backgroundColor = \"purple\";\r\n    (player.currentChallenge.reincarnation === 0) ?\r\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"#171717\" :\r\n        document.getElementById('reincarnatechallengebtn').style.backgroundColor = \"purple\";\r\n    (player.currentChallenge.ascension === 0) ?\r\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"#171717\" :\r\n        document.getElementById('ascendChallengeBtn').style.backgroundColor = \"purple\";\r\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"coin\") {\r\n        const a = document.getElementById(\"buycoin1\");\r\n        const b = document.getElementById(\"buycoin2\");\r\n        const c = document.getElementById(\"buycoin3\");\r\n        const d = document.getElementById(\"buycoin4\");\r\n        const e = document.getElementById(\"buycoin5\");\r\n        const f = document.getElementById(\"buyaccelerator\");\r\n        const g = document.getElementById(\"buymultiplier\");\r\n        const h = document.getElementById(\"buyacceleratorboost\");\r\n        ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin)) ?\r\n            a.style.backgroundColor = \"#555555\" :\r\n            a.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin)) ?\r\n            b.style.backgroundColor = \"#555555\" :\r\n            b.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin)) ?\r\n            c.style.backgroundColor = \"#555555\" :\r\n            c.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin)) ?\r\n            d.style.backgroundColor = \"#555555\" :\r\n            d.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin)) ?\r\n            e.style.backgroundColor = \"#555555\" :\r\n            e.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost)) ?\r\n            f.style.backgroundColor = \"#555555\" :\r\n            f.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost)) ?\r\n            g.style.backgroundColor = \"#555555\" :\r\n            g.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost)) ?\r\n            h.style.backgroundColor = \"#555555\" :\r\n            h.style.backgroundColor = \"#171717\";\r\n    }\r\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"diamond\") {\r\n        const a = document.getElementById(\"buydiamond1\");\r\n        const b = document.getElementById(\"buydiamond2\");\r\n        const c = document.getElementById(\"buydiamond3\");\r\n        const d = document.getElementById(\"buydiamond4\");\r\n        const e = document.getElementById(\"buydiamond5\");\r\n        const f = document.getElementById(\"buycrystalupgrade1\");\r\n        const g = document.getElementById(\"buycrystalupgrade2\");\r\n        const h = document.getElementById(\"buycrystalupgrade3\");\r\n        const i = document.getElementById(\"buycrystalupgrade4\");\r\n        const j = document.getElementById(\"buycrystalupgrade5\");\r\n        ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds)) ? a.style.backgroundColor = \"#555555\" : a.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds)) ? b.style.backgroundColor = \"#555555\" : b.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds)) ? c.style.backgroundColor = \"#555555\" : c.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds)) ? d.style.backgroundColor = \"#555555\" : d.style.backgroundColor = \"#171717\";\r\n        ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds)) ? e.style.backgroundColor = \"#555555\" : e.style.backgroundColor = \"#171717\";\r\n        let k = 0;\r\n        k += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100;\r\n        if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\r\n            k += 10;\r\n        }\r\n        (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = \"purple\" : f.style.backgroundColor = \"#171717\";\r\n        (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = \"purple\" : g.style.backgroundColor = \"#171717\";\r\n        (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = \"purple\" : h.style.backgroundColor = \"#171717\";\r\n        (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = \"purple\" : i.style.backgroundColor = \"#171717\";\r\n        (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = \"purple\" : j.style.backgroundColor = \"#171717\";\r\n    }\r\n    if (G['currentTab'] === \"runes\") {\r\n        if (G['runescreen'] === \"runes\") {\r\n            for (let i = 1; i <= 5; i++) {\r\n                player.runeshards > 0.5 ? document.getElementById(\"activaterune\" + i).style.backgroundColor = \"purple\" : document.getElementById(\"activaterune\" + i).style.backgroundColor = \"#171717\";\r\n            }\r\n        }\r\n        if (G['runescreen'] === \"talismans\") {\r\n            const a = document.getElementById(\"buyTalismanItem1\");\r\n            const b = document.getElementById(\"buyTalismanItem2\");\r\n            const c = document.getElementById(\"buyTalismanItem3\");\r\n            const d = document.getElementById(\"buyTalismanItem4\");\r\n            const e = document.getElementById(\"buyTalismanItem5\");\r\n            const f = document.getElementById(\"buyTalismanItem6\");\r\n            const g = document.getElementById(\"buyTalismanItem7\");\r\n            const arr = [a, b, c, d, e, f, g];\r\n            for (let i = 0; i < arr.length; i++) {\r\n                arr[i].style.backgroundColor = (player.researchPoints > G['talismanResourceObtainiumCosts'][i]\r\n                    && player.runeshards > G['talismanResourceOfferingCosts'][i]) ? \"purple\" : \"#171717\";\r\n            }\r\n        }\r\n    }\r\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"mythos\") {\r\n        for (let i = 1; i <= 5; i++) {\r\n            const toggle = player.toggles[i + 15];\r\n            const mythos = player[`${G['ordinals'][i - 1]}CostMythos`];\r\n            (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\r\n                ? document.getElementById('buymythos' + i).style.backgroundColor = \"#555555\"\r\n                : document.getElementById('buymythos' + i).style.backgroundColor = \"#171717\";\r\n        }\r\n    }\r\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"particle\") {\r\n        for (let i = 1; i <= 5; i++) {\r\n            const costParticles = player[G['ordinals'][i - 1] + 'CostParticles'];\r\n            player.reincarnationPoints.gte(costParticles)\r\n                ? document.getElementById(\"buyparticles\" + i).style.backgroundColor = \"#555555\"\r\n                : document.getElementById(\"buyparticles\" + i).style.backgroundColor = \"#171717\";\r\n        }\r\n    }\r\n    if (G['currentTab'] === \"buildings\" && G['buildingSubTab'] === \"tesseract\") {\r\n        for (let i = 1; i <= 5; i++) {\r\n            const ascendBuilding = player['ascendBuilding' + i]['cost'];\r\n            player.wowTesseracts >= ascendBuilding ?\r\n                document.getElementById('buyTesseracts' + i).style.backgroundColor = \"#555555\" :\r\n                document.getElementById('buyTesseracts' + i).style.backgroundColor = \"#171717\";\r\n        }\r\n        for (let i = 1; i <= 8; i++) {\r\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]))) ?\r\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"green\" :\r\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"#171717\";\r\n        }\r\n        for (let i = 9; i <= 10; i++) {\r\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i])) || player.constantUpgrades[i] >= 1) ?\r\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"gold\" :\r\n                document.getElementById('buyConstantUpgrade' + i).style.backgroundColor = \"#171717\";\r\n        }\r\n    }\r\n    if (G['currentTab'] === \"ants\") {\r\n        (player.reincarnationPoints.gte(player.firstCostAnts)) ? document.getElementById(\"anttier1\").style.backgroundColor = \"white\" : document.getElementById(\"anttier1\").style.backgroundColor = \"#171717\";\r\n        for (let i = 2; i <= 8; i++) {\r\n            const costAnts = player[G['ordinals'][i - 1] + 'CostAnts'];\r\n            player.antPoints.gte(costAnts)\r\n                ? document.getElementById(\"anttier\" + i).style.backgroundColor = \"white\"\r\n                : document.getElementById(\"anttier\" + i).style.backgroundColor = \"#171717\";\r\n        }\r\n        for (let i = 1; i <= 12; i++) {\r\n            if (player.antPoints.gte(Decimal.pow(G['antUpgradeCostIncreases'][i - 1], player.antUpgrades[i - 1] * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i - 1]))) {\r\n                document.getElementById(\"antUpgrade\" + i).style.backgroundColor = \"silver\";\r\n            }\r\n            else {\r\n                document.getElementById(\"antUpgrade\" + i).style.backgroundColor = \"#171717\";\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const updateChallengeDisplay = () => {\r\n    for (let k = 1; k <= 10; k++) {\r\n        const el = document.getElementById(\"challenge\" + k);\r\n        el.style.backgroundColor = \"#171717\";\r\n        if (player.currentChallenge.transcension === k) {\r\n            el.style.backgroundColor = \"plum\";\r\n        }\r\n        if (player.currentChallenge.reincarnation === k) {\r\n            el.style.backgroundColor = \"plum\";\r\n        }\r\n    }\r\n    for (let k = 11; k <= 15; k++) {\r\n        const el = document.getElementById(\"challenge\" + k);\r\n        el.style.backgroundColor = \"#171717\";\r\n        if (player.currentChallenge.ascension === k) {\r\n            el.style.backgroundColor = \"plum\";\r\n        }\r\n    }\r\n    if (player.retrychallenges) {\r\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: ON\";\r\n    }\r\n    else {\r\n        document.getElementById(\"retryChallenge\").textContent = \"Retry Challenges: OFF\";\r\n    }\r\n    for (let k = 1; k <= 15; k++) {\r\n        updateChallengeLevel(k);\r\n    }\r\n};\r\nexport const updateChallengeLevel = (k) => {\r\n    const el = document.getElementById(\"challenge\" + k + \"level\");\r\n    let maxChallenges = 0;\r\n    switch (k) {\r\n        case 1:\r\n            maxChallenges = 25 + 5 * player.researches[66] + 925 * player.researches[105];\r\n            break;\r\n        case 2:\r\n            maxChallenges = 25 + 5 * player.researches[67] + 925 * player.researches[105];\r\n            break;\r\n        case 3:\r\n            maxChallenges = 25 + 5 * player.researches[68] + 925 * player.researches[105];\r\n            break;\r\n        case 4:\r\n            maxChallenges = 25 + 5 * player.researches[69] + 925 * player.researches[105];\r\n            break;\r\n        case 5:\r\n            maxChallenges = 25 + 5 * player.researches[70] + 925 * player.researches[105];\r\n            break;\r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n            maxChallenges = 25 + 5 * player.cubeUpgrades[29] + 2 * player.shopUpgrades.challengeExtension + 5 * player.platonicUpgrades[5] + 5 * player.platonicUpgrades[10] + 10 * player.platonicUpgrades[15];\r\n            break;\r\n        case 11:\r\n        case 12:\r\n        case 13:\r\n        case 14:\r\n            maxChallenges = 30 + 3 * player.platonicUpgrades[5] + 3 * player.platonicUpgrades[10] + 4 * player.platonicUpgrades[15];\r\n            break;\r\n        case 15:\r\n            maxChallenges = 9001;\r\n            break;\r\n    }\r\n    el.textContent = `${player.challengecompletions[k]} / ${maxChallenges}`;\r\n};\r\nexport const updateAchievementBG = () => {\r\n    for (let i = 1; i <= 182; i++) {\r\n        document.getElementById(\"ach\" + i).style.backgroundColor = \"black\";\r\n    }\r\n    const fixDisplay1 = document.getElementsByClassName('purpleach');\r\n    const fixDisplay2 = document.getElementsByClassName('redach');\r\n    for (let i = 0; i < fixDisplay1.length; i++) {\r\n        fixDisplay1[i].style.backgroundColor = \"purple\";\r\n    }\r\n    for (let i = 0; i < fixDisplay2.length; i++) {\r\n        fixDisplay2[i].style.backgroundColor = \"maroon\";\r\n    }\r\n    for (let i = 1; i < player.achievements.length; i++) {\r\n        if (player.achievements[i] > 0.5 && player.achievements[i] !== undefined) {\r\n            achievementaward(i);\r\n        }\r\n    }\r\n};\r\nexport const CSSAscend = () => {\r\n    for (let i = 1; i <= 5; i++) {\r\n        const a = document.getElementById(\"ascendText\" + i);\r\n        const b = document.getElementById(\"ascendText\" + (5 + i));\r\n        const c = document.getElementById(\"tesseracts\" + i);\r\n        const d = document.getElementById(\"buyTesseracts\" + i);\r\n        const e = document.getElementById(\"tesseractAutoToggle\" + i);\r\n        a.style.top = (8 + 35 * i) + \"px\";\r\n        b.style.top = (8 + 35 * i) + \"px\";\r\n        c.style.top = (23 + 35 * i) + \"px\";\r\n        d.style.top = (38 + 35 * i) + \"px\";\r\n        e.style.top = (22 + 35 * i) + \"px\";\r\n        a.style.left = \"13%\";\r\n        b.style.left = \"56.5%\";\r\n        c.style.left = \"10%\";\r\n    }\r\n    for (let i = 1; i <= 6; i++) {\r\n        const a = document.getElementById(\"switchCubeSubTab\" + i);\r\n        a.style.top = (30 + 35 * i) + \"px\";\r\n        a.style.left = \"5%\";\r\n    }\r\n};\r\nexport const CSSRuneBlessings = () => {\r\n    for (let i = 1; i <= 5; i++) {\r\n        const a = document.getElementById('runeBlessingIcon' + i);\r\n        const b = document.getElementById('runeSpiritIcon' + i);\r\n        const c = document.getElementById('runeBlessingLevel' + i);\r\n        const d = document.getElementById('runeSpiritLevel' + i);\r\n        const e = document.getElementById('runeBlessingPurchase' + i);\r\n        const f = document.getElementById('runeSpiritPurchase' + i);\r\n        const g = document.getElementById('runeBlessingPower' + i);\r\n        const h = document.getElementById('runeSpiritPower' + i);\r\n        a.style.top = b.style.top = (20 + 75 * i) + \"px\";\r\n        a.style.left = b.style.left = \"10%\";\r\n        c.style.top = d.style.top = (23 + 75 * i) + \"px\";\r\n        c.style.left = d.style.left = \"15%\";\r\n        e.style.top = f.style.top = (36 + 75 * i) + \"px\";\r\n        e.style.left = f.style.left = \"32%\";\r\n        g.style.top = h.style.top = (23 + 75 * i) + \"px\";\r\n        g.style.left = h.style.left = \"59%\";\r\n    }\r\n};\r\nexport const showCorruptionStatsLoadouts = () => {\r\n    if (player.corruptionShowStats) {\r\n        document.getElementById(\"corruptionStats\").style.display = \"block\";\r\n        document.getElementById(\"corruptionLoadouts\").style.display = \"none\";\r\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"dodgerblue\";\r\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"white\";\r\n    }\r\n    else {\r\n        document.getElementById(\"corruptionStats\").style.display = \"none\";\r\n        document.getElementById(\"corruptionLoadouts\").style.display = \"block\";\r\n        document.getElementById(\"corrStatsBtn\").style.borderColor = \"white\";\r\n        document.getElementById(\"corrLoadoutsBtn\").style.borderColor = \"dodgerblue\";\r\n    }\r\n};\r\nexport const updateAscensionStats = () => {\r\n    const t = player.ascensionCounter;\r\n    const [cubes, tess, hyper, platonic] = CalcCorruptionStuff().splice(4);\r\n    const fillers = {\r\n        \"ascLen\": formatTimeShort(player.ascensionCounter),\r\n        \"ascCubes\": format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2, true),\r\n        \"ascTess\": format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3, true),\r\n        \"ascHyper\": format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4, true),\r\n        \"ascPlatonic\": format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5, true),\r\n        \"ascC10\": player.challengecompletions[10] + '',\r\n        \"ascTimeAccel\": `${format(calculateTimeAcceleration(), 3, true)}x`\r\n    };\r\n    for (const key in fillers) {\r\n        document.getElementById(key).textContent = fillers[key];\r\n    }\r\n};\r\n","import Decimal from 'break_infinity.js';\r\nimport { Globals as G } from './Variables';\r\nimport { player, format, formatTimeShort } from './Synergism';\r\nimport { CalcECC } from './Challenges';\r\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration } from './Calculate';\r\nimport { displayRuneInformation } from './Runes';\r\nimport { showSacrifice } from './Ants';\r\nimport { sumContents } from './Utility';\r\nexport const visualUpdateBuildings = () => {\r\n    if (G['currentTab'] !== \"buildings\") {\r\n        console.log(\"buildings update happened not in buildings\");\r\n        return;\r\n    }\r\n    if (G['buildingSubTab'] === \"coin\") {\r\n        const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'];\r\n        const names = [null, 'Workers', 'Investments', 'Printers', 'Coin Mints', 'Alchemies'];\r\n        let percentage = new Decimal();\r\n        let totalProductionDivisor = new Decimal(G['produceTotal']);\r\n        if (totalProductionDivisor.equals(0)) {\r\n            totalProductionDivisor = new Decimal(1);\r\n        }\r\n        for (let i = 1; i <= 5; i++) {\r\n            const place = G[upper[i - 1]];\r\n            document.getElementById(\"buildtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedCoin'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedCoin']) + \"]\";\r\n            document.getElementById(\"buycoin\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostCoin']) + \" coins.\";\r\n            percentage = percentage.fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent).times(100);\r\n            document.getElementById(\"buildtext\" + (2 * i)).textContent = \"Coins/Sec: \" + format((place.dividedBy(G['taxdivisor'])).times(40), 2) + \" [\" + format(percentage, 3) + \"%]\";\r\n        }\r\n        document.getElementById(\"buildtext11\").textContent = \"Accelerators: \" + format(player.acceleratorBought, 0, true) + \" [+\" + format(G['freeAccelerator'], 0, true) + \"]\";\r\n        document.getElementById(\"buildtext12\").textContent = \"Acceleration Power: \" + ((G['acceleratorPower'] - 1) * (100)).toPrecision(4) + \"% || Acceleration Multiplier: \" + format(G['acceleratorEffect'], 2) + \"x\";\r\n        document.getElementById(\"buildtext13\").textContent = \"Multipliers: \" + format(player.multiplierBought, 0, true) + \" [+\" + format(G['freeMultiplier'], 0, true) + \"]\";\r\n        document.getElementById(\"buildtext14\").textContent = \"Multiplier Power: \" + G['multiplierPower'].toPrecision(4) + \"x || Multiplier: \" + format(G['multiplierEffect'], 2) + \"x\";\r\n        document.getElementById(\"buildtext15\").textContent = \"Accelerator Boost: \" + format(player.acceleratorBoostBought, 0, true) + \" [+\" + format(G['freeAcceleratorBoost'], 0, false) + \"]\";\r\n        document.getElementById(\"buildtext16\").textContent = \"Reset Diamonds and Prestige Upgrades, but add \" + (G['tuSevenMulti'] * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100)).toPrecision(4) + \"% Acceleration Power and 5 free Accelerators.\";\r\n        document.getElementById(\"buyaccelerator\").textContent = \"Cost: \" + format(player.acceleratorCost) + \" coins.\";\r\n        document.getElementById(\"buymultiplier\").textContent = \"Cost: \" + format(player.multiplierCost) + \" coins.\";\r\n        document.getElementById(\"buyacceleratorboost\").textContent = \"Cost: \" + format(player.acceleratorBoostCost) + \" Diamonds.\";\r\n        let warning = \"\";\r\n        if (player.reincarnationCount > 0.5) {\r\n            warning = `Your tax also caps your Coin gain at ${format(Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))}/s.`;\r\n        }\r\n        document.getElementById(\"taxinfo\").textContent =\r\n            `Due to your excessive wealth, coin production is divided by ${format(G['taxdivisor'], 2)} to pay taxes! ${warning}`;\r\n    }\r\n    if (G['buildingSubTab'] === \"diamond\") {\r\n        const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'];\r\n        const names = [null, 'Refineries', 'Coal Plants', 'Coal Rigs', 'Pickaxes', 'Pandoras Boxes'];\r\n        const perSecNames = [null, \"Crystal/sec\", \"Ref./sec\", \"Plants/sec\", \"Rigs/sec\", \"Pickaxes/sec\"];\r\n        document.getElementById(\"prestigeshardinfo\").textContent = \"You have \" + format(player.prestigeShards, 2) + \" Crystals, multiplying Coin production by \" + format(G['prestigeMultiplier'], 2) + \"x.\";\r\n        for (let i = 1; i <= 5; i++) {\r\n            const place = G[upper[i - 1]];\r\n            document.getElementById(\"prestigetext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedDiamonds'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedDiamonds'], 2) + \"]\";\r\n            document.getElementById(\"prestigetext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\r\n            document.getElementById(\"buydiamond\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostDiamonds'], 2) + \" Diamonds\";\r\n        }\r\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\r\n            const p = Decimal.pow(10, Decimal.log(G['prestigePointGain'].add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10));\r\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when your Diamonds can increase by a factor \" + format(Decimal.pow(10, player.prestigeamount)) + \" [Toggle number above]. Current Multiplier: \" + format(p) + \".\";\r\n        }\r\n        if (player.resettoggle1 === 2) {\r\n            document.getElementById(\"autoprestige\").textContent = \"Prestige when the autotimer is at least \" + (player.prestigeamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].prestige, 1) + \"s.\";\r\n        }\r\n    }\r\n    if (G['buildingSubTab'] === \"mythos\") {\r\n        const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'];\r\n        const names = [null, 'Augments', 'Enchantments', 'Wizards', 'Oracles', 'Grandmasters'];\r\n        const perSecNames = [null, \"Shards/sec\", \"Augments/sec\", \"Enchantments/sec\", \"Wizards/sec\", \"Oracles/sec\"];\r\n        document.getElementById(\"transcendshardinfo\").textContent = \"You have \" + format(player.transcendShards, 2) + \" Mythos Shards, providing \" + format(G['totalMultiplierBoost'], 0, true) + \" Multiplier Power boosts.\";\r\n        for (let i = 1; i <= 5; i++) {\r\n            const place = G[upper[i - 1]];\r\n            document.getElementById(\"transcendtext\" + (2 * i - 1)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedMythos'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedMythos'], 2) + \"]\";\r\n            document.getElementById(\"transcendtext\" + (2 * i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\r\n            document.getElementById(\"buymythos\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostMythos'], 2) + \" Mythos\";\r\n        }\r\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\r\n            document.getElementById(\"autotranscend\").textContent = \"Prestige when your Mythos can increase by a factor \" + format(Decimal.pow(10, player.transcendamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['transcendPointGain'].add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2) + \".\";\r\n        }\r\n        if (player.resettoggle2 === 2) {\r\n            document.getElementById(\"autotranscend\").textContent = \"Transcend when the autotimer is at least \" + (player.transcendamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].transcension, 1) + \"s.\";\r\n        }\r\n    }\r\n    if (G['buildingSubTab'] === \"particle\") {\r\n        const upper = ['produceFirstParticles', 'produceSecondParticles', 'produceThirdParticles', 'produceFourthParticles', 'produceFifthParticles'];\r\n        const names = [null, 'Protons', 'Elements', 'Pulsars', 'Quasars', 'Galactic Nuclei'];\r\n        const perSecNames = [null, \"Atoms/sec\", \"Protons/sec\", \"Elements/sec\", \"Pulsars/sec\", \"Quasars/sec\"];\r\n        for (let i = 1; i <= 5; i++) {\r\n            const place = G[upper[i - 1]];\r\n            document.getElementById(\"reincarnationtext\" + (i)).textContent = names[i] + \": \" + format(player[G['ordinals'][i - 1] + 'OwnedParticles'], 0, true) + \" [+\" + format(player[G['ordinals'][i - 1] + 'GeneratedParticles'], 2) + \"]\";\r\n            document.getElementById(\"reincarnationtext\" + (5 + i)).textContent = perSecNames[i] + \": \" + format((place).times(40), 2);\r\n            document.getElementById(\"buyparticles\" + i).textContent = \"Cost: \" + format(player[G['ordinals'][i - 1] + 'CostParticles'], 2) + \" Particles\";\r\n        }\r\n        document.getElementById(\"reincarnationshardinfo\").textContent = \"You have \" + format(player.reincarnationShards, 2) + \" Atoms, providing \" + G['buildingPower'].toPrecision(4) + \" Building Power. Multiplier to Coin Production: \" + format(G['reincarnationMultiplier']);\r\n        document.getElementById(\"reincarnationCrystalInfo\").textContent = \"Thanks to Research 2x14, you also multiply Crystal production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 50), 3, false);\r\n        document.getElementById(\"reincarnationMythosInfo\").textContent = \"Thanks to Research 2x15, you also multiply Mythos Shard production by \" + format(Decimal.pow(G['reincarnationMultiplier'], 1 / 250), 3, false);\r\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\r\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when your Particles can increase by a factor \" + format(Decimal.pow(10, player.reincarnationamount)) + \" [Toggle number above]. Current Multiplier: \" + format(Decimal.pow(10, Decimal.log(G['reincarnationPointGain'].add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2) + \".\";\r\n        }\r\n        if (player.resettoggle3 === 2) {\r\n            document.getElementById(\"autoreincarnate\").textContent = \"Reincarnate when the autotimer is at least \" + (player.reincarnationamount) + \" real-life seconds. [Toggle number above]. Current timer: \" + format(G['autoResetTimers'].reincarnation, 1) + \"s.\";\r\n        }\r\n    }\r\n    if (G['buildingSubTab'] === \"tesseract\") {\r\n        const names = [null, 'Dot', 'Vector', 'Three-Space', 'Bent Time', 'Hilbert Space'];\r\n        const perSecNames = [null, '+Constant/sec', 'Dot/sec', 'Vector/sec', 'Three-Space/sec', 'Bent Time/sec'];\r\n        for (let i = 1; i <= 5; i++) {\r\n            document.getElementById(\"ascendText\" + i).textContent = names[i] + \": \" + format(player['ascendBuilding' + i]['owned'], 0, true) + \" [+\" + format(player['ascendBuilding' + i]['generated'], 2) + \"]\";\r\n            document.getElementById(\"ascendText\" + (5 + i)).textContent =\r\n                perSecNames[i] + \": \" + format((G['ascendBuildingProduction'][G['ordinals'][i - 1]]), 2);\r\n            document.getElementById(\"buyTesseracts\" + i).textContent = \"Cost: \" + format(player['ascendBuilding' + i]['cost'], 0) + \" Tesseracts\";\r\n        }\r\n        document.getElementById(\"tesseractInfo\").textContent = \"You have \" + format(player.wowTesseracts) + \" Wow! Tesseracts. Gain more by beating Challenge 10 on each Ascension.\";\r\n        document.getElementById(\"ascendShardInfo\").textContent = \"You have a mathematical constant of \" + format(player.ascendShards, 2) + \". Taxes are divided by \" + format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + 0.5 * player.platonicUpgrades[15] + (G['platonicBonusMultiplier'][5] - 1)), 4, true) + \".\";\r\n        document.getElementById(\"autotessbuyeramount\").textContent = \"Auto buyer will save at least \" + format(player.tesseractAutoBuyerAmount) + \" tesseracts. [Enter number above].\";\r\n    }\r\n};\r\nexport const visualUpdateUpgrades = () => {\r\n    if (G['currentTab'] !== \"upgrades\")\r\n        return;\r\n};\r\nexport const visualUpdateAchievements = () => {\r\n    if (G['currentTab'] !== \"achievements\")\r\n        return;\r\n};\r\nexport const visualUpdateRunes = () => {\r\n    if (G['currentTab'] !== \"runes\")\r\n        return;\r\n    if (G['runescreen'] === \"runes\") {\r\n        const talismans = [\r\n            'rune1Talisman',\r\n            'rune2Talisman',\r\n            'rune3Talisman',\r\n            'rune4Talisman',\r\n            'rune5Talisman'\r\n        ];\r\n        document.getElementById(\"offeringCount\").textContent = \"You have \" + format(player.runeshards, 0, true) + \" Offerings.\";\r\n        for (let i = 1; i <= 5; i++) {\r\n            const place = G[talismans[i - 1]];\r\n            document.getElementById('rune' + i + 'level').childNodes[0].textContent = \"Level: \" + format(player.runelevels[i - 1]) + \"/\" + format(calculateMaxRunes(i));\r\n            document.getElementById('rune' + i + 'exp').textContent = \"+1 in \" + format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2) + \" EXP\";\r\n            document.getElementById('bonusrune' + i).textContent = \" [Bonus: \" + format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[9 - 1] + G['bonusant9']) + place) + \"]\";\r\n            displayRuneInformation(i, false);\r\n        }\r\n        document.getElementById(\"offeringExperienceValue\").textContent = \"Gain \" + format((1 + Math.min(player.highestchallengecompletions[1], 1) + 1 / 25 * player.highestchallengecompletions[1] + 0.6 * player.researches[22] + 0.3 * player.researches[23] + 3 / 25 * player.upgrades[66] + 2 * player.upgrades[61]) * calculateRecycleMultiplier(), 2, true) + \"* EXP per offering sacrificed.\";\r\n        document.getElementById(\"offeringRecycleInfo\").textContent = \"You have \" + format((5 * player.achievements[80] + 5 * player.achievements[87] + 5 * player.achievements[94] + 5 * player.achievements[101] + 5 * player.achievements[108] + 5 * player.achievements[115] + 7.5 * player.achievements[122] + 7.5 * player.achievements[129] + 5 * player.upgrades[61] + Math.min(25, G['rune4level'] / 16) + 0.5 * player.cubeUpgrades[2]), 2, true) + \"% chance of recycling your offerings. This multiplies EXP gain by \" + format(calculateRecycleMultiplier(), 2, true) + \"!\";\r\n    }\r\n    if (G['runescreen'] === \"talismans\") {\r\n        for (let i = 1; i <= 7; i++) {\r\n            document.getElementById('talisman' + i + 'level').textContent = \"Level \" + player.talismanLevels[i - 1] + \"/\" + (30 * player.talismanRarity[i - 1] + 6 * CalcECC('ascension', player.challengecompletions[13]) + Math.floor(player.researches[200] / 400));\r\n        }\r\n    }\r\n    if (G['runescreen'] === \"blessings\") {\r\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1];\r\n        let t = 0;\r\n        for (let i = 1; i <= 5; i++) {\r\n            document.getElementById('runeBlessingLevel' + i + 'Value').textContent = format(player.runeBlessingLevels[i], 0, true);\r\n            document.getElementById('runeBlessingPower' + i + 'Value1').textContent = format(G['runeBlessings'][i]);\r\n            document.getElementById('runeBlessingPurchaseAmount' + i).textContent = format(Math.max(1, calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]));\r\n            document.getElementById('runeBlessingPurchaseCost' + i).textContent = format(Math.max(G['blessingBaseCost'] * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[1]));\r\n            if (i === 5) {\r\n                t = 1;\r\n            }\r\n            document.getElementById('runeBlessingPower' + i + 'Value2').textContent = format(1 - t + blessingMultiplierArray[i] * G['effectiveRuneBlessingPower'][i], 4, true);\r\n        }\r\n    }\r\n    if (G['runescreen'] === \"spirits\") {\r\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100];\r\n        const subtract = [0, 0, 0, 1, 0, 0];\r\n        for (let i = 1; i <= 5; i++) {\r\n            spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400);\r\n            document.getElementById('runeSpiritLevel' + i + 'Value').textContent = format(player.runeSpiritLevels[i], 0, true);\r\n            document.getElementById('runeSpiritPower' + i + 'Value1').textContent = format(G['runeSpirits'][i]);\r\n            document.getElementById('runeSpiritPurchaseAmount' + i).textContent = format(Math.max(1, calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]));\r\n            document.getElementById('runeSpiritPurchaseCost' + i).textContent = format(Math.max(G['spiritBaseCost'] * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[1]));\r\n            document.getElementById('runeSpiritPower' + i + 'Value2').textContent = format(1 - subtract[i] + spiritMultiplierArray[i] * G['effectiveRuneSpiritPower'][i], 4, true);\r\n        }\r\n    }\r\n};\r\nexport const visualUpdateChallenges = () => {\r\n    if (G['currentTab'] !== \"challenges\")\r\n        return;\r\n    if (player.researches[150] > 0) {\r\n        document.getElementById(\"autoIncrementerAmount\").textContent = format(G['autoChallengeTimerIncrement'], 2) + \"s\";\r\n    }\r\n};\r\nexport const visualUpdateResearch = () => {\r\n    if (G['currentTab'] !== \"researches\")\r\n        return;\r\n    if (player.researches[61] > 0) {\r\n        document.getElementById(\"automaticobtainium\").textContent = \"Thanks to researches you automatically gain \" + format(calculateAutomaticObtainium() * calculateTimeAcceleration(), 3, true) + \" Obtainium per real life second.\";\r\n    }\r\n};\r\nexport const visualUpdateAnts = () => {\r\n    if (G['currentTab'] !== \"ants\")\r\n        return;\r\n    document.getElementById(\"crumbcount\").textContent = \"You have \" + format(player.antPoints, 2) + \" Galactic Crumbs [\" + format(G['antOneProduce'], 2) + \"/s], providing a \" + format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2 - 1] + G['bonusant2']) / 5000 * 500 / 499))) + \"x Coin Multiplier.\";\r\n    const mode = player.autoAntSacrificeMode === 2 ? \"Real-time\" : \"In-game time\";\r\n    const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer;\r\n    document.getElementById(\"autoAntSacrifice\").textContent = `Sacrifice when the timer is at least ${player.autoAntSacTimer} seconds (${mode}), Currently: ${format(timer)}`;\r\n    if (player.achievements[173] === 1) {\r\n        document.getElementById(\"antSacrificeTimer\").textContent = formatTimeShort(player.antSacrificeTimer);\r\n        showSacrifice();\r\n    }\r\n};\r\nexport const visualUpdateCubes = () => {\r\n    if (G['currentTab'] !== \"cubes\")\r\n        return;\r\n    document.getElementById(\"cubeToQuarkTimerValue\").textContent = format(Math.floor(player.dayTimer / 3600), 0) + \" Hours \" + format(Math.floor(player.dayTimer / 60 % 60), 0) + \" Mins \" + format(Math.floor(player.dayTimer % 60), 0) + \" Secs \";\r\n    const prefixes = ['cube', 'tesseract', 'hypercube'];\r\n    const power = [4, 3, 2];\r\n    const multipliers = [10, 10, 5];\r\n    for (let i = 0; i <= 2; i++) {\r\n        document.getElementById(prefixes[i] + 'QuarksTodayValue').textContent = format(player[prefixes[i] + 'QuarkDaily']) + \"/\" + format(25 + 75 * player.shopUpgrades[prefixes[i] + 'ToQuarkBought']);\r\n        document.getElementById(prefixes[i] + 'QuarksOpenTodayValue').textContent = format(player[prefixes[i] + 'OpenedDaily'], 0, true);\r\n        document.getElementById(prefixes[i] + 'QuarksOpenRequirementValue').textContent = format(Math.max(0, multipliers[i] * Math.pow(Math.min(25 + 75 * +player.shopUpgrades[`${prefixes[i]}ToQuarkBought`], 1 + player[prefixes[i] + 'QuarkDaily']), power[i]) - player[prefixes[i] + 'OpenedDaily']), 0, true);\r\n    }\r\n    let accuracy;\r\n    switch (player.subtabNumber) {\r\n        case 0:\r\n            document.getElementById(\"cubeQuantity\").textContent = format(player.wowCubes, 0, true);\r\n            const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed];\r\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3];\r\n            for (let i = 1; i <= 10; i++) {\r\n                let augmentAccuracy = 0;\r\n                if (cubeArray[i] >= 1000 && i !== 6) {\r\n                    augmentAccuracy += 2;\r\n                }\r\n                document.getElementById(`cubeBlessing${i}Amount`).textContent = `x${format(cubeArray[i], 0, true)}`;\r\n                document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(100 * (G['cubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\r\n                if (i === 1 || i === 8 || i === 9) {\r\n                    document.getElementById(`cubeBlessing${i}Effect`).textContent = `+${format(G['cubeBonusMultiplier'][i] - 1, accuracy[i] + augmentAccuracy, true)}`;\r\n                }\r\n            }\r\n            document.getElementById(\"cubeBlessingTotalAmount\").textContent = format(sumContents(cubeArray), 0, true);\r\n            break;\r\n        case 1:\r\n            document.getElementById(\"tesseractQuantity\").textContent = format(player.wowTesseracts, 0, true);\r\n            const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed];\r\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\r\n            for (let i = 1; i <= 10; i++) {\r\n                let augmentAccuracy = 0;\r\n                if (tesseractArray[i] >= 1000 && i !== 6) {\r\n                    augmentAccuracy += 2;\r\n                }\r\n                document.getElementById(`tesseractBlessing${i}Amount`).textContent = `x${format(tesseractArray[i], 0, true)}`;\r\n                document.getElementById(`tesseractBlessing${i}Effect`).textContent = `+${format(100 * (G['tesseractBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\r\n            }\r\n            document.getElementById(\"tesseractBlessingTotalAmount\").textContent = format(sumContents(tesseractArray), 0, true);\r\n            break;\r\n        case 2:\r\n            document.getElementById(\"hypercubeQuantity\").textContent = format(player.wowHypercubes, 0, true);\r\n            const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed];\r\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\r\n            for (let i = 1; i <= 10; i++) {\r\n                let augmentAccuracy = 0;\r\n                if (hypercubeArray[i] >= 1000) {\r\n                    augmentAccuracy += 2;\r\n                }\r\n                document.getElementById(`hypercubeBlessing${i}Amount`).textContent = `x${format(hypercubeArray[i], 0, true)}`;\r\n                document.getElementById(`hypercubeBlessing${i}Effect`).textContent = `+${format(100 * (G['hypercubeBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\r\n            }\r\n            document.getElementById(\"hypercubeBlessingTotalAmount\").textContent = format(sumContents(hypercubeArray), 0, true);\r\n            break;\r\n        case 3:\r\n            document.getElementById(\"platonicQuantity\").textContent = format(player.wowPlatonicCubes, 0, true);\r\n            const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed];\r\n            const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4];\r\n            accuracy = [5, 5, 5, 5, 2, 3, 3, 2];\r\n            for (let i = 0; i < platonicArray.length; i++) {\r\n                let augmentAccuracy = 0;\r\n                if (platonicArray[i] >= DRThreshold[i]) {\r\n                    augmentAccuracy += 1;\r\n                }\r\n                document.getElementById(`platonicBlessing${i + 1}Amount`).textContent = `x${format(platonicArray[i], 0, true)}`;\r\n                document.getElementById(`platonicBlessing${i + 1}Effect`).textContent = `+${format(100 * (G['platonicBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)}%`;\r\n            }\r\n            document.getElementById(\"platonicBlessingTotalAmount\").textContent = format(sumContents(platonicArray), 0, true);\r\n            break;\r\n        case 4:\r\n            document.getElementById(\"cubeAmount2\").textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`;\r\n            break;\r\n        case 5:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\nexport const visualUpdateCorruptions = () => {\r\n    if (G['currentTab'] !== \"traits\")\r\n        return;\r\n    document.getElementById(\"autoAscendMetric\").textContent = format(player.autoAscendThreshold, 0, true);\r\n    const metaData = CalcCorruptionStuff();\r\n    document.getElementById(\"corruptionBankValue\").textContent = format(metaData[0]);\r\n    document.getElementById(\"corruptionScoreValue\").textContent = format(metaData[1], 0, true);\r\n    document.getElementById(\"corruptionMultiplierValue\").textContent = format(metaData[2], 1, true);\r\n    document.getElementById(\"corruptionTotalScore\").textContent = format(metaData[3], 0, true);\r\n    document.getElementById(\"corruptionCubesValue\").textContent = format(metaData[4], 0, true);\r\n    document.getElementById(\"corruptionTesseractsValue\").textContent = format(metaData[5]);\r\n    document.getElementById(\"corruptionHypercubesValue\").textContent = format(metaData[6]);\r\n    document.getElementById(\"corruptionPlatonicCubesValue\").textContent = format(metaData[7]);\r\n    document.getElementById(\"corruptionAntExponentValue\").textContent = format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G['extinctionMultiplier'][player.usedCorruptions[7]], 3);\r\n    document.getElementById(\"corruptionSpiritBonusValue\").textContent = format(calculateCorruptionPoints() / 400, 2, true);\r\n};\r\nexport const visualUpdateSettings = () => {\r\n    if (G['currentTab'] !== \"settings\")\r\n        return;\r\n    document.getElementById(\"prestigeCountStatistic\").childNodes[1].textContent = format(player.prestigeCount, 0, true);\r\n    document.getElementById(\"transcensionCountStatistic\").childNodes[1].textContent = format(player.transcendCount, 0, true);\r\n    document.getElementById(\"reincarnationCountStatistic\").childNodes[1].textContent = format(player.reincarnationCount, 0, true);\r\n    document.getElementById(\"fastestPrestigeStatistic\").childNodes[1].textContent = format(1000 * player.fastestprestige) + \"ms\";\r\n    document.getElementById(\"fastestTranscensionStatistic\").childNodes[1].textContent = format(1000 * player.fastesttranscend) + \"ms\";\r\n    document.getElementById(\"fastestReincarnationStatistic\").childNodes[1].textContent = format(1000 * player.fastestreincarnate) + \"ms\";\r\n    document.getElementById(\"mostOfferingStatistic\").childNodes[1].textContent = format(player.maxofferings);\r\n    document.getElementById(\"mostObtainiumStatistic\").childNodes[1].textContent = format(player.maxobtainium);\r\n    document.getElementById(\"mostObtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.maxobtainiumpersecond, 2, true);\r\n    document.getElementById(\"runeSumStatistic\").childNodes[1].textContent = format(G['runeSum']);\r\n    document.getElementById(\"obtainiumPerSecondStatistic\").childNodes[1].textContent = format(player.obtainiumpersecond, 2, true);\r\n    document.getElementById(\"ascensionCountStatistic\").childNodes[1].textContent = format(player.ascensionCount, 0, true);\r\n    document.getElementById(\"saveString\").textContent =\r\n        `Currently: ${player.saveString.replace(\"$VERSION$\", \"v\" + player.version)}`;\r\n    const onExportQuarks = (Math.floor(player.quarkstimer / 3600) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\r\n    const maxExportQuarks = ((25 * (1 + player.researches[195] / 2)) * (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]));\r\n    document.getElementById(\"quarktimerdisplay\").textContent = format((3600 - (player.quarkstimer % 3600.00001)), 2) + \"s until +\" + (1 + player.researches[99] + player.researches[100] + G['talisman7Quarks'] + player.researches[125] + player.researches[180] + player.researches[195]) + \" export Quark\";\r\n    document.getElementById(\"quarktimeramount\").textContent = \"Quarks on export: \"\r\n        + onExportQuarks\r\n        + \" [Max \"\r\n        + format(maxExportQuarks)\r\n        + \"]\";\r\n    if (onExportQuarks === maxExportQuarks) {\r\n        const settingsTab = document.getElementById('settingstab');\r\n        settingsTab.style.backgroundColor = 'orange';\r\n        settingsTab.style.border = '1px solid gold';\r\n        settingsTab.setAttribute('full', '1');\r\n    }\r\n};\r\nexport const visualUpdateShop = () => {\r\n    if (G['currentTab'] !== \"shop\")\r\n        return;\r\n    document.getElementById(\"quarkamount\").textContent = \"You have \" + format(player.worlds) + \" Quarks!\";\r\n    document.getElementById(\"offeringpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.offeringPotion);\r\n    document.getElementById(\"obtainiumpotionowned\").textContent = \"Own: \" + format(player.shopUpgrades.obtainiumPotion);\r\n    document.getElementById(\"offeringtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.offeringTimerLevel + \"/100\";\r\n    document.getElementById(\"obtainiumtimerlevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumTimerLevel + \"/100\";\r\n    document.getElementById(\"offeringautolevel\").textContent = \"Level: \" + player.shopUpgrades.offeringAutoLevel + \"/100\";\r\n    document.getElementById(\"obtainiumautolevel\").textContent = \"Level: \" + player.shopUpgrades.obtainiumAutoLevel + \"/100\";\r\n    document.getElementById(\"instantchallenge\").textContent = player.shopUpgrades.instantChallengeBought ? \"Bought\" : \"Not Bought\";\r\n    document.getElementById(\"antspeed\").textContent = \"Level: \" + player.shopUpgrades.antSpeedLevel + \"/100\";\r\n    document.getElementById(\"cashgrab\").textContent = \"Level: \" + player.shopUpgrades.cashGrabLevel + \"/100\";\r\n    document.getElementById(\"shoptalisman\").textContent = player.shopUpgrades.talismanBought ? \"Bought\" : \"Not Bought\";\r\n    document.getElementById(\"challengeUpgradeLevel\").textContent = \"Level: \" + player.shopUpgrades.challengeExtension + \"/5\";\r\n    document.getElementById(\"challenge10TomeLevel\").textContent = \"Level: \" + player.shopUpgrades.challenge10Tomes + \"/15\";\r\n    document.getElementById(\"seasonPassLevel\").textContent = \"Level: \" + player.shopUpgrades.seasonPassLevel + \"/100\";\r\n    document.getElementById(\"cubeToQuark\").textContent = player.shopUpgrades.cubeToQuarkBought ? \"Bought\" : \"Not Bought\";\r\n    document.getElementById(\"tesseractToQuark\").textContent = player.shopUpgrades.tesseractToQuarkBought ? \"Bought\" : \"Not Bought\";\r\n    document.getElementById(\"hypercubeToQuark\").textContent = player.shopUpgrades.hypercubeToQuarkBought ? \"Bought\" : \"Not Bought\";\r\n    player.shopUpgrades.offeringTimerLevel === 100 ?\r\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"offeringtimerbutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].offerTimer + 10 * player.shopUpgrades.offeringTimerLevel) + \" Quarks\";\r\n    player.shopUpgrades.offeringAutoLevel === 100 ?\r\n        document.getElementById(\"offeringautobutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"offeringautobutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].offerAuto + 10 * player.shopUpgrades.offeringAutoLevel) + \" Quarks\";\r\n    player.shopUpgrades.obtainiumTimerLevel === 100 ?\r\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"obtainiumtimerbutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].obtainiumTimer + 10 * player.shopUpgrades.obtainiumTimerLevel) + \" Quarks\";\r\n    player.shopUpgrades.obtainiumAutoLevel === 100 ?\r\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"obtainiumautobutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].obtainiumAuto + 10 * player.shopUpgrades.obtainiumAutoLevel) + \" Quarks\";\r\n    player.shopUpgrades.instantChallengeBought ?\r\n        (document.getElementById(\"instantchallengebutton\").textContent = \"Bought!\") :\r\n        document.getElementById(\"instantchallengebutton\").textContent = \"Buy for \" + (G['shopBaseCosts'].instantChallenge) + \" Quarks\";\r\n    player.shopUpgrades.antSpeedLevel === 100 ?\r\n        document.getElementById(\"antspeedbutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"antspeedbutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].antSpeed + 25 * player.shopUpgrades.antSpeedLevel) + \" Quarks\";\r\n    player.shopUpgrades.cashGrabLevel === 100 ?\r\n        document.getElementById(\"cashgrabbutton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"cashgrabbutton\").textContent = \"Upgrade for \" + (G['shopBaseCosts'].cashGrab + 40 * player.shopUpgrades.cashGrabLevel) + \" Quarks\";\r\n    player.shopUpgrades.talismanBought ?\r\n        (document.getElementById(\"shoptalismanbutton\").textContent = \"Bought!\") :\r\n        document.getElementById(\"shoptalismanbutton\").textContent = \"Buy for 1500 Quarks\";\r\n    player.shopUpgrades.challengeExtension === 5 ?\r\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"challengeUpgradeButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].challengeExtension + 250 * player.shopUpgrades.challengeExtension) + \" Quarks\";\r\n    player.shopUpgrades.challenge10Tomes === 15 ?\r\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"challenge10TomeButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].challenge10Upgrade + 250 * player.shopUpgrades.challenge10Tomes) + \" Quarks\";\r\n    player.shopUpgrades.seasonPassLevel === 100 ?\r\n        document.getElementById(\"seasonPassButton\").textContent = \"Maxed!\" :\r\n        document.getElementById(\"seasonPassButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].seasonPass + 75 * player.shopUpgrades.seasonPassLevel) + \" Quarks\";\r\n    player.shopUpgrades.cubeToQuarkBought ?\r\n        (document.getElementById(\"cubeToQuarkButton\").textContent = \"Maxed!\") :\r\n        document.getElementById(\"cubeToQuarkButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].cubeToQuark) + \" Quarks\";\r\n    player.shopUpgrades.tesseractToQuarkBought ?\r\n        (document.getElementById(\"tesseractToQuarkButton\").textContent = \"Maxed!\") :\r\n        document.getElementById(\"tesseractToQuarkButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].tesseractToQuark) + \" Quarks\";\r\n    player.shopUpgrades.hypercubeToQuarkBought ?\r\n        (document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Maxed!\") :\r\n        document.getElementById(\"hypercubeToQuarkButton\").textContent = \"Buy for \" + (G['shopBaseCosts'].hypercubeToQuark) + \" Quarks\";\r\n};\r\n","import { player, format } from './Synergism';\r\nimport { Globals as G } from './Variables';\r\nimport Decimal from 'break_infinity.js';\r\nimport { calculateAnts, calculateRuneLevels } from './Calculate';\r\nimport { sumContents } from './Utility';\r\nimport { buyUpgrades } from './Buy';\r\nimport { buyGenerator } from './Generators';\r\nimport { buyAutobuyers } from './Automation';\r\nimport { revealStuff } from './UpdateHTML';\r\nconst upgdesc = {\r\n    upgdesc1: \"Increase production of Workers per producer bought.\",\r\n    upgdesc2: \"Increase production of Investments per producer bought.\",\r\n    upgdesc3: \"Increase production of Printers per producer bought.\",\r\n    upgdesc4: \"Increase production of Mints per producer bought.\",\r\n    upgdesc5: \"Increase production of Alchemies per producer bought.\",\r\n    upgdesc6: \"Increase all production based on producer bought.\",\r\n    upgdesc7: \"Gain free multipliers based on your purchased Alchemies.\",\r\n    upgdesc8: \"Gain 1 free Accelerator per 7 purchased Multipliers.\",\r\n    upgdesc9: \"Gain 1 free Multiplier per 10 purchased Accelerators.\",\r\n    upgdesc10: \"Improve Workers based on the first 750 purchased Investments.\",\r\n    upgdesc11: \"Accelerators improve generation production by 2% each.\",\r\n    upgdesc12: \"Each prestige multiplies production by 1.01, multiplicatively (Max: 1e4x).\",\r\n    upgdesc13: \"Augments buff the production of Investments.\",\r\n    upgdesc14: \"Free Accelerators buff generation of Printers.\",\r\n    upgdesc15: \"Free Accelerators buff generation of Mints.\",\r\n    upgdesc16: \"Acceleration Multiplier buffs Diamond gain.\",\r\n    upgdesc17: \"Multiply Mint production by 1e+100.\",\r\n    upgdesc18: \"Multiply Printer production based on Mythos Shards.\",\r\n    upgdesc19: \"Multiply Investment production based on Mythos.\",\r\n    upgdesc20: \"Coin upgrade 1 is raised to the eleventh power.\",\r\n    upgdesc21: \"Gain 1 Multiplier and 5 Accelerators plus 1% more free Multipliers/Accelerators.\",\r\n    upgdesc22: \"Gain 1 Multiplier and 4 Accelerators plus 1% more free Multipliers/Accelerators.\",\r\n    upgdesc23: \"Gain 1 Multiplier and 3 Accelerators plus 1% more free Multipliers/Accelerators.\",\r\n    upgdesc24: \"Gain 1 Multiplier and 2 Accelerators plus 1% more free Multipliers/Accelerators.\",\r\n    upgdesc25: \"Gain 1 Multiplier and 1 Accelerators plus 1% more free Multipliers/Accelerators.\",\r\n    upgdesc26: \"Gain a free Accelerator Boost.\",\r\n    upgdesc27: \"Gain free Accelerators based on unspent Coins.\",\r\n    upgdesc28: \"Gain a free Multiplier per 160 Coin producers bought.\",\r\n    upgdesc29: \"Gain a free Accelerator per 80 Coin producers bought.\",\r\n    upgdesc30: \"Gain free Multipliers based on unspent Coins.\",\r\n    upgdesc31: \"Gain 1 free Accelerator Boost per 2,000 Coin producers bought.\",\r\n    upgdesc32: \"Gain free Accelerators based on Unspent Diamonds.\",\r\n    upgdesc33: \"Gain 1 free Multiplier for each Accelerator Boost owned.\",\r\n    upgdesc34: \"Gain 3% more free Multipliers.\",\r\n    upgdesc35: \"Gain 2% more free Multipliers.\",\r\n    upgdesc36: \"Multiply crystal production by Diamonds, maximum 1e5000x.\",\r\n    upgdesc37: \"Multiply mythos shard production by the squared logarithm of Diamonds.\",\r\n    upgdesc38: \"Gain +15% more offerings thanks to generous Discord Server Boosters!\",\r\n    upgdesc39: \"Gain +50% more Ant Speed thanks to generous Discord Server Boosters!\",\r\n    upgdesc40: \"Gain +25% more Ant Sacrifice rewards thanks to generous Discord Server Boosters!\",\r\n    upgdesc41: \"Multiply production based on unspent Mythos.\",\r\n    upgdesc42: \"Multiply Mythos Shard production based on unspent Diamonds.\",\r\n    upgdesc43: \"Multiply coin production by 1.01 per transcension (Max: 1e30x).\",\r\n    upgdesc44: \"Multiply Mythos gain on Transcend by 1.01 per transcension (Max: 1e6x).\",\r\n    upgdesc45: \"Gain free Accelerators based on Mythos Shards.\",\r\n    upgdesc46: \"Accelerator Boosts are 5% stronger and do not reset prestige features.\",\r\n    upgdesc47: \"Multiply Mythos Shard production based on your AP.\",\r\n    upgdesc48: \"Multiply production based on owned Accelerators and Multipliers.\",\r\n    upgdesc49: \"Gain free Multipliers based on unspent Mythos.\",\r\n    upgdesc50: \"Gain +25% free Accelerators and Multipliers, but ONLY while doing challenges.\",\r\n    upgdesc51: \"Increase production of all Mythos buildings based on owned Accelerator Boosts.\",\r\n    upgdesc52: \"Mythos building exponent +0.025.\",\r\n    upgdesc53: \"Augments produce more Shards based on Acceleration Multiplier.\",\r\n    upgdesc54: \"Wizards produce more Enchantments based on Multiplier.\",\r\n    upgdesc55: \"Grandmasters produce more Oracles based on Building power.\",\r\n    upgdesc56: \"Worker production is multiplied by 1e+5000.\",\r\n    upgdesc57: \"Investment production is multiplied by 1e+7500.\",\r\n    upgdesc58: \"Printer production is multiplied by 1e+15000.\",\r\n    upgdesc59: \"Coin Mint production is multiplied by 1e+25000.\",\r\n    upgdesc60: \"Alchemies production is multiplied by 1e+35000.\",\r\n    upgdesc61: \"Welcome to reincarnation! +5% Offering Recycle, +5 EXP/Offering!\",\r\n    upgdesc62: \"Completing challenges, automatically or manually, increase offerings gained in Reincarnation. Bonus subject to time multiplier!\",\r\n    upgdesc63: \"Crystal Production is multiplied based on Particles to the sixth power [Caps at 1e6000x].\",\r\n    upgdesc64: \"Mythos Shard Production is multiplied by your Particles squared.\",\r\n    upgdesc65: \"Multiply the gain of Particles from Reincarnation by 5x!\",\r\n    upgdesc66: \"When you use an Offering, every unlocked rune will get 3 free experience.\",\r\n    upgdesc67: \"Atom gain is increased by 3% per Particle producer purchased!\",\r\n    upgdesc68: \"Gain a free multiplier for every 1e1000x increase in tax.\",\r\n    upgdesc69: \"Gain more Obtainium based on your particle gain. [Works with automation at a reduced rate!]\",\r\n    upgdesc70: \"Time seems to go +0.333*log10(MAX obtainium +1)% faster when you buy this.\",\r\n    upgdesc71: \"Runes will gain (Rune Level/25) additional EXP per offering used.\",\r\n    upgdesc72: \"Obtainium gain from Reincarnations is multiplied (1 + 2C) where C is #Reincarnation Challenges completed, up to 50x!\",\r\n    upgdesc73: \"Gain +100% free accelerator boosts and +10 free Crystal Upgrade levels, but only in Reincarnation Challenges.\",\r\n    upgdesc74: \"Obtainium gain is increased based on highest ever unspent offerings. [Max: 100,000 unspent]\",\r\n    upgdesc75: \"Offering gain is increased based on highest ever unspent obtainium [Max: 30,000,000 obtainium]\",\r\n    upgdesc76: \"Ant generation kinda slow? I agree! Make all ant tiers 5x faster!\",\r\n    upgdesc77: \"This is Synergism, right? Let's make each purchased ant make all ants 0.4% faster.\",\r\n    upgdesc78: \"Gain an ant speed multiplier equivalent to (1 + 0.005 * (log10(MAX offerings + 1))^2).\",\r\n    upgdesc79: \"The Ant God will accept an arbitrary number of Particles in order to give you 10% more from sacrifices.\",\r\n    upgdesc80: \"The Ant God will accept a larger arbitrary number of Particles to give you more ant ELO.\",\r\n    upgdesc81: \"Automatically buy Workers if affordable.\",\r\n    upgdesc82: \"Automatically buy Investments if affordable.\",\r\n    upgdesc83: \"Automatically buy Printers if affordable.\",\r\n    upgdesc84: \"Automatically buy Coin Mints if affordable.\",\r\n    upgdesc85: \"Automatically buy Alchemies if affordable.\",\r\n    upgdesc86: \"Automatically buy Accelerators if affordable.\",\r\n    upgdesc87: \"Automatically buy Multipliers if affordable.\",\r\n    upgdesc88: \"Automatically buy Accelerator Boosts if affordable.\",\r\n    upgdesc89: \"Unlock Automatic Transcensions.\",\r\n    upgdesc90: \"Automatically buy from the Generator Shop.\",\r\n    upgdesc91: \"Automatically buy Coin Upgrades.\",\r\n    upgdesc92: \"Automatically buy Diamond Upgrades.\",\r\n    upgdesc93: \"Generate 1% of Diamond Gain from prestiging per second.\",\r\n    upgdesc94: \"Automatically buy Augments if affordable.\",\r\n    upgdesc95: \"Automatically buy Enchantments if affordable.\",\r\n    upgdesc96: \"Automatically buy Wizards if affordable.\",\r\n    upgdesc97: \"Automatically buy Oracles if affordable.\",\r\n    upgdesc98: \"Automatically buy Grandmasters if affordable.\",\r\n    upgdesc99: \"Automatically buy Mythos Upgrades if affordable.\",\r\n    upgdesc100: \"Generate 1% of Mythos Gain from transcending per second.\",\r\n    upgdesc101: \"Alchemies will produce Coin Mints.\",\r\n    upgdesc102: \"Coin Mints will produce Printers.\",\r\n    upgdesc103: \"Printers will produce Investments.\",\r\n    upgdesc104: \"Investments will produce Workers.\",\r\n    upgdesc105: \"Purchased Workers will produce Alchemies.\",\r\n    upgdesc106: \"Refineries can produce Alchemies equal to Refineries owned raised to 0.10\",\r\n    upgdesc107: \"Refinery -> Alchemy exponent increased from 0.10 to 0.25.\",\r\n    upgdesc108: \"Refinery -> Alchemy exponent increased from 0.25 to 0.50\",\r\n    upgdesc109: \"Refinery -> Alchemy exponent increased from 0.50 to 0.75\",\r\n    upgdesc110: \"Refinery -> Alchemy exponent increased from 0.75 to 1\",\r\n    upgdesc111: \"Augments can produce Pandora Boxes equal to Augments owned raised to 0.08\",\r\n    upgdesc112: \"Augment -> Box exponent increased from 0.08 to 0.16\",\r\n    upgdesc113: \"Augment -> Box exponent increased from 0.16 to 0.24\",\r\n    upgdesc114: \"Augment -> Box exponent increased from 0.24 to 0.32\",\r\n    upgdesc115: \"Augment -> Box exponent increased from 0.32 to 0.40\",\r\n    upgdesc116: \"Protons can produce Grandmasters equal to Protons owned raised to 0.05\",\r\n    upgdesc117: \"Protons -> Grandmaster exponent increased from 0.05 to 0.10\",\r\n    upgdesc118: \"Protons -> Grandmaster exponent increased from 0.10 to 0.15\",\r\n    upgdesc119: \"Protons -> Grandmaster exponent increased from 0.15 to 0.20\",\r\n    upgdesc120: \"Protons -> Grandmaster exponent increased from 0.20 to 0.25\",\r\n    upgdesc121: \"You probably autobought this. -50% taxes!\",\r\n    upgdesc122: \"Increase Crystal Upgrade 3 cap from +12% to +100%!\",\r\n    upgdesc123: \"Raise coin production to the power of 1.025. More EXPONENTS.\",\r\n    upgdesc124: \"Gain +3% more effective ELO.\",\r\n    upgdesc125: \"Constant Tax divisor is 0.333% stronger per challenge 10 completion. [Divisor^(1 + upgrade)]\"\r\n};\r\nconst crystalupgdesc = {\r\n    crystalupgdesc1: \"Gain a 5% multiplicative boost to crystals per AP per level.\",\r\n    crystalupgdesc2: \"Gain a boost to crystals based on held coins per level.\",\r\n    crystalupgdesc3: \"Each purchased Crystal producer increases generation of Crystal producers by .1% per level. [MAX: 12%]\",\r\n    crystalupgdesc4: \"Improve the multiplier to coin production by .05 exponent per level. [MAX: +10.00]\",\r\n    crystalupgdesc5: \"Every challenge completion increases crystal gain by 1% per level.\",\r\n    crystalupgdesc6: \"Coming SOON!\",\r\n    crystalupgdesc7: \"Coming SOON!\",\r\n    crystalupgdesc8: \"Coming SOON!\"\r\n};\r\nconst constantUpgDesc = {\r\n    constantUpgDesc1: \"Make all Tesseract buildings 5% more productive per level.\",\r\n    constantUpgDesc2: \"Each Tesseract building bought increases the production of all of them by 0.1% per level [Max 10%].\",\r\n    constantUpgDesc3: \"Increase offering gain +2% per level.\",\r\n    constantUpgDesc4: \"Increase obtainium gain +4% per level.\",\r\n    constantUpgDesc5: \"Multiply ant speed by (1 + log10(Constant + 1)/10)^level\",\r\n    constantUpgDesc6: \"Add +2 free Ant Levels per level.\",\r\n    constantUpgDesc7: \"Provides 7 free rune levels and increases the rune cap by 3 per level.\",\r\n    constantUpgDesc8: \"Increase the rune EXP given by offerings by 10% per level [Additive]\",\r\n    constantUpgDesc9: \"When bought, rune effectiveness is increased by Log4(Talisman Shards +1) %\",\r\n    constantUpgDesc10: \"When bought, gain Log4(Constant + 1)% more Wow! Cubes and Tesseracts on ascension.\"\r\n};\r\nconst upgradetexts = [\r\n    () => \"Worker Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"Investment Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"Printer Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"Mint Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"Alchemy Production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"All Coin production x\" + format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\r\n    () => \"Gain \" + Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))) + \" free multipliers from bought Alchemies.\",\r\n    () => \"+\" + Math.floor(player.multiplierBought / 7) + \" free Accelerators.\",\r\n    () => \"+\" + Math.floor(player.acceleratorBought / 10) + \" free Multipliers.\",\r\n    () => \"Worker Production x\" + format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\r\n    () => \"Generator efficiency x\" + format(Decimal.pow(1.02, G['freeAccelerator']), 2),\r\n    () => \"All Coin production x\" + format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\r\n    () => \"Investment Production x\" + format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\r\n    () => \"Printer Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\r\n    () => \"Mint Generation x\" + format(Decimal.pow(1.15, G['freeAccelerator']), 2),\r\n    () => \"Gain \" + format(Decimal.pow(G['acceleratorEffect'], 1 / 3), 2) + \"x more Diamonds on prestige\",\r\n    () => \"Mint Production x1e100 (Duh)\",\r\n    () => \"Printer Production x\" + format(Decimal.min(1e125, player.transcendShards.add(1))),\r\n    () => \"Investment Production x\" + format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\r\n    () => \"All coin production is further multiplied by \" + format(Decimal.pow((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 10), 2) + \" [Stacks with upgrade 1]!\",\r\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((5 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((4 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((3 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((2 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))) + \" Multipliers, +\" + format(Math.floor((1 + (1 / 101 * G['freeAccelerator'])))) + \" Accelerators.\",\r\n    () => \"+1 Accelerator Boost.\",\r\n    () => \"+\" + format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))) + \" Multipliers.\",\r\n    () => \"+\" + format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))) + \" Accelerators.\",\r\n    () => \"+\" + format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))) + \" Multipliers.\",\r\n    () => \"+\" + format(Math.floor(G['totalCoinOwned'] / 2000)) + \" Accelerator Boosts\",\r\n    () => \"+\" + format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))) + \" Accelerators\",\r\n    () => \"+\" + format(G['totalAcceleratorBoost']) + \" Multipliers\",\r\n    () => \"+\" + format(Math.floor(3 / 103 * G['freeMultiplier'])) + \" Multipliers\",\r\n    () => \"+\" + format(Math.floor(2 / 102 * G['freeMultiplier'])) + \" Multipliers\",\r\n    () => \"All Crystal producers x\" + format(Decimal.min(\"1e5000\", Decimal.pow(player.prestigePoints, 1 / 500)), 2),\r\n    () => \"All Mythos producers production x\" + format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\r\n    () => \"Thank you for getting the server above 30 boosts!\",\r\n    () => \"Thank you for getting the server above 30 boosts!\",\r\n    () => \"Thank you for getting the server above 30 boosts!\",\r\n    () => \"Welcome to Transcension! Coin production is multiplied by \" + format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))) + \".\",\r\n    () => \"All mythos shard producers are going into overdrive: x\" + format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2) + \" the production!\",\r\n    () => \"Multiply all coin production by \" + format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\r\n    () => \"Multiply Mythos gained in Transcension by \" + format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2) + \"!\",\r\n    () => \"+\" + format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))) + \" Accelerators!\",\r\n    () => \"It's kinda self-evident, ain't it?\",\r\n    () => \"Mythos-tier producers production x\" + format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\r\n    () => \"Multiply coin production by a factor of \" + format(Math.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8)) + \"!\",\r\n    () => \"+\" + format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))) + \" Multipliers through magic!\",\r\n    () => \"It's quite obvious what the benefit is, but you must be in a challenge for it to be in use!\",\r\n    () => \"Mythos-tier producers production x\" + format(Math.pow(G['totalAcceleratorBoost'], 2), 2) + \"!\",\r\n    () => \"Mythos-tier producers production x\" + format(Decimal.pow(G['globalMythosMultiplier'], 0.025), 2) + \"! It's like inception, or something.\",\r\n    () => \"Augments will produce \" + format(Decimal.min(\"1e1250\", Decimal.pow(G['acceleratorEffect'], 1 / 125)), 2) + \"x as many Mythos Shards.\",\r\n    () => \"Wizards will produce \" + format(Decimal.min(\"1e2000\", Decimal.pow(G['multiplierEffect'], 1 / 180)), 2) + \"x as many Enchantments; what productive spirits!\",\r\n    () => \"Grandmasters will produce \" + format((Decimal.pow(\"1e1000\", Math.min(1000, G['buildingPower'] - 1))), 2) + \"x as many Oracles!\",\r\n    () => \"It's quite obvious, ain't it?\",\r\n    () => \"Look above!\",\r\n    () => \"Look above!\",\r\n    () => \"Look above!\",\r\n    () => \"Look above!\",\r\n    () => \"+5% Offering Recycle/+5EXP per Offerings. Duh!\",\r\n    () => \"Base offering amount for Reincarnations +\" + Math.floor(1 / 5 * (sumContents(player.challengecompletions))) + \". Challenge yourself!\",\r\n    () => \"All crystal production x\" + format(Decimal.min(\"1e6000\", Decimal.pow(player.reincarnationPoints.add(1), 6))),\r\n    () => \"All mythos shard production x\" + format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\r\n    () => \"5x Particle gain from Reincarnations. Duh!\",\r\n    () => \"It's quite clear in the description!\",\r\n    () => \"The first particle-tier producer is \" + format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2) + \"x as productive.\",\r\n    () => \"Your compliance with tax laws provides you with \" + format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G['taxdivisor'], 10)))) + \" free Multipliers, for some reason.\",\r\n    () => {\r\n        const a = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\r\n        const b = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\r\n        return \"Cosmic Magnetics will allow you to gain \" +\r\n            format(Math.min(10, new Decimal(a).toNumber()), 2) +\r\n            \"x as much Obtainium reincarnating, x\" +\r\n            format(Math.min(3, new Decimal(b).toNumber()), 2) +\r\n            \" automation gain.\";\r\n    },\r\n    () => \"Contracted time makes your game timers run \" + format(1 / 3 * Math.log(player.maxobtainium + 1) / Math.log(10), 2, true) + \"% more quickly.\",\r\n    () => \"Writing's on the wall. Look above!\",\r\n    () => \"Obtainium multiplier: x\" + Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\r\n    () => \"Same as Transcend upgrade 10, except you MUST be in a Reincarnation challenge in particular.\",\r\n    () => \"Obtainium multiplier: x\" + format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\r\n    () => \"Offering Multiplier: x\" + format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\r\n    () => \"Epic 5x Ants!\",\r\n    () => \"Ant Speed Multiplier: x\" + format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\r\n    () => \"Ant Speed Multiplier: x\" + format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\r\n    () => \"You will gain +10% rewards =)\",\r\n    () => \"Ant Elo +75 if this upgrade is purchased.\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"All you need to know is right above this message!\",\r\n    () => \"-50% Taxes duh!\",\r\n    () => \"+88% cap to Crystal Upgrade 3, duh!\",\r\n    () => \"Coin Production ^1.025, duh!\",\r\n    () => \"+3% Effective Ant ELO, duh!\",\r\n    () => \"+\" + format(0.333 * player.challengecompletions[10], 0) + \"% Constant Divisor power.\"\r\n];\r\nexport const upgradeeffects = (i) => {\r\n    document.getElementById(\"upgradeeffect\").textContent = \"Effect: \" + upgradetexts[i - 1]();\r\n};\r\nexport const upgradedescriptions = (i) => {\r\n    const y = upgdesc[`upgdesc${i}`];\r\n    const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : '';\r\n    const el = document.getElementById(\"upgradedescription\");\r\n    el.textContent = y + z;\r\n    el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white';\r\n    if (player.toggles[9] === true) {\r\n        let type = '';\r\n        if (i <= 20 && i >= 1) {\r\n            type = 'coin';\r\n        }\r\n        if (i <= 40 && i >= 21) {\r\n            type = 'prestige';\r\n        }\r\n        if (i <= 60 && i >= 41) {\r\n            type = 'transcend';\r\n        }\r\n        if (i <= 80 && i >= 61) {\r\n            type = 'reincarnation';\r\n        }\r\n        if (i <= 87 && i >= 81) {\r\n            type = 'prestige';\r\n        }\r\n        if (i <= 93 && i >= 88) {\r\n            type = 'transcend';\r\n        }\r\n        if (i <= 100 && i >= 94) {\r\n            type = 'reincarnation';\r\n        }\r\n        if (type !== '' && i <= 80 && i >= 1) {\r\n            buyUpgrades(type, i);\r\n        }\r\n        if (type !== '' && i <= 100 && i >= 81) {\r\n            buyAutobuyers(i - 80);\r\n        }\r\n        if (i <= 120 && i >= 101) {\r\n            buyGenerator(i - 100);\r\n        }\r\n    }\r\n    let currency = '';\r\n    let color = '';\r\n    if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\r\n        currency = \"Coins\";\r\n        color = \"yellow\";\r\n    }\r\n    if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\r\n        currency = \"Diamonds\";\r\n        color = \"cyan\";\r\n    }\r\n    if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\r\n        currency = \"Mythos\";\r\n        color = \"plum\";\r\n    }\r\n    if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\r\n        currency = \"Particles\";\r\n        color = \"limegreen\";\r\n    }\r\n    document.getElementById(\"upgradecost\").textContent = \"Cost: \" + format(Decimal.pow(10, G['upgradeCosts'][i])) + \" \" + currency;\r\n    document.getElementById(\"upgradecost\").style.color = color;\r\n    upgradeeffects(i);\r\n};\r\nexport const crystalupgradedescriptions = (i) => {\r\n    const w = crystalupgdesc[`crystalupgdesc${i}`];\r\n    const p = player.crystalUpgrades[i - 1];\r\n    const c = (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\r\n        (Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100);\r\n    const q = Decimal.pow(10, (G['crystalUpgradesCost'][i - 1] + G['crystalUpgradeCostIncrement'][i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)));\r\n    document.getElementById(\"crystalupgradedescription\").textContent = w;\r\n    document.getElementById(\"crystalupgradeslevel\").textContent = \"Level: \" + p;\r\n    document.getElementById(\"crystalupgradescost\").textContent = \"Cost: \" + format(q) + \" crystals\";\r\n};\r\nexport const upgradeupdate = (num, fast) => {\r\n    const el = document.getElementById(`upg${num}`);\r\n    if (player.upgrades[num] > 0.5 && ((num <= 60 || num > 80) && (num <= 93 || num > 100))) {\r\n        el.style.backgroundColor = \"green\";\r\n    }\r\n    else if (player.upgrades[num] > 0.5 && ((num > 60 && num <= 80) || (num > 93 && num <= 100) || (num > 120))) {\r\n        el.style.backgroundColor = \"white\";\r\n    }\r\n    const b = upgdesc[`upgdesc${num}`];\r\n    const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : '';\r\n    if (player.upgrades[num] > 0.5) {\r\n        if (!fast) {\r\n            document.getElementById(\"upgradedescription\").textContent = b + c;\r\n            document.getElementById(\"upgradedescription\").style.color = \"gold\";\r\n        }\r\n    }\r\n    else {\r\n        el.style.backgroundColor = \"Black\";\r\n    }\r\n    if (!fast)\r\n        revealStuff();\r\n};\r\nconst constUpgEffect = {\r\n    1: () => `Tesseract building production x${format(Decimal.pow(1.05, player.constantUpgrades[1]), 2, true)}`,\r\n    2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100, player.constantUpgrades[2]), player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned), 2, true)}`,\r\n    3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\r\n    4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,\r\n    5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\r\n    6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\r\n    7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\r\n    8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\r\n    9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\r\n    10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}`\r\n};\r\nexport const returnConstUpgEffect = (i) => { var _a; return (_a = constUpgEffect[i]) === null || _a === void 0 ? void 0 : _a.call(constUpgEffect); };\r\nexport const getConstUpgradeMetadata = (i) => {\r\n    const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G['constUpgradeCosts'][i]) / Math.log(10)));\r\n    let cost = new Decimal(\"1\");\r\n    if (toBuy > player.constantUpgrades[i]) {\r\n        cost = Decimal.pow(10, toBuy - 1).times(G['constUpgradeCosts'][i]);\r\n    }\r\n    else {\r\n        cost = Decimal.pow(10, player.constantUpgrades[i]).times(G['constUpgradeCosts'][i]);\r\n    }\r\n    return [Math.max(1, toBuy - player.constantUpgrades[i]), cost];\r\n};\r\nexport const constantUpgradeDescriptions = (i) => {\r\n    const [level, cost] = getConstUpgradeMetadata(i);\r\n    const y = constantUpgDesc[`constantUpgDesc${i}`];\r\n    document.getElementById(\"constUpgradeDescription\").textContent = y;\r\n    document.getElementById(\"constUpgradeLevel2\").textContent = format(player.constantUpgrades[i]);\r\n    document.getElementById(\"constUpgradeCost2\").textContent = format(cost) + \" [+\" + format(level) + \" LVL]\";\r\n    document.getElementById(\"constUpgradeEffect2\").textContent = returnConstUpgEffect(i);\r\n};\r\nexport const buyConstantUpgrades = (i, fast = false) => {\r\n    const [level, cost] = getConstUpgradeMetadata(i);\r\n    if (player.ascendShards.gte(cost)) {\r\n        player.constantUpgrades[i] += level;\r\n        if (player.researches[175] === 0) {\r\n            player.ascendShards = player.ascendShards.sub(cost);\r\n        }\r\n        if (!fast) {\r\n            constantUpgradeDescriptions(i);\r\n        }\r\n    }\r\n    calculateAnts();\r\n    calculateRuneLevels();\r\n};\r\n","import Decimal from 'break_infinity.js';\r\nexport const isDecimal = (o) => o instanceof Decimal ||\r\n    (typeof o === 'object' &&\r\n        o !== null &&\r\n        Object.keys(o).length === 2 &&\r\n        'mantissa' in o &&\r\n        'exponent' in o);\r\nexport const smallestInc = (x = 0) => {\r\n    if (x <= Number.MAX_SAFE_INTEGER) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return Math.pow(2, Math.ceil(Math.log2(x) - 53));\r\n    }\r\n};\r\nexport const sumContents = (array) => {\r\n    array = Array.isArray(array)\r\n        ? array\r\n        : Object.values(array);\r\n    return array.reduce((a, b) => a + b, 0);\r\n};\r\nexport const productContents = (array) => array.reduce((a, b) => a * b);\r\nexport const sortWithIndeces = (toSort) => {\r\n    return Array\r\n        .from([...toSort.keys()])\r\n        .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]));\r\n};\r\nexport const getElementById = (id) => document.getElementById(id);\r\nexport const stripIndents = (...temp) => {\r\n    var _a;\r\n    const [s, ...args] = temp;\r\n    let f = '';\r\n    for (let i = 0; i < s.length; i++) {\r\n        f += `${s[i].replace(/\\n +/g, '\\n')}${(_a = args.shift()) !== null && _a !== void 0 ? _a : ''}`;\r\n    }\r\n    return f.trim();\r\n};\r\n","import Decimal from 'break_infinity.js';\r\nconst Globals = {\r\n    runediv: [1.5, 2, 3, 5, 8],\r\n    runeexpbase: [1, 4, 9, 16, 1000],\r\n    upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\r\n        2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\r\n        1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\r\n        0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\r\n        3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\r\n        12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\r\n        1e3, 1e6, 1e9, 1e12, 1e15],\r\n    crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\r\n    crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\r\n    researchBaseCosts: [1e200,\r\n        1, 1, 1, 1, 1,\r\n        1, 1e2, 1e4, 1e6, 1e8,\r\n        2, 2e2, 2e4, 2e6, 2e8,\r\n        4e4, 4e8, 10, 1e5, 1e9,\r\n        100, 100, 1e4, 2e3, 2e5,\r\n        40, 200, 50, 5000, 20000000,\r\n        777, 7777, 50000, 500000, 5000000,\r\n        2e3, 2e6, 2e9, 1e5, 1e9,\r\n        1, 1, 5, 25, 125,\r\n        2, 5, 320, 1280, 2.5e9,\r\n        10, 2e3, 4e5, 8e7, 2e9,\r\n        5, 400, 1e4, 3e6, 9e8,\r\n        100, 2500, 100, 2000, 2e5,\r\n        1, 20, 3e3, 4e5, 5e7,\r\n        10, 40, 160, 1000, 10000,\r\n        4e9, 7e9, 1e10, 1.2e10, 1.5e10,\r\n        1e12, 1e13, 3e12, 2e13, 2e13,\r\n        2e14, 6e14, 2e15, 6e15, 2e16,\r\n        1e16, 2e16, 2e17, 4e17, 1e18,\r\n        1e13, 1e14, 1e15, 7.777e18, 7.777e20,\r\n        1e16, 3e16, 1e17, 3e17, 1e20,\r\n        1e18, 3e18, 1e19, 3e19, 1e20,\r\n        1e20, 2e20, 4e20, 8e20, 1e21,\r\n        2e21, 4e21, 8e21, 2e22, 4e22,\r\n        3.2e21, 2e23, 4e23, 1e21, 7.777e32,\r\n        5e8, 5e12, 5e16, 5e20, 5e24,\r\n        1e25, 2e25, 4e25, 8e25, 1e26,\r\n        4e26, 8e26, 1e27, 2e27, 1e28,\r\n        5e9, 5e15, 5e21, 5e27, 1e28,\r\n        1e29, 2e29, 4e29, 8e29, 1e27,\r\n        2e30, 4e30, 8e30, 1e31, 2e31,\r\n        5e31, 1e32, 2e32, 4e32, 8e32,\r\n        1e33, 2e33, 4e33, 8e33, 1e34,\r\n        3e34, 1e35, 3e35, 6e35, 1e36,\r\n        3e36, 1e37, 3e37, 1e38, 3e38,\r\n        1e39, 3e39, 1e40, 3e40, 1e50,\r\n        3e41, 1e42, 3e42, 6e42, 1e43,\r\n        3e43, 1e44, 3e44, 1e45, 3e45,\r\n        2e46, 6e46, 2e47, 6e47, 1e64,\r\n        6e48, 2e49, 1e50, 1e51, 4e56\r\n    ],\r\n    researchMaxLevels: [0, 1, 1, 1, 1, 1,\r\n        10, 10, 10, 10, 10,\r\n        10, 10, 10, 10, 10,\r\n        10, 10, 1, 1, 1,\r\n        25, 25, 25, 20, 20,\r\n        10, 10, 10, 10, 10,\r\n        12, 12, 10, 10, 10,\r\n        10, 10, 10, 1, 1,\r\n        1, 1, 1, 1, 1,\r\n        1, 1, 1, 1, 1,\r\n        10, 10, 10, 10, 10,\r\n        20, 20, 20, 20, 20,\r\n        1, 5, 4, 5, 5,\r\n        10, 10, 10, 10, 10,\r\n        1, 1, 1, 1, 1,\r\n        10, 50, 50, 50, 50,\r\n        10, 1, 20, 20, 20,\r\n        20, 20, 20, 20, 10,\r\n        20, 20, 20, 20, 1,\r\n        20, 5, 5, 2, 1,\r\n        10, 10, 10, 10, 1,\r\n        10, 10, 20, 25, 25,\r\n        50, 50, 50, 50, 100,\r\n        10, 10, 10, 100, 100,\r\n        25, 25, 25, 1, 1,\r\n        10, 10, 10, 10, 1,\r\n        10, 10, 10, 1, 1,\r\n        25, 25, 25, 15, 1,\r\n        10, 10, 10, 10, 1,\r\n        10, 1, 6, 10, 1,\r\n        25, 25, 1, 15, 1,\r\n        10, 10, 10, 1, 1,\r\n        10, 10, 10, 10, 1,\r\n        25, 25, 25, 15, 1,\r\n        10, 10, 10, 1, 1,\r\n        10, 3, 6, 10, 1,\r\n        25, 25, 1, 15, 1,\r\n        20, 20, 20, 1, 1,\r\n        20, 1, 50, 50, 2,\r\n        25, 25, 25, 15, 100000\r\n    ],\r\n    ticker: 0,\r\n    costDivisor: 1,\r\n    freeAccelerator: 0,\r\n    totalAccelerator: 0,\r\n    freeAcceleratorBoost: 0,\r\n    totalAcceleratorBoost: 0,\r\n    acceleratorPower: 1.10,\r\n    acceleratorEffect: new Decimal(1),\r\n    acceleratorEffectDisplay: new Decimal(1),\r\n    generatorPower: new Decimal(1),\r\n    freeMultiplier: 0,\r\n    totalMultiplier: 0,\r\n    multiplierPower: 2,\r\n    multiplierEffect: new Decimal(1),\r\n    challengeOneLog: 3,\r\n    freeMultiplierBoost: 0,\r\n    totalMultiplierBoost: 0,\r\n    globalCoinMultiplier: new Decimal(1),\r\n    totalCoinOwned: 0,\r\n    prestigeMultiplier: new Decimal(1),\r\n    buildingPower: 1,\r\n    reincarnationMultiplier: new Decimal(1),\r\n    coinOneMulti: new Decimal(1),\r\n    coinTwoMulti: new Decimal(1),\r\n    coinThreeMulti: new Decimal(1),\r\n    coinFourMulti: new Decimal(1),\r\n    coinFiveMulti: new Decimal(1),\r\n    globalCrystalMultiplier: new Decimal(1),\r\n    globalMythosMultiplier: new Decimal(0.01),\r\n    grandmasterMultiplier: new Decimal(1),\r\n    atomsMultiplier: new Decimal(1),\r\n    mythosBuildingPower: 1,\r\n    challengeThreeMultiplier: new Decimal(1),\r\n    totalMythosOwned: 0,\r\n    prestigePointGain: new Decimal(0),\r\n    challengeFivePower: 1 / 3,\r\n    transcendPointGain: new Decimal(0),\r\n    reincarnationPointGain: new Decimal(0),\r\n    produceFirst: new Decimal(0),\r\n    produceSecond: new Decimal(0),\r\n    produceThird: new Decimal(0),\r\n    produceFourth: new Decimal(0),\r\n    produceFifth: new Decimal(0),\r\n    produceTotal: new Decimal(0),\r\n    produceFirstDiamonds: new Decimal(0),\r\n    produceSecondDiamonds: new Decimal(0),\r\n    produceThirdDiamonds: new Decimal(0),\r\n    produceFourthDiamonds: new Decimal(0),\r\n    produceFifthDiamonds: new Decimal(0),\r\n    produceDiamonds: new Decimal(0),\r\n    produceFirstMythos: new Decimal(0),\r\n    produceSecondMythos: new Decimal(0),\r\n    produceThirdMythos: new Decimal(0),\r\n    produceFourthMythos: new Decimal(0),\r\n    produceFifthMythos: new Decimal(0),\r\n    produceMythos: new Decimal(0),\r\n    produceFirstParticles: new Decimal(0),\r\n    produceSecondParticles: new Decimal(0),\r\n    produceThirdParticles: new Decimal(0),\r\n    produceFourthParticles: new Decimal(0),\r\n    produceFifthParticles: new Decimal(0),\r\n    produceParticles: new Decimal(0),\r\n    producePerSecond: new Decimal(0),\r\n    producePerSecondDiamonds: new Decimal(0),\r\n    producePerSecondMythos: new Decimal(0),\r\n    producePerSecondParticles: new Decimal(0),\r\n    uFourteenMulti: new Decimal(1),\r\n    uFifteenMulti: new Decimal(1),\r\n    tuSevenMulti: 1,\r\n    currentTab: 'buildings',\r\n    researchfiller1: \"Hover over the grid to get details about researches!\",\r\n    researchfiller2: \"Level: \",\r\n    ordinals: [\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\", \"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\", \"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\", \"eighteenth\", \"nineteenth\", \"twentieth\"],\r\n    cardinals: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\", \"twentyone\", \"twentytwo\", \"twentythree\", \"twentyfour\", \"twentyfive\", \"twentysix\", \"twentyseven\", \"twentyeight\", \"twentynine\", \"thirty\", \"thirtyone\", \"thirtytwo\", \"thirtythree\", \"thirtyfour\"],\r\n    challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 10000, 2.5e8, 3.5e9],\r\n    prestigeamount: 1,\r\n    taxdivisor: new Decimal(\"1\"),\r\n    taxdivisorcheck: new Decimal(\"1\"),\r\n    runemultiplierincrease: {\r\n        one: 1,\r\n        two: 1,\r\n        three: 1,\r\n        four: 1,\r\n        five: 1\r\n    },\r\n    mythosupgrade13: new Decimal(\"1\"),\r\n    mythosupgrade14: new Decimal(\"1\"),\r\n    mythosupgrade15: new Decimal(\"1\"),\r\n    challengefocus: 0,\r\n    maxexponent: 10000,\r\n    maxbuyresearch: false,\r\n    effectiveLevelMult: 1,\r\n    optimalOfferingTimer: 600,\r\n    optimalObtainiumTimer: 3600,\r\n    runeSum: 0,\r\n    shopBaseCosts: {\r\n        offerPotion: 100,\r\n        obtainiumPotion: 100,\r\n        offerTimer: 150,\r\n        obtainiumTimer: 150,\r\n        offerAuto: 150,\r\n        obtainiumAuto: 150,\r\n        instantChallenge: 300,\r\n        cashGrab: 100,\r\n        antSpeed: 200,\r\n        seasonPass: 500,\r\n        challengeExtension: 500,\r\n        challenge10Upgrade: 500,\r\n        cubeToQuark: 2000,\r\n        tesseractToQuark: 3500,\r\n        hypercubeToQuark: 5000,\r\n    },\r\n    shopConfirmation: true,\r\n    globalAntMult: new Decimal(\"1\"),\r\n    antMultiplier: new Decimal(\"1\"),\r\n    antOneProduce: new Decimal(\"1\"),\r\n    antTwoProduce: new Decimal(\"1\"),\r\n    antThreeProduce: new Decimal(\"1\"),\r\n    antFourProduce: new Decimal(\"1\"),\r\n    antFiveProduce: new Decimal(\"1\"),\r\n    antSixProduce: new Decimal(\"1\"),\r\n    antSevenProduce: new Decimal(\"1\"),\r\n    antEightProduce: new Decimal(\"1\"),\r\n    antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\r\n    antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\r\n    antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\r\n    bonusant1: 0,\r\n    bonusant2: 0,\r\n    bonusant3: 0,\r\n    bonusant4: 0,\r\n    bonusant5: 0,\r\n    bonusant6: 0,\r\n    bonusant7: 0,\r\n    bonusant8: 0,\r\n    bonusant9: 0,\r\n    bonusant10: 0,\r\n    bonusant11: 0,\r\n    bonusant12: 0,\r\n    rune1level: 1,\r\n    rune2level: 1,\r\n    rune3level: 1,\r\n    rune4level: 1,\r\n    rune5level: 1,\r\n    rune1Talisman: 0,\r\n    rune2Talisman: 0,\r\n    rune3Talisman: 0,\r\n    rune4Talisman: 0,\r\n    rune5Talisman: 0,\r\n    talisman1Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman2Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman3Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman4Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman5Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman6Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman7Effect: [null, 0, 0, 0, 0, 0],\r\n    talisman6Power: 0,\r\n    talisman7Quarks: 0,\r\n    runescreen: \"runes\",\r\n    settingscreen: \"settings\",\r\n    talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\r\n    talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\r\n    talismanLevelCostMultiplier: [null, 1, 4, 1e4, 1e8, 1e13, 10, 100],\r\n    talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\r\n    talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\r\n    commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\r\n    uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\r\n    rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\r\n    epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\r\n    legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\r\n    mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\r\n    talismanRespec: 1,\r\n    obtainiumGain: 0,\r\n    mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\r\n    antELO: 0,\r\n    effectiveELO: 0,\r\n    timeWarp: false,\r\n    blessingMultiplier: 1,\r\n    spiritMultiplier: 1,\r\n    runeBlessings: [0, 0, 0, 0, 0, 0],\r\n    runeSpirits: [0, 0, 0, 0, 0, 0],\r\n    effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\r\n    effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\r\n    blessingBaseCost: 1e6,\r\n    spiritBaseCost: 1e20,\r\n    triggerChallenge: 0,\r\n    prevReductionValue: -1,\r\n    buildingSubTab: \"coin\",\r\n    blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\r\n    blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\r\n    giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n    giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\r\n    benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\r\n    benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\r\n    platonicCubeBase: [2 / 4e6, 1.5 / 4e6, 1 / 4e6, 1 / 8e4, 1 / 1e4, 1 / 1e5, 1 / 1e4, 1 / 1e4],\r\n    platonicDRPower: [1 / 5, 1 / 5, 1 / 5, 1 / 5, 1 / 16, 1 / 16, 1 / 4, 1 / 8],\r\n    cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\r\n    buyMaxCubeUpgrades: false,\r\n    autoOfferingCounter: 0,\r\n    researchOrderByCost: [],\r\n    divisivenessPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\r\n    maladaptivePower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1],\r\n    lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1 / 1e13, 1 / 1e16, 1 / 1e20, 1 / 1e25, 1 / 1e35],\r\n    hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400],\r\n    illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01],\r\n    deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1 / 1e6, 1 / 1e8, 1 / 1e10, 1 / 1e12, 1 / 1e15, 1 / 1e18, 1 / 1e25, 0],\r\n    extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0],\r\n    droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80],\r\n    financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03],\r\n    corruptionPointMultipliers: [1, 2, 2.75, 3.5, 4.25, 5, 5.75, 6.5, 7, 7.5, 8, 9, 10],\r\n    ascendBuildingProduction: {\r\n        first: new Decimal('0'),\r\n        second: new Decimal('0'),\r\n        third: new Decimal('0'),\r\n        fourth: new Decimal('0'),\r\n        fifth: new Decimal('0'),\r\n    },\r\n    freeUpgradeAccelerator: 0,\r\n    freeUpgradeMultiplier: 0,\r\n    acceleratorMultiplier: 1,\r\n    multiplierMultiplier: 1,\r\n    constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\r\n    globalConstantMult: new Decimal(\"1\"),\r\n    autoTalismanTimer: 0,\r\n    autoChallengeTimerIncrement: 0,\r\n    corruptionTrigger: 1,\r\n    challenge15Rewards: {\r\n        cube1: 1,\r\n        ascensions: 1,\r\n        coinExponent: 1,\r\n        taxes: 1,\r\n        obtainium: 1,\r\n        offering: 1,\r\n        accelerator: 1,\r\n        multiplier: 1,\r\n        runeExp: 1,\r\n        runeBonus: 1,\r\n        cube2: 1,\r\n        transcendChallengeReduction: 1,\r\n        reincarnationChallengeReduction: 1,\r\n        antSpeed: 1,\r\n        bonusAntLevel: 1,\r\n        cube3: 1,\r\n        talismanBonus: 1,\r\n        globalSpeed: 1,\r\n        blessingBonus: 1,\r\n        constantBonus: 1,\r\n        cube4: 1,\r\n        spiritBonus: 1,\r\n        score: 1,\r\n    },\r\n    autoResetTimers: {\r\n        prestige: 0,\r\n        transcension: 0,\r\n        reincarnation: 0,\r\n        ascension: 0\r\n    },\r\n    timeMultiplier: 1,\r\n    upgradeMultiplier: 1\r\n};\r\nexport { Globals };\r\nexport default Globals;\r\n","var map = {\n\t\"./Dashboard\": [\n\t\t261,\n\t\t261\n\t],\n\t\"./Dashboard.ts\": [\n\t\t261,\n\t\t261\n\t],\n\t\"./Example\": [\n\t\t838,\n\t\t838\n\t],\n\t\"./Example.ts\": [\n\t\t838,\n\t\t838\n\t],\n\t\"./Plugins\": [\n\t\t794\n\t],\n\t\"./Plugins.ts\": [\n\t\t794\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => Object.keys(map);\nwebpackAsyncContext.id = 464;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/dist/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n\t\t\t\t\t});\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no deferred startup\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksynergismofficial\"] = self[\"webpackChunksynergismofficial\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\n// no deferred startup","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(616);\n"],"sourceRoot":""}