{"version":3,"sources":["webpack://synergismofficial/./src/Plugins/Dashboard.ts"],"names":["SplitTime","numberOfHours","Days","Math","floor","Remainder","Hours","Minutes","statValues","0","el","textContent","1","document","getElementById","2","3","4","5","join","6","7","map","x","8","9","10","11","12","13","talismanColors","querySelectorAll","forEach","span","i","style","color","14","roomba","15","autorune","16","autoch","17","autosac","realtime","seconds","firstChild","button","lastElementChild","tab","createElement","id","display","innerHTML","settingsTab","className","border","float","height","width","margin","dashboardLoopRefFast","dashboardLoopRefSlow","activeTab","open","renderDashboardSlow","upgrade","Number","value","levels","querySelector","tess","hyper","plat","Upgrades","tessCost","tesseracts","hyperCost","hypercubes","platCost","platonics","time","platRate","hyperRate","tessRate","platTimeNeeded","hyperTimeNeeded","tessTimeNeeded","Plats","max","Hypers","Tess","totalTimeNeeded","minutesToAdd","futureDate","Date","now","toPrecision","getCubeTimes","renderDashboardFast","exitDashboard","stat","_a","call","clearInterval","innerText","marginLeft","getElementsByClassName","enable","console","log","css","appendChild","createTextNode","head","GM_addStyle","addEventListener","n","setInterval","openDashboard","firstElementChild","insertAdjacentElement","main","Object","defineProperty","window"],"mappings":"kNAOA,MAAMA,EAAaC,IACf,MAAMC,EAAOC,KAAKC,MAAMH,EAAgB,IAClCI,EAAYJ,EAAgB,GAC5BK,EAAQH,KAAKC,MAAMC,GAEzB,MAAO,CAAGH,OAAMI,QAAOC,QADPJ,KAAKC,MAAM,IAAMC,EAAYC,MA0C3CE,EAAa,CACfC,EAAGC,GAAMA,EAAGC,aAAc,QAAO,mBACjCC,EAAGF,GAAMA,EAAGC,YAAcE,SAASC,eAAe,2BAA2BH,YAC7EI,EAAGL,GAAMA,EAAGC,YAAcE,SAASC,eAAe,gCAAgCH,YAClFK,EAAGN,GAAMA,EAAGC,YAAcE,SAASC,eAAe,gCAAgCH,YAClFM,EAAGP,GAAMA,EAAGC,YAAcE,SAASC,eAAe,+BAA+BH,YACjFO,EAAGR,GAAMA,EAAGC,YAAc,gCAAkC,GAAI,IAAIQ,KAAK,OACzEC,EAAGV,GAAMA,EAAGC,aAAc,QAAO,yBAA4B,GAC7DU,EAAGX,GAAMA,EAAGC,YAAc,8BAAgC,EAAG,GAAGW,KAAIC,IAAK,QAAOA,KAAIJ,KAAK,OACzFK,EAAGd,GAAMA,EAAGC,YAAc,4BAA8B,EAAG,GAAGW,KAAIC,IAAK,QAAOA,KAAIJ,KAAK,OACvFM,EAAGf,GAAMA,EAAGC,YAAc,2BAA6B,EAAG,IAAIQ,KAAK,OACnEO,GAAIhB,GAAMA,EAAGC,YAAc,gCAAkC,EAAG,GAAGQ,KAAK,OACxEQ,GAAIjB,GAAMA,EAAGC,YAAc,gCAAkC,EAAG,IAAIQ,KAAK,OACzES,GAAIlB,GAAMA,EAAGC,YAAc,qBAAuB,OAClDkB,GAAInB,IACA,MAAMoB,EAAiB,CAAC,QAAS,YAAa,YAAa,OAAQ,SAAU,WAC7EpB,EAAGqB,iBAAiB,QAAQC,SAAQ,CAACC,EAAMC,KACvCD,EAAKE,MAAMC,MAAQN,EAAe,oBAAsBI,GAAK,GAC7DD,EAAKtB,YAAc,oBAAsBuB,GAAK,OAGtDG,GAAI3B,IACA,MAAM4B,EAAS,wBACf5B,EAAGyB,MAAMC,MAAQE,EAAS,QAAU,MACpC5B,EAAGC,YAAc2B,EAAS,KAAO,OAErCC,GAAI7B,IACA,MAAM8B,EAAW,yBACjB9B,EAAGyB,MAAMC,MAAQI,EAAW,QAAU,MACtC9B,EAAGC,YAAc6B,EAAW,KAAO,OAEvCC,GAAI/B,IACA,MAAMgC,EAAS,0BACfhC,EAAGyB,MAAMC,MAAQM,EAAS,QAAU,MACpChC,EAAGC,YAAc+B,EAAS,KAAO,OAErCC,GAAIjC,IACA,MAAMkC,EAAU,sBACVC,EAA2C,IAAhC,0BACXC,EAAU,qBACHpC,EAAGqC,WACXpC,YAAc,IAAImC,KAAWD,EAAW,OAAS,kBACtD,MAAMG,EAAStC,EAAGuC,iBAClBD,EAAOb,MAAMC,MAAQQ,EAAU,QAAU,MACzCI,EAAOrC,YAAciC,EAAU,KAAO,QA2BxCM,EAAMrC,SAASsC,cAAc,OACnCD,EAAIE,GAAK,kBACTF,EAAIf,MAAMkB,QAAU,OACpBH,EAAII,UAAY,ktFAqChB,MAAMC,EAAc1C,SAASC,eAAe,YACtCkC,EAASnC,SAASsC,cAAc,UACtCH,EAAOQ,UAAY,iBACnBR,EAAOb,MAAMsB,OAAS,oBACtBT,EAAOb,MAAMuB,MAAQ,QACrBV,EAAOb,MAAMwB,OAAS,OACtBX,EAAOb,MAAMyB,MAAQ,QACrBZ,EAAOb,MAAM0B,OAAS,QACtB,IAAIC,EAAuB,KACvBC,EAAuB,KACvBC,EAAY,KACZC,GAAO,EACX,MAAMC,EAAsB,KACxB,MAAMC,EAAUC,QAAO,QAAe,kBAAkBC,OAClDC,EAASF,QAAO,QAAe,kBAAkBC,OACvDnB,EAAIqB,cAAc,cAAc5D,YArKf,EAACuB,EAAI,EAAGoC,EAAS,KAClC,MAAO,CAAE,CAAE,CAAE,CAAE,CAAEE,EAAMC,EAAOC,IAAQ,UAChCC,EAAW,KAAqBzC,GAChC0C,EAAWD,EAASE,WAAaP,EACjCQ,EAAYH,EAASI,WAAaT,EAClCU,EAAWL,EAASM,UAAYX,EAChCY,EAAO,sBAA0B,KACjCC,EAAWT,EAAOQ,EAClBE,EAAYX,EAAQS,EACpBG,EAAWb,EAAOU,EAClBI,GAAkBN,EAAW,sBAA0BN,GAAQS,EAC/DI,GAAmBT,EAAY,mBAAuBL,GAASW,EAC/DI,GAAkBZ,EAAW,mBAAuBJ,GAAQa,EAC5DI,EAAQzF,EAAUG,KAAKuF,IAAI,EAAGJ,IAC9BK,EAAS3F,EAAUG,KAAKuF,IAAI,EAAGH,IAC/BK,EAAO5F,EAAUG,KAAKuF,IAAI,EAAGF,IAC7BK,EAAkB1F,KAAKuF,IAAI,EAAGJ,EAAgBC,EAAiBC,GAC/DM,EAAiC,GAAlBD,EACfE,EAAa,IAAIC,KAAKA,KAAKC,MAAuB,IAAfH,GACzC,OAAO,IAAa;+BACOxB,kCAAuCpC;iBACrDuD,EAAMvF,cAAcuF,EAAMnF,gBAAgBmF,EAAMlF;kBAC/CoF,EAAOzF,cAAcyF,EAAOrF,gBAAgBqF,EAAOpF;gBACrDqF,EAAK1F,cAAc0F,EAAKtF,gBAAgBsF,EAAKrF;;;UAGnDwF;;2BAEiBF,EAAkB,IAAIK,YAAY;sBACvCf,GAAYU,EAAkBP,IAAiBY,YAAY;mBAC9Dd,GAAaS,EAAkBN,IAAkBW,YAAY;uBACzDb,GAAYQ,EAAkBL,IAAiBU,YAAY;OAsIhCC,CAAahC,EAASG,IAElE8B,EAAsB,KACxB,GAAwB,aAApB,eAEA,OADAnC,GAAO,EACAoC,IAEXnD,EAAInB,iBAAiB,kBAAkBC,SAAQ,CAACsE,EAAMpE,KAAQ,IAAIqE,EAAI,OAAgC,QAAxBA,EAAK/F,EAAW0B,UAAuB,IAAPqE,OAAgB,EAASA,EAAGC,KAAKhG,EAAY8F,OAuBzJD,EAAgB,KAClBI,cAAc3C,GACd2C,cAAc1C,GACdb,EAAIf,MAAMkB,QAAU,OACpBW,EAAU7B,MAAMkB,QAAU,KAC1BL,EAAO0D,UAAY,YACnB1D,EAAOb,MAAMwE,WAAa,KACVpD,EAAYqD,uBAAuB,kBAAkB,GAC7DzE,MAAMkB,QAAU,MAEtBwD,EAAS,KACXC,QAAQC,IAAI,4DA5KI,CAACC,IACjB,MAAM7E,EAAQtB,SAASsC,cAAc,SACrChB,EAAM8E,YAAYpG,SAASqG,eAkDnB,qeAjDRrG,SAASsG,KAAKF,YAAY9E,IA0K1BiF,GACAlE,EAAIqB,cAAc,0BAA0B8C,iBAAiB,SAAS,KAAM,YAC5EnE,EAAIqB,cAAc,uBAAuB8C,iBAAiB,SAAS,KAAM,QAAoB,KAC7FnE,EAAIqB,cAAc,2BAA2B8C,iBAAiB,SAAS,KAAM,YAC7EnE,EAAIqB,cAAc,qBAAqB8C,iBAAiB,SAAS,KAAM,QAAuB,KAC9F9D,EAAY0D,YAAY/D,GACxBF,EAAOqE,iBAAiB,SAAS,KAAOpD,GAAQA,GAvC9B,MAClB,MAAMqD,EAAI,kBACV,eAAkB,QAClB,CAAC,EAAG,EAAG,EAAG,GAAGtF,SAAQE,IACjB,kBAAsBA,GACtB,aAEJ,eAAkB,WAClB,kBAAsBoF,EACtBlB,IACAlC,IACAJ,EAAuByD,YAAYnB,EAAqB,KACxDrC,EAAuBwD,YAAYrD,EAAqB,KACxDF,EAAYT,EAAYqD,uBAAuB,gBAAgB,GAC/D5C,EAAU7B,MAAMkB,QAAU,OAC1BH,EAAIf,MAAMkB,QAAU,QACpBL,EAAO0D,UAAY,iBACnB1D,EAAOb,MAAMwE,WAAa,OACVpD,EAAYqD,uBAAuB,kBAAkB,GAC7DzE,MAAMkB,QAAU,QAoBgCmE,GAAkBnB,MAC1ErD,EAAO0D,UAAY,YACnBnD,EAAYkE,kBAAkBC,sBAAsB,cAAe1E,IAE1D2E,EAAO,KAChBC,OAAOC,eAAeC,OAAQ,YAAa,CACvCzD,MAAOwC","file":"261.bundle.js","sourcesContent":["import { CalcCorruptionStuff } from '../Calculate';\r\nimport { platUpgradeBaseCosts } from '../Platonic';\r\nimport { player, format } from '../Synergism';\r\nimport { toggleAntAutoSacrifice, toggleAutoChallengeRun, toggleAutoResearch, toggleAutoSacrifice } from '../Toggles';\r\nimport { visualUpdateCubes } from '../UpdateVisuals';\r\nimport { getElementById, stripIndents } from '../Utility';\r\nimport { Globals as G } from '../Variables';\r\nconst SplitTime = (numberOfHours) => {\r\n    const Days = Math.floor(numberOfHours / 24);\r\n    const Remainder = numberOfHours % 24;\r\n    const Hours = Math.floor(Remainder);\r\n    const Minutes = Math.floor(60 * (Remainder - Hours));\r\n    return ({ Days, Hours, Minutes });\r\n};\r\nconst getCubeTimes = (i = 5, levels = 1) => {\r\n    const [, , , , , tess, hyper, plat] = CalcCorruptionStuff();\r\n    const Upgrades = platUpgradeBaseCosts[i];\r\n    const tessCost = Upgrades.tesseracts * levels;\r\n    const hyperCost = Upgrades.hypercubes * levels;\r\n    const platCost = Upgrades.platonics * levels;\r\n    const time = player.ascensionCounter / 3600;\r\n    const platRate = plat / time;\r\n    const hyperRate = hyper / time;\r\n    const tessRate = tess / time;\r\n    const platTimeNeeded = (platCost - player.wowPlatonicCubes - plat) / platRate;\r\n    const hyperTimeNeeded = (hyperCost - player.wowHypercubes - hyper) / hyperRate;\r\n    const tessTimeNeeded = (tessCost - player.wowTesseracts - tess) / tessRate;\r\n    const Plats = SplitTime(Math.max(0, platTimeNeeded));\r\n    const Hypers = SplitTime(Math.max(0, hyperTimeNeeded));\r\n    const Tess = SplitTime(Math.max(0, tessTimeNeeded));\r\n    const totalTimeNeeded = Math.max(0, platTimeNeeded, hyperTimeNeeded, tessTimeNeeded);\r\n    const minutesToAdd = totalTimeNeeded * 60;\r\n    const futureDate = new Date(Date.now() + minutesToAdd * 60000);\r\n    return stripIndents `\r\n        Time left until next ${levels} level(s) of platonic upgrade ${i} purchase:\r\n        Plats: ${Plats.Days} Days, ${Plats.Hours} Hours, ${Plats.Minutes} Minutes\r\n        Hypers: ${Hypers.Days} Days, ${Hypers.Hours} Hours, ${Hypers.Minutes} Minutes\r\n        Tess: ${Tess.Days} Days, ${Tess.Hours} Hours, ${Tess.Minutes} Minutes\r\n\r\n        At your current rate, you are expected to get this at:\r\n        ${futureDate}\r\n\r\n        Leftovers after ${(totalTimeNeeded / 24).toPrecision(4)} days:\r\n        Platonics: ${(platRate * (totalTimeNeeded - platTimeNeeded)).toPrecision(4)}\r\n        Hypers: ${(hyperRate * (totalTimeNeeded - hyperTimeNeeded)).toPrecision(4)}\r\n        Tesseracts: ${(tessRate * (totalTimeNeeded - tessTimeNeeded)).toPrecision(4)}\r\n    `;\r\n};\r\nconst GM_addStyle = (css) => {\r\n    const style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(css));\r\n    document.head.appendChild(style);\r\n};\r\nconst statValues = {\r\n    0: el => el.textContent = format(player.ascendShards),\r\n    1: el => el.textContent = document.getElementById(\"cubeBlessingTotalAmount\").textContent,\r\n    2: el => el.textContent = document.getElementById(\"tesseractBlessingTotalAmount\").textContent,\r\n    3: el => el.textContent = document.getElementById(\"hypercubeBlessingTotalAmount\").textContent,\r\n    4: el => el.textContent = document.getElementById(\"platonicBlessingTotalAmount\").textContent,\r\n    5: el => el.textContent = player.challengecompletions.slice(11, 15).join(' / '),\r\n    6: el => el.textContent = format(player.challenge15Exponent, 0),\r\n    7: el => el.textContent = player.runeBlessingLevels.slice(1, 6).map(x => format(x)).join(' / '),\r\n    8: el => el.textContent = player.runeSpiritLevels.slice(1, 6).map(x => format(x)).join(' / '),\r\n    9: el => el.textContent = player.usedCorruptions.slice(1, 10).join(' / '),\r\n    10: el => el.textContent = player.challengecompletions.slice(1, 6).join(' / '),\r\n    11: el => el.textContent = player.challengecompletions.slice(6, 11).join(' / '),\r\n    12: el => el.textContent = player.runelevels.join(' / '),\r\n    13: el => {\r\n        const talismanColors = ['white', 'limegreen', 'lightblue', 'plum', 'orange', 'crimson'];\r\n        el.querySelectorAll('span').forEach((span, i) => {\r\n            span.style.color = talismanColors[player.talismanRarity[i] - 1];\r\n            span.textContent = player.talismanLevels[i] + '';\r\n        });\r\n    },\r\n    14: el => {\r\n        const roomba = player.autoResearchToggle;\r\n        el.style.color = roomba ? 'green' : 'red';\r\n        el.textContent = roomba ? 'ON' : 'OFF';\r\n    },\r\n    15: el => {\r\n        const autorune = player.autoSacrificeToggle;\r\n        el.style.color = autorune ? 'green' : 'red';\r\n        el.textContent = autorune ? 'ON' : 'OFF';\r\n    },\r\n    16: el => {\r\n        const autoch = player.autoChallengeRunning;\r\n        el.style.color = autoch ? 'green' : 'red';\r\n        el.textContent = autoch ? 'ON' : 'OFF';\r\n    },\r\n    17: el => {\r\n        const autosac = player.autoAntSacrifice;\r\n        const realtime = player.autoAntSacrificeMode === 2;\r\n        const seconds = player.autoAntSacTimer;\r\n        const text = el.firstChild;\r\n        text.textContent = `(${seconds} ${realtime ? 'real' : 'igt'} seconds) `;\r\n        const button = el.lastElementChild;\r\n        button.style.color = autosac ? 'green' : 'red';\r\n        button.textContent = autosac ? 'ON' : 'OFF';\r\n    }\r\n};\r\nconst css = `\r\n    #dashboard {\r\n        text-align: left;\r\n    }\r\n    .db-table {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        margin: 0;\r\n        padding: 0.5em;\r\n    }\r\n    .db-table-cell {\r\n        box-sizing: border-box;\r\n        flex-grow: 1;\r\n        width: 50%;\r\n        padding: 0.8em 1.2em;\r\n        overflow: hidden;\r\n        list-style: none;\r\n        border: none;\r\n    }\r\n    .db-stat-line {\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\nconst tab = document.createElement('div');\r\ntab.id = 'dashboardSubTab';\r\ntab.style.display = 'none';\r\ntab.innerHTML = `\r\n<div id=\"dashboard\" class=\"db-table\" style=\"background-color: #111;\">\r\n    <div class=\"db-table-cell\" style=\"width: 35%;\">\r\n    <h3 style=\"color: plum\">Overall progress stats</h3>\r\n    <div class=\"db-stat-line\" style=\"color: orange\">Constant: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: yellow\">Cube tributes: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: orchid\">Tesseract gifts: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: crimson\">Hypercube benedictions: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: lightgoldenrodyellow\">Platonic Cubes opened: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: #ffac75\">C11-14 completions: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: gold\">C15 exponent: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\">Blessing levels: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\">Spirit levels: <span class=\"dashboardstat\"></span></div>\r\n\r\n    <h3 style=\"color: plum\">Current run stats</h3>\r\n    <div class=\"db-stat-line\" style=\"color: white\">Loadout: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: plum\">C1-5 completions: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: limegreen\">C6-10 completions: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\" style=\"color: cyan\">Rune levels: <span class=\"dashboardstat\"></span></div>\r\n    <div class=\"db-stat-line\">Talisman levels: <span class=\"dashboardstat\">\r\n        <span></span> / <span></span> / <span></span> / <span></span> / <span></span> / <span></span> / <span></span>\r\n    </span></div>\r\n\r\n    <h3 style=\"color: plum\">Settings</h3>\r\n    <div class=\"db-stat-line\">Autoresearch: <button class=\"dashboardstat dashboardstatResearch\"></button></div>\r\n    <div class=\"db-stat-line\">Autorunes: <button class=\"dashboardstat dashboardstatRunes\"></button></div>\r\n    <div class=\"db-stat-line\">Autochallenge: <button class=\"dashboardstat dashboardstatChallenge\"></button></div>\r\n    <div class=\"db-stat-line\">Ants Autosacrifice: <span class=\"dashboardstat\"> <button class=\"dashboardstatSac\"></button></span></div>\r\n    </div>\r\n    <div class=\"db-table-cell\">\r\n        <h3 style=\"color: plum\">Time to plat upgrade</h3>\r\n        Platonic upgrade: <input id=\"db-plat-number\" type=\"number\" min=\"1\" max=\"15\" step=\"1\" value=\"5\">\r\n        Number of levels: <input id=\"db-plat-amount\" type=\"number\" min=\"1\" max=\"100\" step=\"1\" value=\"1\">\r\n        <div><pre id=\"cubeTimes\"></pre></div>\r\n    </div>\r\n</div>\r\n`;\r\nconst settingsTab = document.getElementById('settings');\r\nconst button = document.createElement('button');\r\nbutton.className = 'ascendunlockib';\r\nbutton.style.border = '2px solid orange;';\r\nbutton.style.float = 'right';\r\nbutton.style.height = '30px';\r\nbutton.style.width = '150px';\r\nbutton.style.margin = '9px 0';\r\nlet dashboardLoopRefFast = null;\r\nlet dashboardLoopRefSlow = null;\r\nlet activeTab = null;\r\nlet open = false;\r\nconst renderDashboardSlow = () => {\r\n    const upgrade = Number(getElementById('db-plat-number').value);\r\n    const levels = Number(getElementById('db-plat-amount').value);\r\n    tab.querySelector('#cubeTimes').textContent = getCubeTimes(upgrade, levels);\r\n};\r\nconst renderDashboardFast = () => {\r\n    if (G['currentTab'] !== 'settings') {\r\n        open = false;\r\n        return exitDashboard();\r\n    }\r\n    tab.querySelectorAll('.dashboardstat').forEach((stat, i) => { var _a; return (_a = statValues[i]) === null || _a === void 0 ? void 0 : _a.call(statValues, stat); });\r\n};\r\nconst openDashboard = () => {\r\n    const n = player.subtabNumber;\r\n    G['currentTab'] = 'cubes';\r\n    [0, 1, 2, 3].forEach(i => {\r\n        player.subtabNumber = i;\r\n        visualUpdateCubes();\r\n    });\r\n    G['currentTab'] = 'settings';\r\n    player.subtabNumber = n;\r\n    renderDashboardFast();\r\n    renderDashboardSlow();\r\n    dashboardLoopRefFast = setInterval(renderDashboardFast, 100);\r\n    dashboardLoopRefSlow = setInterval(renderDashboardSlow, 1000);\r\n    activeTab = settingsTab.getElementsByClassName('subtabActive')[0];\r\n    activeTab.style.display = 'none';\r\n    tab.style.display = 'block';\r\n    button.innerText = 'Exit Dashboard';\r\n    button.style.marginLeft = '100%';\r\n    const buttons = settingsTab.getElementsByClassName('subtabSwitcher')[0];\r\n    buttons.style.display = 'none';\r\n};\r\nconst exitDashboard = () => {\r\n    clearInterval(dashboardLoopRefFast);\r\n    clearInterval(dashboardLoopRefSlow);\r\n    tab.style.display = 'none';\r\n    activeTab.style.display = null;\r\n    button.innerText = 'Dashboard';\r\n    button.style.marginLeft = null;\r\n    const buttons = settingsTab.getElementsByClassName('subtabSwitcher')[0];\r\n    buttons.style.display = null;\r\n};\r\nconst enable = () => {\r\n    console.log('hello synergism, dashboard installed in the settings tab');\r\n    GM_addStyle(css);\r\n    tab.querySelector('.dashboardstatResearch').addEventListener('click', () => toggleAutoResearch());\r\n    tab.querySelector('.dashboardstatRunes').addEventListener('click', () => toggleAutoSacrifice(0));\r\n    tab.querySelector('.dashboardstatChallenge').addEventListener('click', () => toggleAutoChallengeRun());\r\n    tab.querySelector('.dashboardstatSac').addEventListener('click', () => toggleAntAutoSacrifice(0));\r\n    settingsTab.appendChild(tab);\r\n    button.addEventListener('click', () => (open = !open) ? openDashboard() : exitDashboard());\r\n    button.innerText = 'Dashboard';\r\n    settingsTab.firstElementChild.insertAdjacentElement('beforebegin', button);\r\n};\r\nexport const main = () => {\r\n    Object.defineProperty(window, 'dashboard', {\r\n        value: enable\r\n    });\r\n};\r\n"],"sourceRoot":""}